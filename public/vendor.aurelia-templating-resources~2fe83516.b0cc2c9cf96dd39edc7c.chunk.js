(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendor.aurelia-templating-resources~2fe83516"],{

/***/ "aurelia-templating-resources":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/aurelia-templating-resources/dist/native-modules/aurelia-templating-resources.js ***!
  \*******************************************************************************************************/
/*! exports provided: AbstractRepeater, ArrayRepeatStrategy, AttrBindingBehavior, BindingSignaler, Compose, DebounceBindingBehavior, Else, Focus, FromViewBindingBehavior, HTMLSanitizer, Hide, If, MapRepeatStrategy, NullRepeatStrategy, NumberRepeatStrategy, OneTimeBindingBehavior, OneWayBindingBehavior, Repeat, RepeatStrategyLocator, Replaceable, SanitizeHTMLValueConverter, SelfBindingBehavior, SetRepeatStrategy, Show, SignalBindingBehavior, ThrottleBindingBehavior, ToViewBindingBehavior, TwoWayBindingBehavior, UpdateTriggerBindingBehavior, With, configure, createFullOverrideContext, getItemsSourceExpression, isOneTime, unwrapExpression, updateOneTimeBinding, updateOverrideContext, viewsRequireLifecycle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Promise) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractRepeater\", function() { return AbstractRepeater; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArrayRepeatStrategy\", function() { return ArrayRepeatStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttrBindingBehavior\", function() { return AttrBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BindingSignaler\", function() { return BindingSignaler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Compose\", function() { return Compose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DebounceBindingBehavior\", function() { return DebounceBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Else\", function() { return Else; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Focus\", function() { return Focus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FromViewBindingBehavior\", function() { return FromViewBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HTMLSanitizer\", function() { return HTMLSanitizer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Hide\", function() { return Hide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"If\", function() { return If; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MapRepeatStrategy\", function() { return MapRepeatStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NullRepeatStrategy\", function() { return NullRepeatStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NumberRepeatStrategy\", function() { return NumberRepeatStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OneTimeBindingBehavior\", function() { return OneTimeBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OneWayBindingBehavior\", function() { return OneWayBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Repeat\", function() { return Repeat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RepeatStrategyLocator\", function() { return RepeatStrategyLocator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Replaceable\", function() { return Replaceable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SanitizeHTMLValueConverter\", function() { return SanitizeHTMLValueConverter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelfBindingBehavior\", function() { return SelfBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SetRepeatStrategy\", function() { return SetRepeatStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Show\", function() { return Show; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignalBindingBehavior\", function() { return SignalBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThrottleBindingBehavior\", function() { return ThrottleBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ToViewBindingBehavior\", function() { return ToViewBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TwoWayBindingBehavior\", function() { return TwoWayBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UpdateTriggerBindingBehavior\", function() { return UpdateTriggerBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"With\", function() { return With; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"configure\", function() { return configure$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createFullOverrideContext\", function() { return createFullOverrideContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getItemsSourceExpression\", function() { return getItemsSourceExpression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isOneTime\", function() { return isOneTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unwrapExpression\", function() { return unwrapExpression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateOneTimeBinding\", function() { return updateOneTimeBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateOverrideContext\", function() { return updateOverrideContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"viewsRequireLifecycle\", function() { return viewsRequireLifecycle; });\n/* harmony import */ var aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurelia-dependency-injection */ \"3U8n\");\n/* harmony import */ var aurelia_pal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aurelia-pal */ \"70NS\");\n/* harmony import */ var aurelia_task_queue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aurelia-task-queue */ \"K/SW\");\n/* harmony import */ var aurelia_templating__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! aurelia-templating */ \"hij8\");\n/* harmony import */ var aurelia_binding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! aurelia-binding */ \"X5gX\");\n/* harmony import */ var aurelia_logging__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! aurelia-logging */ \"MP1E\");\n/* harmony import */ var aurelia_loader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! aurelia-loader */ \"ZdUM\");\n/* harmony import */ var aurelia_path__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! aurelia-path */ \"iD3O\");\n/* harmony import */ var aurelia_metadata__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! aurelia-metadata */ \"qrcG\");\n\n\n\n\n\n\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\n\nvar Compose = (function () {\r\n    function Compose(element, container, compositionEngine, viewSlot, viewResources, taskQueue) {\r\n        this.element = element;\r\n        this.container = container;\r\n        this.compositionEngine = compositionEngine;\r\n        this.viewSlot = viewSlot;\r\n        this.viewResources = viewResources;\r\n        this.taskQueue = taskQueue;\r\n        this.currentController = null;\r\n        this.currentViewModel = null;\r\n        this.changes = Object.create(null);\r\n    }\r\n    Compose.inject = function () {\r\n        return [aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].Element, aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_0__[\"Container\"], aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"CompositionEngine\"], aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewSlot\"], aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewResources\"], aurelia_task_queue__WEBPACK_IMPORTED_MODULE_2__[\"TaskQueue\"]];\r\n    };\r\n    Compose.prototype.created = function (owningView) {\r\n        this.owningView = owningView;\r\n    };\r\n    Compose.prototype.bind = function (bindingContext, overrideContext) {\r\n        this.bindingContext = bindingContext;\r\n        this.overrideContext = overrideContext;\r\n        var changes = this.changes;\r\n        changes.view = this.view;\r\n        changes.viewModel = this.viewModel;\r\n        changes.model = this.model;\r\n        if (!this.pendingTask) {\r\n            processChanges(this);\r\n        }\r\n    };\r\n    Compose.prototype.unbind = function () {\r\n        this.changes = Object.create(null);\r\n        this.bindingContext = null;\r\n        this.overrideContext = null;\r\n        var returnToCache = true;\r\n        var skipAnimation = true;\r\n        this.viewSlot.removeAll(returnToCache, skipAnimation);\r\n    };\r\n    Compose.prototype.modelChanged = function (newValue, oldValue) {\r\n        this.changes.model = newValue;\r\n        requestUpdate(this);\r\n    };\r\n    Compose.prototype.viewChanged = function (newValue, oldValue) {\r\n        this.changes.view = newValue;\r\n        requestUpdate(this);\r\n    };\r\n    Compose.prototype.viewModelChanged = function (newValue, oldValue) {\r\n        this.changes.viewModel = newValue;\r\n        requestUpdate(this);\r\n    };\r\n    __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"]\r\n    ], Compose.prototype, \"model\", void 0);\r\n    __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"]\r\n    ], Compose.prototype, \"view\", void 0);\r\n    __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"]\r\n    ], Compose.prototype, \"viewModel\", void 0);\r\n    __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"]\r\n    ], Compose.prototype, \"swapOrder\", void 0);\r\n    Compose = __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"noView\"],\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customElement\"])('compose')\r\n    ], Compose);\r\n    return Compose;\r\n}());\r\nfunction isEmpty(obj) {\r\n    for (var _ in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction tryActivateViewModel(vm, model) {\r\n    if (vm && typeof vm.activate === 'function') {\r\n        return Promise.resolve(vm.activate(model));\r\n    }\r\n}\r\nfunction createInstruction(composer, instruction) {\r\n    return Object.assign(instruction, {\r\n        bindingContext: composer.bindingContext,\r\n        overrideContext: composer.overrideContext,\r\n        owningView: composer.owningView,\r\n        container: composer.container,\r\n        viewSlot: composer.viewSlot,\r\n        viewResources: composer.viewResources,\r\n        currentController: composer.currentController,\r\n        host: composer.element,\r\n        swapOrder: composer.swapOrder\r\n    });\r\n}\r\nfunction processChanges(composer) {\r\n    var changes = composer.changes;\r\n    composer.changes = Object.create(null);\r\n    if (!('view' in changes) && !('viewModel' in changes) && ('model' in changes)) {\r\n        composer.pendingTask = tryActivateViewModel(composer.currentViewModel, changes.model);\r\n        if (!composer.pendingTask) {\r\n            return;\r\n        }\r\n    }\r\n    else {\r\n        var instruction = {\r\n            view: composer.view,\r\n            viewModel: composer.currentViewModel || composer.viewModel,\r\n            model: composer.model\r\n        };\r\n        instruction = Object.assign(instruction, changes);\r\n        instruction = createInstruction(composer, instruction);\r\n        composer.pendingTask = composer.compositionEngine.compose(instruction).then(function (controller) {\r\n            composer.currentController = controller;\r\n            composer.currentViewModel = controller ? controller.viewModel : null;\r\n        });\r\n    }\r\n    composer.pendingTask = composer.pendingTask\r\n        .then(function () {\r\n        completeCompositionTask(composer);\r\n    }, function (reason) {\r\n        completeCompositionTask(composer);\r\n        throw reason;\r\n    });\r\n}\r\nfunction completeCompositionTask(composer) {\r\n    composer.pendingTask = null;\r\n    if (!isEmpty(composer.changes)) {\r\n        processChanges(composer);\r\n    }\r\n}\r\nfunction requestUpdate(composer) {\r\n    if (composer.pendingTask || composer.updateRequested) {\r\n        return;\r\n    }\r\n    composer.updateRequested = true;\r\n    composer.taskQueue.queueMicroTask(function () {\r\n        composer.updateRequested = false;\r\n        processChanges(composer);\r\n    });\r\n}\n\nvar IfCore = (function () {\r\n    function IfCore(viewFactory, viewSlot) {\r\n        this.viewFactory = viewFactory;\r\n        this.viewSlot = viewSlot;\r\n        this.view = null;\r\n        this.bindingContext = null;\r\n        this.overrideContext = null;\r\n        this.showing = false;\r\n        this.cache = true;\r\n    }\r\n    IfCore.prototype.bind = function (bindingContext, overrideContext) {\r\n        this.bindingContext = bindingContext;\r\n        this.overrideContext = overrideContext;\r\n    };\r\n    IfCore.prototype.unbind = function () {\r\n        if (this.view === null) {\r\n            return;\r\n        }\r\n        this.view.unbind();\r\n        if (!this.viewFactory.isCaching) {\r\n            return;\r\n        }\r\n        if (this.showing) {\r\n            this.showing = false;\r\n            this.viewSlot.remove(this.view, true, true);\r\n        }\r\n        else {\r\n            this.view.returnToCache();\r\n        }\r\n        this.view = null;\r\n    };\r\n    IfCore.prototype._show = function () {\r\n        if (this.showing) {\r\n            if (!this.view.isBound) {\r\n                this.view.bind(this.bindingContext, this.overrideContext);\r\n            }\r\n            return;\r\n        }\r\n        if (this.view === null) {\r\n            this.view = this.viewFactory.create();\r\n        }\r\n        if (!this.view.isBound) {\r\n            this.view.bind(this.bindingContext, this.overrideContext);\r\n        }\r\n        this.showing = true;\r\n        return this.viewSlot.add(this.view);\r\n    };\r\n    IfCore.prototype._hide = function () {\r\n        var _this = this;\r\n        if (!this.showing) {\r\n            return;\r\n        }\r\n        this.showing = false;\r\n        var removed = this.viewSlot.remove(this.view);\r\n        if (removed instanceof Promise) {\r\n            return removed.then(function () {\r\n                _this._unbindView();\r\n            });\r\n        }\r\n        this._unbindView();\r\n    };\r\n    IfCore.prototype._unbindView = function () {\r\n        var cache = this.cache === 'false' ? false : !!this.cache;\r\n        this.view.unbind();\r\n        if (!cache) {\r\n            this.view = null;\r\n        }\r\n    };\r\n    return IfCore;\r\n}());\n\nvar If = (function (_super) {\r\n    __extends(If, _super);\r\n    function If() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.cache = true;\r\n        return _this;\r\n    }\r\n    If.prototype.bind = function (bindingContext, overrideContext) {\r\n        _super.prototype.bind.call(this, bindingContext, overrideContext);\r\n        if (this.condition) {\r\n            this._show();\r\n        }\r\n        else {\r\n            this._hide();\r\n        }\r\n    };\r\n    If.prototype.conditionChanged = function (newValue) {\r\n        this._update(newValue);\r\n    };\r\n    If.prototype._update = function (show) {\r\n        var _this = this;\r\n        if (this.animating) {\r\n            return;\r\n        }\r\n        var promise;\r\n        if (this.elseVm) {\r\n            promise = show ? this._swap(this.elseVm, this) : this._swap(this, this.elseVm);\r\n        }\r\n        else {\r\n            promise = show ? this._show() : this._hide();\r\n        }\r\n        if (promise) {\r\n            this.animating = true;\r\n            promise.then(function () {\r\n                _this.animating = false;\r\n                if (_this.condition !== _this.showing) {\r\n                    _this._update(_this.condition);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    If.prototype._swap = function (remove, add) {\r\n        switch (this.swapOrder) {\r\n            case 'before':\r\n                return Promise.resolve(add._show()).then(function () { return remove._hide(); });\r\n            case 'with':\r\n                return Promise.all([remove._hide(), add._show()]);\r\n            default:\r\n                var promise = remove._hide();\r\n                return promise ? promise.then(function () { return add._show(); }) : add._show();\r\n        }\r\n    };\r\n    __decorate([\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"])({ primaryProperty: true })\r\n    ], If.prototype, \"condition\", void 0);\r\n    __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"]\r\n    ], If.prototype, \"swapOrder\", void 0);\r\n    __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"]\r\n    ], If.prototype, \"cache\", void 0);\r\n    If = __decorate([\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customAttribute\"])('if'),\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"templateController\"],\r\n        Object(aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_0__[\"inject\"])(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"BoundViewFactory\"], aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewSlot\"])\r\n    ], If);\r\n    return If;\r\n}(IfCore));\n\nvar Else = (function (_super) {\r\n    __extends(Else, _super);\r\n    function Else(viewFactory, viewSlot) {\r\n        var _this = _super.call(this, viewFactory, viewSlot) || this;\r\n        _this._registerInIf();\r\n        return _this;\r\n    }\r\n    Else.prototype.bind = function (bindingContext, overrideContext) {\r\n        _super.prototype.bind.call(this, bindingContext, overrideContext);\r\n        if (this.ifVm.condition) {\r\n            this._hide();\r\n        }\r\n        else {\r\n            this._show();\r\n        }\r\n    };\r\n    Else.prototype._registerInIf = function () {\r\n        var previous = this.viewSlot.anchor.previousSibling;\r\n        while (previous && !previous.au) {\r\n            previous = previous.previousSibling;\r\n        }\r\n        if (!previous || !previous.au.if) {\r\n            throw new Error(\"Can't find matching If for Else custom attribute.\");\r\n        }\r\n        this.ifVm = previous.au.if.viewModel;\r\n        this.ifVm.elseVm = this;\r\n    };\r\n    Else = __decorate([\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customAttribute\"])('else'),\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"templateController\"],\r\n        Object(aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_0__[\"inject\"])(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"BoundViewFactory\"], aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewSlot\"])\r\n    ], Else);\r\n    return Else;\r\n}(IfCore));\n\nvar With = (function () {\r\n    function With(viewFactory, viewSlot) {\r\n        this.viewFactory = viewFactory;\r\n        this.viewSlot = viewSlot;\r\n        this.parentOverrideContext = null;\r\n        this.view = null;\r\n    }\r\n    With.prototype.bind = function (bindingContext, overrideContext) {\r\n        this.parentOverrideContext = overrideContext;\r\n        this.valueChanged(this.value);\r\n    };\r\n    With.prototype.valueChanged = function (newValue) {\r\n        var overrideContext = Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"createOverrideContext\"])(newValue, this.parentOverrideContext);\r\n        var view = this.view;\r\n        if (!view) {\r\n            view = this.view = this.viewFactory.create();\r\n            view.bind(newValue, overrideContext);\r\n            this.viewSlot.add(view);\r\n        }\r\n        else {\r\n            view.bind(newValue, overrideContext);\r\n        }\r\n    };\r\n    With.prototype.unbind = function () {\r\n        var view = this.view;\r\n        this.parentOverrideContext = null;\r\n        if (view) {\r\n            view.unbind();\r\n        }\r\n    };\r\n    With = __decorate([\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customAttribute\"])('with'),\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"templateController\"],\r\n        Object(aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_0__[\"inject\"])(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"BoundViewFactory\"], aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewSlot\"])\r\n    ], With);\r\n    return With;\r\n}());\n\nvar oneTime = aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].oneTime;\r\nfunction updateOverrideContexts(views, startIndex) {\r\n    var length = views.length;\r\n    if (startIndex > 0) {\r\n        startIndex = startIndex - 1;\r\n    }\r\n    for (; startIndex < length; ++startIndex) {\r\n        updateOverrideContext(views[startIndex].overrideContext, startIndex, length);\r\n    }\r\n}\r\nfunction createFullOverrideContext(repeat, data, index, length, key) {\r\n    var bindingContext = {};\r\n    var overrideContext = Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"createOverrideContext\"])(bindingContext, repeat.scope.overrideContext);\r\n    if (typeof key !== 'undefined') {\r\n        bindingContext[repeat.key] = key;\r\n        bindingContext[repeat.value] = data;\r\n    }\r\n    else {\r\n        bindingContext[repeat.local] = data;\r\n    }\r\n    updateOverrideContext(overrideContext, index, length);\r\n    return overrideContext;\r\n}\r\nfunction updateOverrideContext(overrideContext, index, length) {\r\n    var first = (index === 0);\r\n    var last = (index === length - 1);\r\n    var even = index % 2 === 0;\r\n    overrideContext.$index = index;\r\n    overrideContext.$first = first;\r\n    overrideContext.$last = last;\r\n    overrideContext.$middle = !(first || last);\r\n    overrideContext.$odd = !even;\r\n    overrideContext.$even = even;\r\n}\r\nfunction getItemsSourceExpression(instruction, attrName) {\r\n    return instruction.behaviorInstructions\r\n        .filter(function (bi) { return bi.originalAttrName === attrName; })[0]\r\n        .attributes\r\n        .items\r\n        .sourceExpression;\r\n}\r\nfunction unwrapExpression(expression) {\r\n    var unwrapped = false;\r\n    while (expression instanceof aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"BindingBehavior\"]) {\r\n        expression = expression.expression;\r\n    }\r\n    while (expression instanceof aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"ValueConverter\"]) {\r\n        expression = expression.expression;\r\n        unwrapped = true;\r\n    }\r\n    return unwrapped ? expression : null;\r\n}\r\nfunction isOneTime(expression) {\r\n    while (expression instanceof aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"BindingBehavior\"]) {\r\n        if (expression.name === 'oneTime') {\r\n            return true;\r\n        }\r\n        expression = expression.expression;\r\n    }\r\n    return false;\r\n}\r\nfunction updateOneTimeBinding(binding) {\r\n    if (binding.call && binding.mode === oneTime) {\r\n        binding.call(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"sourceContext\"]);\r\n    }\r\n    else if (binding.updateOneTimeBindings) {\r\n        binding.updateOneTimeBindings();\r\n    }\r\n}\r\nfunction indexOf(array, item, matcher, startIndex) {\r\n    if (!matcher) {\r\n        return array.indexOf(item);\r\n    }\r\n    var length = array.length;\r\n    for (var index = startIndex || 0; index < length; index++) {\r\n        if (matcher(array[index], item)) {\r\n            return index;\r\n        }\r\n    }\r\n    return -1;\r\n}\n\nvar ArrayRepeatStrategy = (function () {\r\n    function ArrayRepeatStrategy() {\r\n    }\r\n    ArrayRepeatStrategy.prototype.getCollectionObserver = function (observerLocator, items) {\r\n        return observerLocator.getArrayObserver(items);\r\n    };\r\n    ArrayRepeatStrategy.prototype.instanceChanged = function (repeat, items) {\r\n        var _this = this;\r\n        var itemsLength = items.length;\r\n        if (!items || itemsLength === 0) {\r\n            repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n            return;\r\n        }\r\n        var children = repeat.views();\r\n        var viewsLength = children.length;\r\n        if (viewsLength === 0) {\r\n            this._standardProcessInstanceChanged(repeat, items);\r\n            return;\r\n        }\r\n        if (repeat.viewsRequireLifecycle) {\r\n            var childrenSnapshot = children.slice(0);\r\n            var itemNameInBindingContext = repeat.local;\r\n            var matcher_1 = repeat.matcher();\r\n            var itemsPreviouslyInViews_1 = [];\r\n            var viewsToRemove = [];\r\n            for (var index = 0; index < viewsLength; index++) {\r\n                var view = childrenSnapshot[index];\r\n                var oldItem = view.bindingContext[itemNameInBindingContext];\r\n                if (indexOf(items, oldItem, matcher_1) === -1) {\r\n                    viewsToRemove.push(view);\r\n                }\r\n                else {\r\n                    itemsPreviouslyInViews_1.push(oldItem);\r\n                }\r\n            }\r\n            var updateViews = void 0;\r\n            var removePromise = void 0;\r\n            if (itemsPreviouslyInViews_1.length > 0) {\r\n                removePromise = repeat.removeViews(viewsToRemove, true, !repeat.viewsRequireLifecycle);\r\n                updateViews = function () {\r\n                    for (var index = 0; index < itemsLength; index++) {\r\n                        var item = items[index];\r\n                        var indexOfView = indexOf(itemsPreviouslyInViews_1, item, matcher_1, index);\r\n                        var view = void 0;\r\n                        if (indexOfView === -1) {\r\n                            var overrideContext = createFullOverrideContext(repeat, items[index], index, itemsLength);\r\n                            repeat.insertView(index, overrideContext.bindingContext, overrideContext);\r\n                            itemsPreviouslyInViews_1.splice(index, 0, undefined);\r\n                        }\r\n                        else if (indexOfView === index) {\r\n                            view = children[indexOfView];\r\n                            itemsPreviouslyInViews_1[indexOfView] = undefined;\r\n                        }\r\n                        else {\r\n                            view = children[indexOfView];\r\n                            repeat.moveView(indexOfView, index);\r\n                            itemsPreviouslyInViews_1.splice(indexOfView, 1);\r\n                            itemsPreviouslyInViews_1.splice(index, 0, undefined);\r\n                        }\r\n                        if (view) {\r\n                            updateOverrideContext(view.overrideContext, index, itemsLength);\r\n                        }\r\n                    }\r\n                    _this._inPlaceProcessItems(repeat, items);\r\n                };\r\n            }\r\n            else {\r\n                removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n                updateViews = function () { return _this._standardProcessInstanceChanged(repeat, items); };\r\n            }\r\n            if (removePromise instanceof Promise) {\r\n                removePromise.then(updateViews);\r\n            }\r\n            else {\r\n                updateViews();\r\n            }\r\n        }\r\n        else {\r\n            this._inPlaceProcessItems(repeat, items);\r\n        }\r\n    };\r\n    ArrayRepeatStrategy.prototype._standardProcessInstanceChanged = function (repeat, items) {\r\n        for (var i = 0, ii = items.length; i < ii; i++) {\r\n            var overrideContext = createFullOverrideContext(repeat, items[i], i, ii);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n        }\r\n    };\r\n    ArrayRepeatStrategy.prototype._inPlaceProcessItems = function (repeat, items) {\r\n        var itemsLength = items.length;\r\n        var viewsLength = repeat.viewCount();\r\n        while (viewsLength > itemsLength) {\r\n            viewsLength--;\r\n            repeat.removeView(viewsLength, true, !repeat.viewsRequireLifecycle);\r\n        }\r\n        var local = repeat.local;\r\n        for (var i = 0; i < viewsLength; i++) {\r\n            var view = repeat.view(i);\r\n            var last = i === itemsLength - 1;\r\n            var middle = i !== 0 && !last;\r\n            var bindingContext = view.bindingContext;\r\n            var overrideContext = view.overrideContext;\r\n            if (bindingContext[local] === items[i]\r\n                && overrideContext.$middle === middle\r\n                && overrideContext.$last === last) {\r\n                continue;\r\n            }\r\n            bindingContext[local] = items[i];\r\n            overrideContext.$middle = middle;\r\n            overrideContext.$last = last;\r\n            repeat.updateBindings(view);\r\n        }\r\n        for (var i = viewsLength; i < itemsLength; i++) {\r\n            var overrideContext = createFullOverrideContext(repeat, items[i], i, itemsLength);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n        }\r\n    };\r\n    ArrayRepeatStrategy.prototype.instanceMutated = function (repeat, array, splices) {\r\n        var _this = this;\r\n        if (repeat.__queuedSplices) {\r\n            for (var i = 0, ii = splices.length; i < ii; ++i) {\r\n                var _a = splices[i], index = _a.index, removed = _a.removed, addedCount = _a.addedCount;\r\n                Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"mergeSplice\"])(repeat.__queuedSplices, index, removed, addedCount);\r\n            }\r\n            repeat.__array = array.slice(0);\r\n            return;\r\n        }\r\n        var maybePromise = this._runSplices(repeat, array.slice(0), splices);\r\n        if (maybePromise instanceof Promise) {\r\n            var queuedSplices_1 = repeat.__queuedSplices = [];\r\n            var runQueuedSplices_1 = function () {\r\n                if (!queuedSplices_1.length) {\r\n                    repeat.__queuedSplices = undefined;\r\n                    repeat.__array = undefined;\r\n                    return;\r\n                }\r\n                var nextPromise = _this._runSplices(repeat, repeat.__array, queuedSplices_1) || Promise.resolve();\r\n                queuedSplices_1 = repeat.__queuedSplices = [];\r\n                nextPromise.then(runQueuedSplices_1);\r\n            };\r\n            maybePromise.then(runQueuedSplices_1);\r\n        }\r\n    };\r\n    ArrayRepeatStrategy.prototype._runSplices = function (repeat, array, splices) {\r\n        var _this = this;\r\n        var removeDelta = 0;\r\n        var rmPromises = [];\r\n        for (var i = 0, ii = splices.length; i < ii; ++i) {\r\n            var splice = splices[i];\r\n            var removed = splice.removed;\r\n            for (var j = 0, jj = removed.length; j < jj; ++j) {\r\n                var viewOrPromise = repeat.removeView(splice.index + removeDelta + rmPromises.length, true);\r\n                if (viewOrPromise instanceof Promise) {\r\n                    rmPromises.push(viewOrPromise);\r\n                }\r\n            }\r\n            removeDelta -= splice.addedCount;\r\n        }\r\n        if (rmPromises.length > 0) {\r\n            return Promise.all(rmPromises).then(function () {\r\n                var spliceIndexLow = _this._handleAddedSplices(repeat, array, splices);\r\n                updateOverrideContexts(repeat.views(), spliceIndexLow);\r\n            });\r\n        }\r\n        var spliceIndexLow = this._handleAddedSplices(repeat, array, splices);\r\n        updateOverrideContexts(repeat.views(), spliceIndexLow);\r\n        return undefined;\r\n    };\r\n    ArrayRepeatStrategy.prototype._handleAddedSplices = function (repeat, array, splices) {\r\n        var spliceIndex;\r\n        var spliceIndexLow;\r\n        var arrayLength = array.length;\r\n        for (var i = 0, ii = splices.length; i < ii; ++i) {\r\n            var splice = splices[i];\r\n            var addIndex = spliceIndex = splice.index;\r\n            var end = splice.index + splice.addedCount;\r\n            if (typeof spliceIndexLow === 'undefined' || spliceIndexLow === null || spliceIndexLow > splice.index) {\r\n                spliceIndexLow = spliceIndex;\r\n            }\r\n            for (; addIndex < end; ++addIndex) {\r\n                var overrideContext = createFullOverrideContext(repeat, array[addIndex], addIndex, arrayLength);\r\n                repeat.insertView(addIndex, overrideContext.bindingContext, overrideContext);\r\n            }\r\n        }\r\n        return spliceIndexLow;\r\n    };\r\n    return ArrayRepeatStrategy;\r\n}());\n\nvar MapRepeatStrategy = (function () {\r\n    function MapRepeatStrategy() {\r\n    }\r\n    MapRepeatStrategy.prototype.getCollectionObserver = function (observerLocator, items) {\r\n        return observerLocator.getMapObserver(items);\r\n    };\r\n    MapRepeatStrategy.prototype.instanceChanged = function (repeat, items) {\r\n        var _this = this;\r\n        var removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n        if (removePromise instanceof Promise) {\r\n            removePromise.then(function () { return _this._standardProcessItems(repeat, items); });\r\n            return;\r\n        }\r\n        this._standardProcessItems(repeat, items);\r\n    };\r\n    MapRepeatStrategy.prototype._standardProcessItems = function (repeat, items) {\r\n        var index = 0;\r\n        var overrideContext;\r\n        items.forEach(function (value, key) {\r\n            overrideContext = createFullOverrideContext(repeat, value, index, items.size, key);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n            ++index;\r\n        });\r\n    };\r\n    MapRepeatStrategy.prototype.instanceMutated = function (repeat, map, records) {\r\n        var key;\r\n        var i;\r\n        var ii;\r\n        var overrideContext;\r\n        var removeIndex;\r\n        var addIndex;\r\n        var record;\r\n        var rmPromises = [];\r\n        var viewOrPromise;\r\n        for (i = 0, ii = records.length; i < ii; ++i) {\r\n            record = records[i];\r\n            key = record.key;\r\n            switch (record.type) {\r\n                case 'update':\r\n                    removeIndex = this._getViewIndexByKey(repeat, key);\r\n                    viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);\r\n                    if (viewOrPromise instanceof Promise) {\r\n                        rmPromises.push(viewOrPromise);\r\n                    }\r\n                    overrideContext = createFullOverrideContext(repeat, map.get(key), removeIndex, map.size, key);\r\n                    repeat.insertView(removeIndex, overrideContext.bindingContext, overrideContext);\r\n                    break;\r\n                case 'add':\r\n                    addIndex = repeat.viewCount() <= map.size - 1 ? repeat.viewCount() : map.size - 1;\r\n                    overrideContext = createFullOverrideContext(repeat, map.get(key), addIndex, map.size, key);\r\n                    repeat.insertView(map.size - 1, overrideContext.bindingContext, overrideContext);\r\n                    break;\r\n                case 'delete':\r\n                    if (record.oldValue === undefined) {\r\n                        return;\r\n                    }\r\n                    removeIndex = this._getViewIndexByKey(repeat, key);\r\n                    viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);\r\n                    if (viewOrPromise instanceof Promise) {\r\n                        rmPromises.push(viewOrPromise);\r\n                    }\r\n                    break;\r\n                case 'clear':\r\n                    repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n                    break;\r\n                default:\r\n                    continue;\r\n            }\r\n        }\r\n        if (rmPromises.length > 0) {\r\n            Promise.all(rmPromises).then(function () {\r\n                updateOverrideContexts(repeat.views(), 0);\r\n            });\r\n        }\r\n        else {\r\n            updateOverrideContexts(repeat.views(), 0);\r\n        }\r\n    };\r\n    MapRepeatStrategy.prototype._getViewIndexByKey = function (repeat, key) {\r\n        var i;\r\n        var ii;\r\n        var child;\r\n        for (i = 0, ii = repeat.viewCount(); i < ii; ++i) {\r\n            child = repeat.view(i);\r\n            if (child.bindingContext[repeat.key] === key) {\r\n                return i;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    return MapRepeatStrategy;\r\n}());\n\nvar NullRepeatStrategy = (function () {\r\n    function NullRepeatStrategy() {\r\n    }\r\n    NullRepeatStrategy.prototype.instanceChanged = function (repeat, items) {\r\n        repeat.removeAllViews(true);\r\n    };\r\n    NullRepeatStrategy.prototype.getCollectionObserver = function (observerLocator, items) {\r\n    };\r\n    return NullRepeatStrategy;\r\n}());\n\nvar NumberRepeatStrategy = (function () {\r\n    function NumberRepeatStrategy() {\r\n    }\r\n    NumberRepeatStrategy.prototype.getCollectionObserver = function () {\r\n        return null;\r\n    };\r\n    NumberRepeatStrategy.prototype.instanceChanged = function (repeat, value) {\r\n        var _this = this;\r\n        var removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n        if (removePromise instanceof Promise) {\r\n            removePromise.then(function () { return _this._standardProcessItems(repeat, value); });\r\n            return;\r\n        }\r\n        this._standardProcessItems(repeat, value);\r\n    };\r\n    NumberRepeatStrategy.prototype._standardProcessItems = function (repeat, value) {\r\n        var childrenLength = repeat.viewCount();\r\n        var i;\r\n        var ii;\r\n        var overrideContext;\r\n        var viewsToRemove;\r\n        value = Math.floor(value);\r\n        viewsToRemove = childrenLength - value;\r\n        if (viewsToRemove > 0) {\r\n            if (viewsToRemove > childrenLength) {\r\n                viewsToRemove = childrenLength;\r\n            }\r\n            for (i = 0, ii = viewsToRemove; i < ii; ++i) {\r\n                repeat.removeView(childrenLength - (i + 1), true, !repeat.viewsRequireLifecycle);\r\n            }\r\n            return;\r\n        }\r\n        for (i = childrenLength, ii = value; i < ii; ++i) {\r\n            overrideContext = createFullOverrideContext(repeat, i, i, ii);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n        }\r\n        updateOverrideContexts(repeat.views(), 0);\r\n    };\r\n    return NumberRepeatStrategy;\r\n}());\n\nvar SetRepeatStrategy = (function () {\r\n    function SetRepeatStrategy() {\r\n    }\r\n    SetRepeatStrategy.prototype.getCollectionObserver = function (observerLocator, items) {\r\n        return observerLocator.getSetObserver(items);\r\n    };\r\n    SetRepeatStrategy.prototype.instanceChanged = function (repeat, items) {\r\n        var _this = this;\r\n        var removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n        if (removePromise instanceof Promise) {\r\n            removePromise.then(function () { return _this._standardProcessItems(repeat, items); });\r\n            return;\r\n        }\r\n        this._standardProcessItems(repeat, items);\r\n    };\r\n    SetRepeatStrategy.prototype._standardProcessItems = function (repeat, items) {\r\n        var index = 0;\r\n        var overrideContext;\r\n        items.forEach(function (value) {\r\n            overrideContext = createFullOverrideContext(repeat, value, index, items.size);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n            ++index;\r\n        });\r\n    };\r\n    SetRepeatStrategy.prototype.instanceMutated = function (repeat, set, records) {\r\n        var value;\r\n        var i;\r\n        var ii;\r\n        var overrideContext;\r\n        var removeIndex;\r\n        var record;\r\n        var rmPromises = [];\r\n        var viewOrPromise;\r\n        for (i = 0, ii = records.length; i < ii; ++i) {\r\n            record = records[i];\r\n            value = record.value;\r\n            switch (record.type) {\r\n                case 'add':\r\n                    var size = Math.max(set.size - 1, 0);\r\n                    overrideContext = createFullOverrideContext(repeat, value, size, set.size);\r\n                    repeat.insertView(size, overrideContext.bindingContext, overrideContext);\r\n                    break;\r\n                case 'delete':\r\n                    removeIndex = this._getViewIndexByValue(repeat, value);\r\n                    viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);\r\n                    if (viewOrPromise instanceof Promise) {\r\n                        rmPromises.push(viewOrPromise);\r\n                    }\r\n                    break;\r\n                case 'clear':\r\n                    repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n                    break;\r\n                default:\r\n                    continue;\r\n            }\r\n        }\r\n        if (rmPromises.length > 0) {\r\n            Promise.all(rmPromises).then(function () {\r\n                updateOverrideContexts(repeat.views(), 0);\r\n            });\r\n        }\r\n        else {\r\n            updateOverrideContexts(repeat.views(), 0);\r\n        }\r\n    };\r\n    SetRepeatStrategy.prototype._getViewIndexByValue = function (repeat, value) {\r\n        var i;\r\n        var ii;\r\n        var child;\r\n        for (i = 0, ii = repeat.viewCount(); i < ii; ++i) {\r\n            child = repeat.view(i);\r\n            if (child.bindingContext[repeat.local] === value) {\r\n                return i;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    return SetRepeatStrategy;\r\n}());\n\nvar RepeatStrategyLocator = (function () {\r\n    function RepeatStrategyLocator() {\r\n        this.matchers = [];\r\n        this.strategies = [];\r\n        this.addStrategy(function (items) { return items === null || items === undefined; }, new NullRepeatStrategy());\r\n        this.addStrategy(function (items) { return items instanceof Array; }, new ArrayRepeatStrategy());\r\n        this.addStrategy(function (items) { return items instanceof Map; }, new MapRepeatStrategy());\r\n        this.addStrategy(function (items) { return items instanceof Set; }, new SetRepeatStrategy());\r\n        this.addStrategy(function (items) { return typeof items === 'number'; }, new NumberRepeatStrategy());\r\n    }\r\n    RepeatStrategyLocator.prototype.addStrategy = function (matcher, strategy) {\r\n        this.matchers.push(matcher);\r\n        this.strategies.push(strategy);\r\n    };\r\n    RepeatStrategyLocator.prototype.getStrategy = function (items) {\r\n        var matchers = this.matchers;\r\n        for (var i = 0, ii = matchers.length; i < ii; ++i) {\r\n            if (matchers[i](items)) {\r\n                return this.strategies[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return RepeatStrategyLocator;\r\n}());\n\nvar lifecycleOptionalBehaviors = ['focus', 'if', 'else', 'repeat', 'show', 'hide', 'with'];\r\nfunction behaviorRequiresLifecycle(instruction) {\r\n    var t = instruction.type;\r\n    var name = t.elementName !== null ? t.elementName : t.attributeName;\r\n    return lifecycleOptionalBehaviors.indexOf(name) === -1 && (t.handlesAttached || t.handlesBind || t.handlesCreated || t.handlesDetached || t.handlesUnbind)\r\n        || t.viewFactory && viewsRequireLifecycle(t.viewFactory)\r\n        || instruction.viewFactory && viewsRequireLifecycle(instruction.viewFactory);\r\n}\r\nfunction targetRequiresLifecycle(instruction) {\r\n    var behaviors = instruction.behaviorInstructions;\r\n    if (behaviors) {\r\n        var i = behaviors.length;\r\n        while (i--) {\r\n            if (behaviorRequiresLifecycle(behaviors[i])) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return instruction.viewFactory && viewsRequireLifecycle(instruction.viewFactory);\r\n}\r\nfunction viewsRequireLifecycle(viewFactory) {\r\n    if ('_viewsRequireLifecycle' in viewFactory) {\r\n        return viewFactory._viewsRequireLifecycle;\r\n    }\r\n    viewFactory._viewsRequireLifecycle = false;\r\n    if (viewFactory.viewFactory) {\r\n        viewFactory._viewsRequireLifecycle = viewsRequireLifecycle(viewFactory.viewFactory);\r\n        return viewFactory._viewsRequireLifecycle;\r\n    }\r\n    if (viewFactory.template.querySelector('.au-animate')) {\r\n        viewFactory._viewsRequireLifecycle = true;\r\n        return true;\r\n    }\r\n    for (var id in viewFactory.instructions) {\r\n        if (targetRequiresLifecycle(viewFactory.instructions[id])) {\r\n            viewFactory._viewsRequireLifecycle = true;\r\n            return true;\r\n        }\r\n    }\r\n    viewFactory._viewsRequireLifecycle = false;\r\n    return false;\r\n}\n\nvar AbstractRepeater = (function () {\r\n    function AbstractRepeater(options) {\r\n        Object.assign(this, {\r\n            local: 'items',\r\n            viewsRequireLifecycle: true\r\n        }, options);\r\n    }\r\n    AbstractRepeater.prototype.viewCount = function () {\r\n        throw new Error('subclass must implement `viewCount`');\r\n    };\r\n    AbstractRepeater.prototype.views = function () {\r\n        throw new Error('subclass must implement `views`');\r\n    };\r\n    AbstractRepeater.prototype.view = function (index) {\r\n        throw new Error('subclass must implement `view`');\r\n    };\r\n    AbstractRepeater.prototype.matcher = function () {\r\n        throw new Error('subclass must implement `matcher`');\r\n    };\r\n    AbstractRepeater.prototype.addView = function (bindingContext, overrideContext) {\r\n        throw new Error('subclass must implement `addView`');\r\n    };\r\n    AbstractRepeater.prototype.insertView = function (index, bindingContext, overrideContext) {\r\n        throw new Error('subclass must implement `insertView`');\r\n    };\r\n    AbstractRepeater.prototype.moveView = function (sourceIndex, targetIndex) {\r\n        throw new Error('subclass must implement `moveView`');\r\n    };\r\n    AbstractRepeater.prototype.removeAllViews = function (returnToCache, skipAnimation) {\r\n        throw new Error('subclass must implement `removeAllViews`');\r\n    };\r\n    AbstractRepeater.prototype.removeViews = function (viewsToRemove, returnToCache, skipAnimation) {\r\n        throw new Error('subclass must implement `removeView`');\r\n    };\r\n    AbstractRepeater.prototype.removeView = function (index, returnToCache, skipAnimation) {\r\n        throw new Error('subclass must implement `removeView`');\r\n    };\r\n    AbstractRepeater.prototype.updateBindings = function (view) {\r\n        throw new Error('subclass must implement `updateBindings`');\r\n    };\r\n    return AbstractRepeater;\r\n}());\n\nvar Repeat = (function (_super) {\r\n    __extends(Repeat, _super);\r\n    function Repeat(viewFactory, instruction, viewSlot, viewResources, observerLocator, strategyLocator) {\r\n        var _this = _super.call(this, {\r\n            local: 'item',\r\n            viewsRequireLifecycle: viewsRequireLifecycle(viewFactory)\r\n        }) || this;\r\n        _this.viewFactory = viewFactory;\r\n        _this.instruction = instruction;\r\n        _this.viewSlot = viewSlot;\r\n        _this.lookupFunctions = viewResources.lookupFunctions;\r\n        _this.observerLocator = observerLocator;\r\n        _this.key = 'key';\r\n        _this.value = 'value';\r\n        _this.strategyLocator = strategyLocator;\r\n        _this.ignoreMutation = false;\r\n        _this.sourceExpression = getItemsSourceExpression(_this.instruction, 'repeat.for');\r\n        _this.isOneTime = isOneTime(_this.sourceExpression);\r\n        _this.viewsRequireLifecycle = viewsRequireLifecycle(viewFactory);\r\n        return _this;\r\n    }\r\n    Repeat.prototype.call = function (context, changes) {\r\n        this[context](this.items, changes);\r\n    };\r\n    Repeat.prototype.bind = function (bindingContext, overrideContext) {\r\n        this.scope = { bindingContext: bindingContext, overrideContext: overrideContext };\r\n        this.matcherBinding = this._captureAndRemoveMatcherBinding();\r\n        this.itemsChanged();\r\n    };\r\n    Repeat.prototype.unbind = function () {\r\n        this.scope = null;\r\n        this.items = null;\r\n        this.matcherBinding = null;\r\n        this.viewSlot.removeAll(true, true);\r\n        this._unsubscribeCollection();\r\n    };\r\n    Repeat.prototype._unsubscribeCollection = function () {\r\n        if (this.collectionObserver) {\r\n            this.collectionObserver.unsubscribe(this.callContext, this);\r\n            this.collectionObserver = null;\r\n            this.callContext = null;\r\n        }\r\n    };\r\n    Repeat.prototype.itemsChanged = function () {\r\n        var _this = this;\r\n        this._unsubscribeCollection();\r\n        if (!this.scope) {\r\n            return;\r\n        }\r\n        var items = this.items;\r\n        this.strategy = this.strategyLocator.getStrategy(items);\r\n        if (!this.strategy) {\r\n            throw new Error(\"Value for '\" + this.sourceExpression + \"' is non-repeatable\");\r\n        }\r\n        if (!this.isOneTime && !this._observeInnerCollection()) {\r\n            this._observeCollection();\r\n        }\r\n        this.ignoreMutation = true;\r\n        this.strategy.instanceChanged(this, items);\r\n        this.observerLocator.taskQueue.queueMicroTask(function () {\r\n            _this.ignoreMutation = false;\r\n        });\r\n    };\r\n    Repeat.prototype._getInnerCollection = function () {\r\n        var expression = unwrapExpression(this.sourceExpression);\r\n        if (!expression) {\r\n            return null;\r\n        }\r\n        return expression.evaluate(this.scope, null);\r\n    };\r\n    Repeat.prototype.handleCollectionMutated = function (collection, changes) {\r\n        if (!this.collectionObserver) {\r\n            return;\r\n        }\r\n        if (this.ignoreMutation) {\r\n            return;\r\n        }\r\n        this.strategy.instanceMutated(this, collection, changes);\r\n    };\r\n    Repeat.prototype.handleInnerCollectionMutated = function (collection, changes) {\r\n        var _this = this;\r\n        if (!this.collectionObserver) {\r\n            return;\r\n        }\r\n        if (this.ignoreMutation) {\r\n            return;\r\n        }\r\n        this.ignoreMutation = true;\r\n        var newItems = this.sourceExpression.evaluate(this.scope, this.lookupFunctions);\r\n        this.observerLocator.taskQueue.queueMicroTask(function () { return _this.ignoreMutation = false; });\r\n        if (newItems === this.items) {\r\n            this.itemsChanged();\r\n        }\r\n        else {\r\n            this.items = newItems;\r\n        }\r\n    };\r\n    Repeat.prototype._observeInnerCollection = function () {\r\n        var items = this._getInnerCollection();\r\n        var strategy = this.strategyLocator.getStrategy(items);\r\n        if (!strategy) {\r\n            return false;\r\n        }\r\n        this.collectionObserver = strategy.getCollectionObserver(this.observerLocator, items);\r\n        if (!this.collectionObserver) {\r\n            return false;\r\n        }\r\n        this.callContext = 'handleInnerCollectionMutated';\r\n        this.collectionObserver.subscribe(this.callContext, this);\r\n        return true;\r\n    };\r\n    Repeat.prototype._observeCollection = function () {\r\n        var items = this.items;\r\n        this.collectionObserver = this.strategy.getCollectionObserver(this.observerLocator, items);\r\n        if (this.collectionObserver) {\r\n            this.callContext = 'handleCollectionMutated';\r\n            this.collectionObserver.subscribe(this.callContext, this);\r\n        }\r\n    };\r\n    Repeat.prototype._captureAndRemoveMatcherBinding = function () {\r\n        if (this.viewFactory.viewFactory) {\r\n            var instructions = this.viewFactory.viewFactory.instructions;\r\n            var instructionIds = Object.keys(instructions);\r\n            for (var i = 0; i < instructionIds.length; i++) {\r\n                var expressions = instructions[instructionIds[i]].expressions;\r\n                if (expressions) {\r\n                    for (var ii = 0; ii < expressions.length; ii++) {\r\n                        if (expressions[ii].targetProperty === 'matcher') {\r\n                            var matcherBinding = expressions[ii];\r\n                            expressions.splice(ii, 1);\r\n                            return matcherBinding;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    Repeat.prototype.viewCount = function () { return this.viewSlot.children.length; };\r\n    Repeat.prototype.views = function () { return this.viewSlot.children; };\r\n    Repeat.prototype.view = function (index) { return this.viewSlot.children[index]; };\r\n    Repeat.prototype.matcher = function () { return this.matcherBinding ? this.matcherBinding.sourceExpression.evaluate(this.scope, this.matcherBinding.lookupFunctions) : null; };\r\n    Repeat.prototype.addView = function (bindingContext, overrideContext) {\r\n        var view = this.viewFactory.create();\r\n        view.bind(bindingContext, overrideContext);\r\n        this.viewSlot.add(view);\r\n    };\r\n    Repeat.prototype.insertView = function (index, bindingContext, overrideContext) {\r\n        var view = this.viewFactory.create();\r\n        view.bind(bindingContext, overrideContext);\r\n        this.viewSlot.insert(index, view);\r\n    };\r\n    Repeat.prototype.moveView = function (sourceIndex, targetIndex) {\r\n        this.viewSlot.move(sourceIndex, targetIndex);\r\n    };\r\n    Repeat.prototype.removeAllViews = function (returnToCache, skipAnimation) {\r\n        return this.viewSlot.removeAll(returnToCache, skipAnimation);\r\n    };\r\n    Repeat.prototype.removeViews = function (viewsToRemove, returnToCache, skipAnimation) {\r\n        return this.viewSlot.removeMany(viewsToRemove, returnToCache, skipAnimation);\r\n    };\r\n    Repeat.prototype.removeView = function (index, returnToCache, skipAnimation) {\r\n        return this.viewSlot.removeAt(index, returnToCache, skipAnimation);\r\n    };\r\n    Repeat.prototype.updateBindings = function (view) {\r\n        var $view = view;\r\n        var j = $view.bindings.length;\r\n        while (j--) {\r\n            updateOneTimeBinding($view.bindings[j]);\r\n        }\r\n        j = $view.controllers.length;\r\n        while (j--) {\r\n            var k = $view.controllers[j].boundProperties.length;\r\n            while (k--) {\r\n                var binding = $view.controllers[j].boundProperties[k].binding;\r\n                updateOneTimeBinding(binding);\r\n            }\r\n        }\r\n    };\r\n    __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"]\r\n    ], Repeat.prototype, \"items\", void 0);\r\n    __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"]\r\n    ], Repeat.prototype, \"local\", void 0);\r\n    __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"]\r\n    ], Repeat.prototype, \"key\", void 0);\r\n    __decorate([\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"]\r\n    ], Repeat.prototype, \"value\", void 0);\r\n    Repeat = __decorate([\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customAttribute\"])('repeat'),\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"templateController\"],\r\n        Object(aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_0__[\"inject\"])(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"BoundViewFactory\"], aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"TargetInstruction\"], aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewSlot\"], aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewResources\"], aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"ObserverLocator\"], RepeatStrategyLocator)\r\n    ], Repeat);\r\n    return Repeat;\r\n}(AbstractRepeater));\n\nvar aureliaHideClassName = 'aurelia-hide';\r\nvar aureliaHideClass = \".\" + aureliaHideClassName + \" { display:none !important; }\";\r\nfunction injectAureliaHideStyleAtHead() {\r\n    aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].injectStyles(aureliaHideClass);\r\n}\r\nfunction injectAureliaHideStyleAtBoundary(domBoundary) {\r\n    if (aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"FEATURE\"].shadowDOM && domBoundary && !domBoundary.hasAureliaHideStyle) {\r\n        domBoundary.hasAureliaHideStyle = true;\r\n        aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].injectStyles(aureliaHideClass, domBoundary);\r\n    }\r\n}\n\nvar Show = (function () {\r\n    function Show(element, animator, domBoundary) {\r\n        this.element = element;\r\n        this.animator = animator;\r\n        this.domBoundary = domBoundary;\r\n    }\r\n    Show.inject = function () {\r\n        return [aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].Element, aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"Animator\"], aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"].of(aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].boundary, true)];\r\n    };\r\n    Show.prototype.created = function () {\r\n        injectAureliaHideStyleAtBoundary(this.domBoundary);\r\n    };\r\n    Show.prototype.valueChanged = function (newValue) {\r\n        var element = this.element;\r\n        var animator = this.animator;\r\n        if (newValue) {\r\n            animator.removeClass(element, aureliaHideClassName);\r\n        }\r\n        else {\r\n            animator.addClass(element, aureliaHideClassName);\r\n        }\r\n    };\r\n    Show.prototype.bind = function (bindingContext) {\r\n        this.valueChanged(this.value);\r\n    };\r\n    Show = __decorate([\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customAttribute\"])('show')\r\n    ], Show);\r\n    return Show;\r\n}());\n\nvar Hide = (function () {\r\n    function Hide(element, animator, domBoundary) {\r\n        this.element = element;\r\n        this.animator = animator;\r\n        this.domBoundary = domBoundary;\r\n    }\r\n    Hide.inject = function () {\r\n        return [aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].Element, aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"Animator\"], aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"].of(aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].boundary, true)];\r\n    };\r\n    Hide.prototype.created = function () {\r\n        injectAureliaHideStyleAtBoundary(this.domBoundary);\r\n    };\r\n    Hide.prototype.valueChanged = function (newValue) {\r\n        if (newValue) {\r\n            this.animator.addClass(this.element, aureliaHideClassName);\r\n        }\r\n        else {\r\n            this.animator.removeClass(this.element, aureliaHideClassName);\r\n        }\r\n    };\r\n    Hide.prototype.bind = function (bindingContext) {\r\n        this.valueChanged(this.value);\r\n    };\r\n    Hide.prototype.value = function (value) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    Hide = __decorate([\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customAttribute\"])('hide')\r\n    ], Hide);\r\n    return Hide;\r\n}());\n\nvar SCRIPT_REGEX = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi;\r\nvar needsToWarn = true;\r\nvar HTMLSanitizer = (function () {\r\n    function HTMLSanitizer() {\r\n    }\r\n    HTMLSanitizer.prototype.sanitize = function (input) {\r\n        if (needsToWarn) {\r\n            needsToWarn = false;\r\n            Object(aurelia_logging__WEBPACK_IMPORTED_MODULE_5__[\"getLogger\"])('html-sanitizer')\r\n                .warn(\"CAUTION: The default HTMLSanitizer does NOT provide security against a wide variety of sophisticated XSS attacks,\\nand should not be relied on for sanitizing input from unknown sources.\\nPlease see https://aurelia.io/docs/binding/basics#element-content for instructions on how to use a secure solution like DOMPurify or sanitize-html.\");\r\n        }\r\n        return input.replace(SCRIPT_REGEX, '');\r\n    };\r\n    return HTMLSanitizer;\r\n}());\n\nvar SanitizeHTMLValueConverter = (function () {\r\n    function SanitizeHTMLValueConverter(sanitizer) {\r\n        this.sanitizer = sanitizer;\r\n    }\r\n    SanitizeHTMLValueConverter.prototype.toView = function (untrustedMarkup) {\r\n        if (untrustedMarkup === null || untrustedMarkup === undefined) {\r\n            return null;\r\n        }\r\n        return this.sanitizer.sanitize(untrustedMarkup);\r\n    };\r\n    SanitizeHTMLValueConverter = __decorate([\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"valueConverter\"])('sanitizeHTML'),\r\n        Object(aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_0__[\"inject\"])(HTMLSanitizer)\r\n    ], SanitizeHTMLValueConverter);\r\n    return SanitizeHTMLValueConverter;\r\n}());\n\nvar Replaceable = (function () {\r\n    function Replaceable(viewFactory, viewSlot) {\r\n        this.viewFactory = viewFactory;\r\n        this.viewSlot = viewSlot;\r\n        this.view = null;\r\n    }\r\n    Replaceable.prototype.bind = function (bindingContext, overrideContext) {\r\n        if (this.view === null) {\r\n            this.view = this.viewFactory.create();\r\n            this.viewSlot.add(this.view);\r\n        }\r\n        this.view.bind(bindingContext, overrideContext);\r\n    };\r\n    Replaceable.prototype.unbind = function () {\r\n        this.view.unbind();\r\n    };\r\n    Replaceable = __decorate([\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customAttribute\"])('replaceable'),\r\n        aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"templateController\"],\r\n        Object(aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_0__[\"inject\"])(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"BoundViewFactory\"], aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewSlot\"])\r\n    ], Replaceable);\r\n    return Replaceable;\r\n}());\n\nvar Focus = (function () {\r\n    function Focus(element, taskQueue) {\r\n        this.element = element;\r\n        this.taskQueue = taskQueue;\r\n        this.isAttached = false;\r\n        this.needsApply = false;\r\n    }\r\n    Focus.inject = function () {\r\n        return [aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].Element, aurelia_task_queue__WEBPACK_IMPORTED_MODULE_2__[\"TaskQueue\"]];\r\n    };\r\n    Focus.prototype.valueChanged = function (newValue) {\r\n        if (this.isAttached) {\r\n            this._apply();\r\n        }\r\n        else {\r\n            this.needsApply = true;\r\n        }\r\n    };\r\n    Focus.prototype._apply = function () {\r\n        var _this = this;\r\n        if (this.value) {\r\n            this.taskQueue.queueMicroTask(function () {\r\n                if (_this.value) {\r\n                    _this.element.focus();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.element.blur();\r\n        }\r\n    };\r\n    Focus.prototype.attached = function () {\r\n        this.isAttached = true;\r\n        if (this.needsApply) {\r\n            this.needsApply = false;\r\n            this._apply();\r\n        }\r\n        this.element.addEventListener('focus', this);\r\n        this.element.addEventListener('blur', this);\r\n    };\r\n    Focus.prototype.detached = function () {\r\n        this.isAttached = false;\r\n        this.element.removeEventListener('focus', this);\r\n        this.element.removeEventListener('blur', this);\r\n    };\r\n    Focus.prototype.handleEvent = function (e) {\r\n        if (e.type === 'focus') {\r\n            this.value = true;\r\n        }\r\n        else if (aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].activeElement !== this.element) {\r\n            this.value = false;\r\n        }\r\n    };\r\n    Focus = __decorate([\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customAttribute\"])('focus', aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].twoWay)\r\n    ], Focus);\r\n    return Focus;\r\n}());\n\nvar cssUrlMatcher = /url\\((?!['\"]data)([^)]+)\\)/gi;\r\nfunction fixupCSSUrls(address, css) {\r\n    if (typeof css !== 'string') {\r\n        throw new Error(\"Failed loading required CSS file: \" + address);\r\n    }\r\n    return css.replace(cssUrlMatcher, function (match, p1) {\r\n        var quote = p1.charAt(0);\r\n        if (quote === '\\'' || quote === '\"') {\r\n            p1 = p1.substr(1, p1.length - 2);\r\n        }\r\n        return 'url(\\'' + Object(aurelia_path__WEBPACK_IMPORTED_MODULE_7__[\"relativeToFile\"])(p1, address) + '\\')';\r\n    });\r\n}\r\nvar CSSResource = (function () {\r\n    function CSSResource(address) {\r\n        this.address = address;\r\n        this._scoped = null;\r\n        this._global = false;\r\n        this._alreadyGloballyInjected = false;\r\n    }\r\n    CSSResource.prototype.initialize = function (container, Target) {\r\n        this._scoped = new Target(this);\r\n    };\r\n    CSSResource.prototype.register = function (registry, name) {\r\n        if (name === 'scoped') {\r\n            registry.registerViewEngineHooks(this._scoped);\r\n        }\r\n        else {\r\n            this._global = true;\r\n        }\r\n    };\r\n    CSSResource.prototype.load = function (container) {\r\n        var _this = this;\r\n        return container.get(aurelia_loader__WEBPACK_IMPORTED_MODULE_6__[\"Loader\"])\r\n            .loadText(this.address)\r\n            .catch(function (err) { return null; })\r\n            .then(function (text) {\r\n            text = fixupCSSUrls(_this.address, text);\r\n            _this._scoped.css = text;\r\n            if (_this._global) {\r\n                _this._alreadyGloballyInjected = true;\r\n                aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].injectStyles(text);\r\n            }\r\n        });\r\n    };\r\n    return CSSResource;\r\n}());\r\nvar CSSViewEngineHooks = (function () {\r\n    function CSSViewEngineHooks(owner) {\r\n        this.owner = owner;\r\n        this.css = null;\r\n    }\r\n    CSSViewEngineHooks.prototype.beforeCompile = function (content, resources, instruction) {\r\n        if (instruction.targetShadowDOM) {\r\n            aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].injectStyles(this.css, content, true);\r\n        }\r\n        else if (aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"FEATURE\"].scopedCSS) {\r\n            var styleNode = aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].injectStyles(this.css, content, true);\r\n            styleNode.setAttribute('scoped', 'scoped');\r\n        }\r\n        else if (this._global && !this.owner._alreadyGloballyInjected) {\r\n            aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].injectStyles(this.css);\r\n            this.owner._alreadyGloballyInjected = true;\r\n        }\r\n    };\r\n    return CSSViewEngineHooks;\r\n}());\r\nfunction _createCSSResource(address) {\r\n    var ViewCSS = (function (_super) {\r\n        __extends(ViewCSS, _super);\r\n        function ViewCSS() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        ViewCSS = __decorate([\r\n            Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"resource\"])(new CSSResource(address))\r\n        ], ViewCSS);\r\n        return ViewCSS;\r\n    }(CSSViewEngineHooks));\r\n    return ViewCSS;\r\n}\n\nvar AttrBindingBehavior = (function () {\r\n    function AttrBindingBehavior() {\r\n    }\r\n    AttrBindingBehavior.prototype.bind = function (binding, source) {\r\n        binding.targetObserver = new aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"DataAttributeObserver\"](binding.target, binding.targetProperty);\r\n    };\r\n    AttrBindingBehavior.prototype.unbind = function (binding, source) {\r\n    };\r\n    AttrBindingBehavior = __decorate([\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('attr')\r\n    ], AttrBindingBehavior);\r\n    return AttrBindingBehavior;\r\n}());\n\nvar modeBindingBehavior = {\r\n    bind: function (binding, source, lookupFunctions) {\r\n        binding.originalMode = binding.mode;\r\n        binding.mode = this.mode;\r\n    },\r\n    unbind: function (binding, source) {\r\n        binding.mode = binding.originalMode;\r\n        binding.originalMode = null;\r\n    }\r\n};\r\nvar OneTimeBindingBehavior = (function () {\r\n    function OneTimeBindingBehavior() {\r\n        this.mode = aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].oneTime;\r\n    }\r\n    OneTimeBindingBehavior = __decorate([\r\n        Object(aurelia_metadata__WEBPACK_IMPORTED_MODULE_8__[\"mixin\"])(modeBindingBehavior),\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('oneTime')\r\n    ], OneTimeBindingBehavior);\r\n    return OneTimeBindingBehavior;\r\n}());\r\nvar OneWayBindingBehavior = (function () {\r\n    function OneWayBindingBehavior() {\r\n        this.mode = aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].toView;\r\n    }\r\n    OneWayBindingBehavior = __decorate([\r\n        Object(aurelia_metadata__WEBPACK_IMPORTED_MODULE_8__[\"mixin\"])(modeBindingBehavior),\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('oneWay')\r\n    ], OneWayBindingBehavior);\r\n    return OneWayBindingBehavior;\r\n}());\r\nvar ToViewBindingBehavior = (function () {\r\n    function ToViewBindingBehavior() {\r\n        this.mode = aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].toView;\r\n    }\r\n    ToViewBindingBehavior = __decorate([\r\n        Object(aurelia_metadata__WEBPACK_IMPORTED_MODULE_8__[\"mixin\"])(modeBindingBehavior),\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('toView')\r\n    ], ToViewBindingBehavior);\r\n    return ToViewBindingBehavior;\r\n}());\r\nvar FromViewBindingBehavior = (function () {\r\n    function FromViewBindingBehavior() {\r\n        this.mode = aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].fromView;\r\n    }\r\n    FromViewBindingBehavior = __decorate([\r\n        Object(aurelia_metadata__WEBPACK_IMPORTED_MODULE_8__[\"mixin\"])(modeBindingBehavior),\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('fromView')\r\n    ], FromViewBindingBehavior);\r\n    return FromViewBindingBehavior;\r\n}());\r\nvar TwoWayBindingBehavior = (function () {\r\n    function TwoWayBindingBehavior() {\r\n        this.mode = aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].twoWay;\r\n    }\r\n    TwoWayBindingBehavior = __decorate([\r\n        Object(aurelia_metadata__WEBPACK_IMPORTED_MODULE_8__[\"mixin\"])(modeBindingBehavior),\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('twoWay')\r\n    ], TwoWayBindingBehavior);\r\n    return TwoWayBindingBehavior;\r\n}());\n\nfunction throttle(newValue) {\r\n    var _this = this;\r\n    var state = this.throttleState;\r\n    var elapsed = +new Date() - state.last;\r\n    if (elapsed >= state.delay) {\r\n        clearTimeout(state.timeoutId);\r\n        state.timeoutId = null;\r\n        state.last = +new Date();\r\n        this.throttledMethod(newValue);\r\n        return;\r\n    }\r\n    state.newValue = newValue;\r\n    if (state.timeoutId === null) {\r\n        state.timeoutId = setTimeout(function () {\r\n            state.timeoutId = null;\r\n            state.last = +new Date();\r\n            _this.throttledMethod(state.newValue);\r\n        }, state.delay - elapsed);\r\n    }\r\n}\r\nvar ThrottleBindingBehavior = (function () {\r\n    function ThrottleBindingBehavior() {\r\n    }\r\n    ThrottleBindingBehavior.prototype.bind = function (binding, source, delay) {\r\n        if (delay === void 0) { delay = 200; }\r\n        var methodToThrottle = 'updateTarget';\r\n        if (binding.callSource) {\r\n            methodToThrottle = 'callSource';\r\n        }\r\n        else if (binding.updateSource && binding.mode === aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].twoWay) {\r\n            methodToThrottle = 'updateSource';\r\n        }\r\n        binding.throttledMethod = binding[methodToThrottle];\r\n        binding.throttledMethod.originalName = methodToThrottle;\r\n        binding[methodToThrottle] = throttle;\r\n        binding.throttleState = {\r\n            delay: delay,\r\n            last: 0,\r\n            timeoutId: null\r\n        };\r\n    };\r\n    ThrottleBindingBehavior.prototype.unbind = function (binding, source) {\r\n        var methodToRestore = binding.throttledMethod.originalName;\r\n        binding[methodToRestore] = binding.throttledMethod;\r\n        binding.throttledMethod = null;\r\n        clearTimeout(binding.throttleState.timeoutId);\r\n        binding.throttleState = null;\r\n    };\r\n    ThrottleBindingBehavior = __decorate([\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('throttle')\r\n    ], ThrottleBindingBehavior);\r\n    return ThrottleBindingBehavior;\r\n}());\n\nvar unset = {};\r\nfunction debounceCallSource(event) {\r\n    var _this = this;\r\n    var state = this.debounceState;\r\n    clearTimeout(state.timeoutId);\r\n    state.timeoutId = setTimeout(function () { return _this.debouncedMethod(event); }, state.delay);\r\n}\r\nfunction debounceCall(context, newValue, oldValue) {\r\n    var _this = this;\r\n    var state = this.debounceState;\r\n    clearTimeout(state.timeoutId);\r\n    if (context !== state.callContextToDebounce) {\r\n        state.oldValue = unset;\r\n        this.debouncedMethod(context, newValue, oldValue);\r\n        return;\r\n    }\r\n    if (state.oldValue === unset) {\r\n        state.oldValue = oldValue;\r\n    }\r\n    state.timeoutId = setTimeout(function () {\r\n        var _oldValue = state.oldValue;\r\n        state.oldValue = unset;\r\n        _this.debouncedMethod(context, newValue, _oldValue);\r\n    }, state.delay);\r\n}\r\nvar DebounceBindingBehavior = (function () {\r\n    function DebounceBindingBehavior() {\r\n    }\r\n    DebounceBindingBehavior.prototype.bind = function (binding, source, delay) {\r\n        if (delay === void 0) { delay = 200; }\r\n        var isCallSource = binding.callSource !== undefined;\r\n        var methodToDebounce = isCallSource ? 'callSource' : 'call';\r\n        var debouncer = isCallSource ? debounceCallSource : debounceCall;\r\n        var mode = binding.mode;\r\n        var callContextToDebounce = mode === aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].twoWay || mode === aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].fromView ? aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"targetContext\"] : aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"sourceContext\"];\r\n        binding.debouncedMethod = binding[methodToDebounce];\r\n        binding.debouncedMethod.originalName = methodToDebounce;\r\n        binding[methodToDebounce] = debouncer;\r\n        binding.debounceState = {\r\n            callContextToDebounce: callContextToDebounce,\r\n            delay: delay,\r\n            timeoutId: 0,\r\n            oldValue: unset\r\n        };\r\n    };\r\n    DebounceBindingBehavior.prototype.unbind = function (binding, source) {\r\n        var methodToRestore = binding.debouncedMethod.originalName;\r\n        binding[methodToRestore] = binding.debouncedMethod;\r\n        binding.debouncedMethod = null;\r\n        clearTimeout(binding.debounceState.timeoutId);\r\n        binding.debounceState = null;\r\n    };\r\n    DebounceBindingBehavior = __decorate([\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('debounce')\r\n    ], DebounceBindingBehavior);\r\n    return DebounceBindingBehavior;\r\n}());\n\nfunction findOriginalEventTarget(event) {\r\n    return (event.path && event.path[0]) || (event.deepPath && event.deepPath[0]) || event.target;\r\n}\r\nfunction handleSelfEvent(event) {\r\n    var target = findOriginalEventTarget(event);\r\n    if (this.target !== target) {\r\n        return;\r\n    }\r\n    this.selfEventCallSource(event);\r\n}\r\nvar SelfBindingBehavior = (function () {\r\n    function SelfBindingBehavior() {\r\n    }\r\n    SelfBindingBehavior.prototype.bind = function (binding, source) {\r\n        if (!binding.callSource || !binding.targetEvent) {\r\n            throw new Error('Self binding behavior only supports event.');\r\n        }\r\n        binding.selfEventCallSource = binding.callSource;\r\n        binding.callSource = handleSelfEvent;\r\n    };\r\n    SelfBindingBehavior.prototype.unbind = function (binding, source) {\r\n        binding.callSource = binding.selfEventCallSource;\r\n        binding.selfEventCallSource = null;\r\n    };\r\n    SelfBindingBehavior = __decorate([\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('self')\r\n    ], SelfBindingBehavior);\r\n    return SelfBindingBehavior;\r\n}());\n\nvar BindingSignaler = (function () {\r\n    function BindingSignaler() {\r\n        this.signals = {};\r\n    }\r\n    BindingSignaler.prototype.signal = function (name) {\r\n        var bindings = this.signals[name];\r\n        if (!bindings) {\r\n            return;\r\n        }\r\n        var i = bindings.length;\r\n        while (i--) {\r\n            bindings[i].call(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"sourceContext\"]);\r\n        }\r\n    };\r\n    return BindingSignaler;\r\n}());\n\nvar SignalBindingBehavior = (function () {\r\n    function SignalBindingBehavior(bindingSignaler) {\r\n        this.signals = bindingSignaler.signals;\r\n    }\r\n    SignalBindingBehavior.inject = function () { return [BindingSignaler]; };\r\n    SignalBindingBehavior.prototype.bind = function (binding, source) {\r\n        var names = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            names[_i - 2] = arguments[_i];\r\n        }\r\n        if (!binding.updateTarget) {\r\n            throw new Error('Only property bindings and string interpolation bindings can be signaled.  Trigger, delegate and call bindings cannot be signaled.');\r\n        }\r\n        var signals = this.signals;\r\n        if (names.length === 1) {\r\n            var name_1 = names[0];\r\n            var bindings = signals[name_1] || (signals[name_1] = []);\r\n            bindings.push(binding);\r\n            binding.signalName = name_1;\r\n        }\r\n        else if (names.length > 1) {\r\n            var i = names.length;\r\n            while (i--) {\r\n                var name_2 = names[i];\r\n                var bindings = signals[name_2] || (signals[name_2] = []);\r\n                bindings.push(binding);\r\n            }\r\n            binding.signalName = names;\r\n        }\r\n        else {\r\n            throw new Error('Signal name is required.');\r\n        }\r\n    };\r\n    SignalBindingBehavior.prototype.unbind = function (binding, source) {\r\n        var signals = this.signals;\r\n        var name = binding.signalName;\r\n        binding.signalName = null;\r\n        if (Array.isArray(name)) {\r\n            var names = name;\r\n            var i = names.length;\r\n            while (i--) {\r\n                var n = names[i];\r\n                var bindings = signals[n];\r\n                bindings.splice(bindings.indexOf(binding), 1);\r\n            }\r\n        }\r\n        else {\r\n            var bindings = signals[name];\r\n            bindings.splice(bindings.indexOf(binding), 1);\r\n        }\r\n    };\r\n    SignalBindingBehavior = __decorate([\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('signal')\r\n    ], SignalBindingBehavior);\r\n    return SignalBindingBehavior;\r\n}());\n\nvar eventNamesRequired = 'The updateTrigger binding behavior requires at least one event name argument: eg <input value.bind=\"firstName & updateTrigger:\\'blur\\'\">';\r\nvar notApplicableMessage = 'The updateTrigger binding behavior can only be applied to two-way/ from-view bindings on input/select elements.';\r\nvar UpdateTriggerBindingBehavior = (function () {\r\n    function UpdateTriggerBindingBehavior() {\r\n    }\r\n    UpdateTriggerBindingBehavior.prototype.bind = function (binding, source) {\r\n        var events = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            events[_i - 2] = arguments[_i];\r\n        }\r\n        if (events.length === 0) {\r\n            throw new Error(eventNamesRequired);\r\n        }\r\n        if (binding.mode !== aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].twoWay && binding.mode !== aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingMode\"].fromView) {\r\n            throw new Error(notApplicableMessage);\r\n        }\r\n        var targetObserver = binding.observerLocator.getObserver(binding.target, binding.targetProperty);\r\n        if (!targetObserver.handler) {\r\n            throw new Error(notApplicableMessage);\r\n        }\r\n        binding.targetObserver = targetObserver;\r\n        targetObserver.originalHandler = binding.targetObserver.handler;\r\n        var handler = new aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"EventSubscriber\"](events);\r\n        targetObserver.handler = handler;\r\n    };\r\n    UpdateTriggerBindingBehavior.prototype.unbind = function (binding, source) {\r\n        var targetObserver = binding.targetObserver;\r\n        targetObserver.handler.dispose();\r\n        targetObserver.handler = targetObserver.originalHandler;\r\n        targetObserver.originalHandler = null;\r\n    };\r\n    UpdateTriggerBindingBehavior = __decorate([\r\n        Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_4__[\"bindingBehavior\"])('updateTrigger')\r\n    ], UpdateTriggerBindingBehavior);\r\n    return UpdateTriggerBindingBehavior;\r\n}());\n\nfunction _createDynamicElement(_a) {\r\n    var name = _a.name, viewUrl = _a.viewUrl, bindableNames = _a.bindableNames, useShadowDOMmode = _a.useShadowDOMmode;\r\n    var DynamicElement = (function () {\r\n        function DynamicElement() {\r\n        }\r\n        DynamicElement.prototype.bind = function (bindingContext) {\r\n            this.$parent = bindingContext;\r\n        };\r\n        DynamicElement = __decorate([\r\n            Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customElement\"])(name),\r\n            Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"useView\"])(viewUrl)\r\n        ], DynamicElement);\r\n        return DynamicElement;\r\n    }());\r\n    for (var i = 0, ii = bindableNames.length; i < ii; ++i) {\r\n        Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"bindable\"])(bindableNames[i])(DynamicElement);\r\n    }\r\n    switch (useShadowDOMmode) {\r\n        case 'open':\r\n            Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"useShadowDOM\"])({ mode: 'open' })(DynamicElement);\r\n            break;\r\n        case 'closed':\r\n            Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"useShadowDOM\"])({ mode: 'closed' })(DynamicElement);\r\n            break;\r\n        case '':\r\n            Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"useShadowDOM\"])(DynamicElement);\r\n            break;\r\n        case null:\r\n            break;\r\n        default:\r\n            Object(aurelia_logging__WEBPACK_IMPORTED_MODULE_5__[\"getLogger\"])('aurelia-html-only-element')\r\n                .warn(\"Expected 'use-shadow-dom' value to be \\\"close\\\", \\\"open\\\" or \\\"\\\", received \" + useShadowDOMmode);\r\n            break;\r\n    }\r\n    return DynamicElement;\r\n}\n\nfunction getElementName(address) {\r\n    return /([^\\/^\\?]+)\\.html/i.exec(address)[1].toLowerCase();\r\n}\r\nfunction configure(config) {\r\n    var viewEngine = config.container.get(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewEngine\"]);\r\n    var loader = config.aurelia.loader;\r\n    viewEngine.addResourcePlugin('.html', {\r\n        'fetch': function (viewUrl) {\r\n            return loader.loadTemplate(viewUrl).then(function (registryEntry) {\r\n                var _a;\r\n                var bindableNames = registryEntry.template.getAttribute('bindable');\r\n                var useShadowDOMmode = registryEntry.template.getAttribute('use-shadow-dom');\r\n                var name = getElementName(viewUrl);\r\n                if (bindableNames) {\r\n                    bindableNames = bindableNames.split(',').map(function (x) { return x.trim(); });\r\n                    registryEntry.template.removeAttribute('bindable');\r\n                }\r\n                else {\r\n                    bindableNames = [];\r\n                }\r\n                return _a = {}, _a[name] = _createDynamicElement({ name: name, viewUrl: viewUrl, bindableNames: bindableNames, useShadowDOMmode: useShadowDOMmode }), _a;\r\n            });\r\n        }\r\n    });\r\n}\n\nfunction configure$1(config) {\r\n    injectAureliaHideStyleAtHead();\r\n    config.globalResources(Compose, If, Else, With, Repeat, Show, Hide, Replaceable, Focus, SanitizeHTMLValueConverter, OneTimeBindingBehavior, OneWayBindingBehavior, ToViewBindingBehavior, FromViewBindingBehavior, TwoWayBindingBehavior, ThrottleBindingBehavior, DebounceBindingBehavior, SelfBindingBehavior, SignalBindingBehavior, UpdateTriggerBindingBehavior, AttrBindingBehavior);\r\n    configure(config);\r\n    var viewEngine = config.container.get(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewEngine\"]);\r\n    var styleResourcePlugin = {\r\n        fetch: function (address) {\r\n            var _a;\r\n            return _a = {}, _a[address] = _createCSSResource(address), _a;\r\n        }\r\n    };\r\n    ['.css', '.less', '.sass', '.scss', '.styl'].forEach(function (ext) { return viewEngine.addResourcePlugin(ext, styleResourcePlugin); });\r\n}\n\n\n//# sourceMappingURL=aurelia-templating-resources.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! promise-polyfill */ \"B/eG\")[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS10ZW1wbGF0aW5nLXJlc291cmNlcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hdXJlbGlhLXRlbXBsYXRpbmctcmVzb3VyY2VzL2Rpc3QvbmF0aXZlLW1vZHVsZXMvYXVyZWxpYS10ZW1wbGF0aW5nLXJlc291cmNlcy5qcz9mY2YyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRhaW5lciwgaW5qZWN0LCBPcHRpb25hbCB9IGZyb20gJ2F1cmVsaWEtZGVwZW5kZW5jeS1pbmplY3Rpb24nO1xuaW1wb3J0IHsgRE9NLCBGRUFUVVJFIH0gZnJvbSAnYXVyZWxpYS1wYWwnO1xuaW1wb3J0IHsgVGFza1F1ZXVlIH0gZnJvbSAnYXVyZWxpYS10YXNrLXF1ZXVlJztcbmltcG9ydCB7IENvbXBvc2l0aW9uRW5naW5lLCBWaWV3U2xvdCwgVmlld1Jlc291cmNlcywgYmluZGFibGUsIG5vVmlldywgY3VzdG9tRWxlbWVudCwgY3VzdG9tQXR0cmlidXRlLCB0ZW1wbGF0ZUNvbnRyb2xsZXIsIEJvdW5kVmlld0ZhY3RvcnksIFRhcmdldEluc3RydWN0aW9uLCBBbmltYXRvciwgcmVzb3VyY2UsIHVzZVZpZXcsIHVzZVNoYWRvd0RPTSwgVmlld0VuZ2luZSB9IGZyb20gJ2F1cmVsaWEtdGVtcGxhdGluZyc7XG5pbXBvcnQgeyBjcmVhdGVPdmVycmlkZUNvbnRleHQsIGJpbmRpbmdNb2RlLCBCaW5kaW5nQmVoYXZpb3IsIFZhbHVlQ29udmVydGVyLCBzb3VyY2VDb250ZXh0LCBtZXJnZVNwbGljZSwgT2JzZXJ2ZXJMb2NhdG9yLCB2YWx1ZUNvbnZlcnRlciwgRGF0YUF0dHJpYnV0ZU9ic2VydmVyLCBiaW5kaW5nQmVoYXZpb3IsIHRhcmdldENvbnRleHQsIEV2ZW50U3Vic2NyaWJlciB9IGZyb20gJ2F1cmVsaWEtYmluZGluZyc7XG5pbXBvcnQgeyBnZXRMb2dnZXIgfSBmcm9tICdhdXJlbGlhLWxvZ2dpbmcnO1xuaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSAnYXVyZWxpYS1sb2FkZXInO1xuaW1wb3J0IHsgcmVsYXRpdmVUb0ZpbGUgfSBmcm9tICdhdXJlbGlhLXBhdGgnO1xuaW1wb3J0IHsgbWl4aW4gfSBmcm9tICdhdXJlbGlhLW1ldGFkYXRhJztcblxuLyohICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbkNvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2VcclxudGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGVcclxuTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuXHJcblRISVMgQ09ERSBJUyBQUk9WSURFRCBPTiBBTiAqQVMgSVMqIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuS0lORCwgRUlUSEVSIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIFdJVEhPVVQgTElNSVRBVElPTiBBTlkgSU1QTElFRFxyXG5XQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgVElUTEUsIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLFxyXG5NRVJDSEFOVEFCTElUWSBPUiBOT04tSU5GUklOR0VNRU5ULlxyXG5cclxuU2VlIHRoZSBBcGFjaGUgVmVyc2lvbiAyLjAgTGljZW5zZSBmb3Igc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zXHJcbmFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKi9cclxuLyogZ2xvYmFsIFJlZmxlY3QsIFByb21pc2UgKi9cclxuXHJcbnZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24oZCwgYikge1xyXG4gICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG59O1xyXG5cclxuZnVuY3Rpb24gX19leHRlbmRzKGQsIGIpIHtcclxuICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcbiAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxufVxyXG5cclxuZnVuY3Rpb24gX19kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xyXG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcclxuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XHJcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xyXG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcclxufVxuXG52YXIgQ29tcG9zZSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBDb21wb3NlKGVsZW1lbnQsIGNvbnRhaW5lciwgY29tcG9zaXRpb25FbmdpbmUsIHZpZXdTbG90LCB2aWV3UmVzb3VyY2VzLCB0YXNrUXVldWUpIHtcclxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xyXG4gICAgICAgIHRoaXMuY29tcG9zaXRpb25FbmdpbmUgPSBjb21wb3NpdGlvbkVuZ2luZTtcclxuICAgICAgICB0aGlzLnZpZXdTbG90ID0gdmlld1Nsb3Q7XHJcbiAgICAgICAgdGhpcy52aWV3UmVzb3VyY2VzID0gdmlld1Jlc291cmNlcztcclxuICAgICAgICB0aGlzLnRhc2tRdWV1ZSA9IHRhc2tRdWV1ZTtcclxuICAgICAgICB0aGlzLmN1cnJlbnRDb250cm9sbGVyID0gbnVsbDtcclxuICAgICAgICB0aGlzLmN1cnJlbnRWaWV3TW9kZWwgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuY2hhbmdlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcbiAgICB9XHJcbiAgICBDb21wb3NlLmluamVjdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gW0RPTS5FbGVtZW50LCBDb250YWluZXIsIENvbXBvc2l0aW9uRW5naW5lLCBWaWV3U2xvdCwgVmlld1Jlc291cmNlcywgVGFza1F1ZXVlXTtcclxuICAgIH07XHJcbiAgICBDb21wb3NlLnByb3RvdHlwZS5jcmVhdGVkID0gZnVuY3Rpb24gKG93bmluZ1ZpZXcpIHtcclxuICAgICAgICB0aGlzLm93bmluZ1ZpZXcgPSBvd25pbmdWaWV3O1xyXG4gICAgfTtcclxuICAgIENvbXBvc2UucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbiAoYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCkge1xyXG4gICAgICAgIHRoaXMuYmluZGluZ0NvbnRleHQgPSBiaW5kaW5nQ29udGV4dDtcclxuICAgICAgICB0aGlzLm92ZXJyaWRlQ29udGV4dCA9IG92ZXJyaWRlQ29udGV4dDtcclxuICAgICAgICB2YXIgY2hhbmdlcyA9IHRoaXMuY2hhbmdlcztcclxuICAgICAgICBjaGFuZ2VzLnZpZXcgPSB0aGlzLnZpZXc7XHJcbiAgICAgICAgY2hhbmdlcy52aWV3TW9kZWwgPSB0aGlzLnZpZXdNb2RlbDtcclxuICAgICAgICBjaGFuZ2VzLm1vZGVsID0gdGhpcy5tb2RlbDtcclxuICAgICAgICBpZiAoIXRoaXMucGVuZGluZ1Rhc2spIHtcclxuICAgICAgICAgICAgcHJvY2Vzc0NoYW5nZXModGhpcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIENvbXBvc2UucHJvdG90eXBlLnVuYmluZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLmNoYW5nZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xyXG4gICAgICAgIHRoaXMuYmluZGluZ0NvbnRleHQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMub3ZlcnJpZGVDb250ZXh0ID0gbnVsbDtcclxuICAgICAgICB2YXIgcmV0dXJuVG9DYWNoZSA9IHRydWU7XHJcbiAgICAgICAgdmFyIHNraXBBbmltYXRpb24gPSB0cnVlO1xyXG4gICAgICAgIHRoaXMudmlld1Nsb3QucmVtb3ZlQWxsKHJldHVyblRvQ2FjaGUsIHNraXBBbmltYXRpb24pO1xyXG4gICAgfTtcclxuICAgIENvbXBvc2UucHJvdG90eXBlLm1vZGVsQ2hhbmdlZCA9IGZ1bmN0aW9uIChuZXdWYWx1ZSwgb2xkVmFsdWUpIHtcclxuICAgICAgICB0aGlzLmNoYW5nZXMubW9kZWwgPSBuZXdWYWx1ZTtcclxuICAgICAgICByZXF1ZXN0VXBkYXRlKHRoaXMpO1xyXG4gICAgfTtcclxuICAgIENvbXBvc2UucHJvdG90eXBlLnZpZXdDaGFuZ2VkID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBvbGRWYWx1ZSkge1xyXG4gICAgICAgIHRoaXMuY2hhbmdlcy52aWV3ID0gbmV3VmFsdWU7XHJcbiAgICAgICAgcmVxdWVzdFVwZGF0ZSh0aGlzKTtcclxuICAgIH07XHJcbiAgICBDb21wb3NlLnByb3RvdHlwZS52aWV3TW9kZWxDaGFuZ2VkID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBvbGRWYWx1ZSkge1xyXG4gICAgICAgIHRoaXMuY2hhbmdlcy52aWV3TW9kZWwgPSBuZXdWYWx1ZTtcclxuICAgICAgICByZXF1ZXN0VXBkYXRlKHRoaXMpO1xyXG4gICAgfTtcclxuICAgIF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGJpbmRhYmxlXHJcbiAgICBdLCBDb21wb3NlLnByb3RvdHlwZSwgXCJtb2RlbFwiLCB2b2lkIDApO1xyXG4gICAgX19kZWNvcmF0ZShbXHJcbiAgICAgICAgYmluZGFibGVcclxuICAgIF0sIENvbXBvc2UucHJvdG90eXBlLCBcInZpZXdcIiwgdm9pZCAwKTtcclxuICAgIF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGJpbmRhYmxlXHJcbiAgICBdLCBDb21wb3NlLnByb3RvdHlwZSwgXCJ2aWV3TW9kZWxcIiwgdm9pZCAwKTtcclxuICAgIF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGJpbmRhYmxlXHJcbiAgICBdLCBDb21wb3NlLnByb3RvdHlwZSwgXCJzd2FwT3JkZXJcIiwgdm9pZCAwKTtcclxuICAgIENvbXBvc2UgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICBub1ZpZXcsXHJcbiAgICAgICAgY3VzdG9tRWxlbWVudCgnY29tcG9zZScpXHJcbiAgICBdLCBDb21wb3NlKTtcclxuICAgIHJldHVybiBDb21wb3NlO1xyXG59KCkpO1xyXG5mdW5jdGlvbiBpc0VtcHR5KG9iaikge1xyXG4gICAgZm9yICh2YXIgXyBpbiBvYmopIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufVxyXG5mdW5jdGlvbiB0cnlBY3RpdmF0ZVZpZXdNb2RlbCh2bSwgbW9kZWwpIHtcclxuICAgIGlmICh2bSAmJiB0eXBlb2Ygdm0uYWN0aXZhdGUgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHZtLmFjdGl2YXRlKG1vZGVsKSk7XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gY3JlYXRlSW5zdHJ1Y3Rpb24oY29tcG9zZXIsIGluc3RydWN0aW9uKSB7XHJcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihpbnN0cnVjdGlvbiwge1xyXG4gICAgICAgIGJpbmRpbmdDb250ZXh0OiBjb21wb3Nlci5iaW5kaW5nQ29udGV4dCxcclxuICAgICAgICBvdmVycmlkZUNvbnRleHQ6IGNvbXBvc2VyLm92ZXJyaWRlQ29udGV4dCxcclxuICAgICAgICBvd25pbmdWaWV3OiBjb21wb3Nlci5vd25pbmdWaWV3LFxyXG4gICAgICAgIGNvbnRhaW5lcjogY29tcG9zZXIuY29udGFpbmVyLFxyXG4gICAgICAgIHZpZXdTbG90OiBjb21wb3Nlci52aWV3U2xvdCxcclxuICAgICAgICB2aWV3UmVzb3VyY2VzOiBjb21wb3Nlci52aWV3UmVzb3VyY2VzLFxyXG4gICAgICAgIGN1cnJlbnRDb250cm9sbGVyOiBjb21wb3Nlci5jdXJyZW50Q29udHJvbGxlcixcclxuICAgICAgICBob3N0OiBjb21wb3Nlci5lbGVtZW50LFxyXG4gICAgICAgIHN3YXBPcmRlcjogY29tcG9zZXIuc3dhcE9yZGVyXHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBwcm9jZXNzQ2hhbmdlcyhjb21wb3Nlcikge1xyXG4gICAgdmFyIGNoYW5nZXMgPSBjb21wb3Nlci5jaGFuZ2VzO1xyXG4gICAgY29tcG9zZXIuY2hhbmdlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcbiAgICBpZiAoISgndmlldycgaW4gY2hhbmdlcykgJiYgISgndmlld01vZGVsJyBpbiBjaGFuZ2VzKSAmJiAoJ21vZGVsJyBpbiBjaGFuZ2VzKSkge1xyXG4gICAgICAgIGNvbXBvc2VyLnBlbmRpbmdUYXNrID0gdHJ5QWN0aXZhdGVWaWV3TW9kZWwoY29tcG9zZXIuY3VycmVudFZpZXdNb2RlbCwgY2hhbmdlcy5tb2RlbCk7XHJcbiAgICAgICAgaWYgKCFjb21wb3Nlci5wZW5kaW5nVGFzaykge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgdmFyIGluc3RydWN0aW9uID0ge1xyXG4gICAgICAgICAgICB2aWV3OiBjb21wb3Nlci52aWV3LFxyXG4gICAgICAgICAgICB2aWV3TW9kZWw6IGNvbXBvc2VyLmN1cnJlbnRWaWV3TW9kZWwgfHwgY29tcG9zZXIudmlld01vZGVsLFxyXG4gICAgICAgICAgICBtb2RlbDogY29tcG9zZXIubW9kZWxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGluc3RydWN0aW9uID0gT2JqZWN0LmFzc2lnbihpbnN0cnVjdGlvbiwgY2hhbmdlcyk7XHJcbiAgICAgICAgaW5zdHJ1Y3Rpb24gPSBjcmVhdGVJbnN0cnVjdGlvbihjb21wb3NlciwgaW5zdHJ1Y3Rpb24pO1xyXG4gICAgICAgIGNvbXBvc2VyLnBlbmRpbmdUYXNrID0gY29tcG9zZXIuY29tcG9zaXRpb25FbmdpbmUuY29tcG9zZShpbnN0cnVjdGlvbikudGhlbihmdW5jdGlvbiAoY29udHJvbGxlcikge1xyXG4gICAgICAgICAgICBjb21wb3Nlci5jdXJyZW50Q29udHJvbGxlciA9IGNvbnRyb2xsZXI7XHJcbiAgICAgICAgICAgIGNvbXBvc2VyLmN1cnJlbnRWaWV3TW9kZWwgPSBjb250cm9sbGVyID8gY29udHJvbGxlci52aWV3TW9kZWwgOiBudWxsO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgY29tcG9zZXIucGVuZGluZ1Rhc2sgPSBjb21wb3Nlci5wZW5kaW5nVGFza1xyXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb21wbGV0ZUNvbXBvc2l0aW9uVGFzayhjb21wb3Nlcik7XHJcbiAgICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XHJcbiAgICAgICAgY29tcGxldGVDb21wb3NpdGlvblRhc2soY29tcG9zZXIpO1xyXG4gICAgICAgIHRocm93IHJlYXNvbjtcclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIGNvbXBsZXRlQ29tcG9zaXRpb25UYXNrKGNvbXBvc2VyKSB7XHJcbiAgICBjb21wb3Nlci5wZW5kaW5nVGFzayA9IG51bGw7XHJcbiAgICBpZiAoIWlzRW1wdHkoY29tcG9zZXIuY2hhbmdlcykpIHtcclxuICAgICAgICBwcm9jZXNzQ2hhbmdlcyhjb21wb3Nlcik7XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gcmVxdWVzdFVwZGF0ZShjb21wb3Nlcikge1xyXG4gICAgaWYgKGNvbXBvc2VyLnBlbmRpbmdUYXNrIHx8IGNvbXBvc2VyLnVwZGF0ZVJlcXVlc3RlZCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNvbXBvc2VyLnVwZGF0ZVJlcXVlc3RlZCA9IHRydWU7XHJcbiAgICBjb21wb3Nlci50YXNrUXVldWUucXVldWVNaWNyb1Rhc2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGNvbXBvc2VyLnVwZGF0ZVJlcXVlc3RlZCA9IGZhbHNlO1xyXG4gICAgICAgIHByb2Nlc3NDaGFuZ2VzKGNvbXBvc2VyKTtcclxuICAgIH0pO1xyXG59XG5cbnZhciBJZkNvcmUgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gSWZDb3JlKHZpZXdGYWN0b3J5LCB2aWV3U2xvdCkge1xyXG4gICAgICAgIHRoaXMudmlld0ZhY3RvcnkgPSB2aWV3RmFjdG9yeTtcclxuICAgICAgICB0aGlzLnZpZXdTbG90ID0gdmlld1Nsb3Q7XHJcbiAgICAgICAgdGhpcy52aWV3ID0gbnVsbDtcclxuICAgICAgICB0aGlzLmJpbmRpbmdDb250ZXh0ID0gbnVsbDtcclxuICAgICAgICB0aGlzLm92ZXJyaWRlQ29udGV4dCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5zaG93aW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5jYWNoZSA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBJZkNvcmUucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbiAoYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCkge1xyXG4gICAgICAgIHRoaXMuYmluZGluZ0NvbnRleHQgPSBiaW5kaW5nQ29udGV4dDtcclxuICAgICAgICB0aGlzLm92ZXJyaWRlQ29udGV4dCA9IG92ZXJyaWRlQ29udGV4dDtcclxuICAgIH07XHJcbiAgICBJZkNvcmUucHJvdG90eXBlLnVuYmluZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAodGhpcy52aWV3ID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy52aWV3LnVuYmluZCgpO1xyXG4gICAgICAgIGlmICghdGhpcy52aWV3RmFjdG9yeS5pc0NhY2hpbmcpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5zaG93aW5nKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2hvd2luZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLnZpZXdTbG90LnJlbW92ZSh0aGlzLnZpZXcsIHRydWUsIHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy52aWV3LnJldHVyblRvQ2FjaGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy52aWV3ID0gbnVsbDtcclxuICAgIH07XHJcbiAgICBJZkNvcmUucHJvdG90eXBlLl9zaG93ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICh0aGlzLnNob3dpbmcpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLnZpZXcuaXNCb3VuZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy52aWV3LmJpbmQodGhpcy5iaW5kaW5nQ29udGV4dCwgdGhpcy5vdmVycmlkZUNvbnRleHQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMudmlldyA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLnZpZXcgPSB0aGlzLnZpZXdGYWN0b3J5LmNyZWF0ZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMudmlldy5pc0JvdW5kKSB7XHJcbiAgICAgICAgICAgIHRoaXMudmlldy5iaW5kKHRoaXMuYmluZGluZ0NvbnRleHQsIHRoaXMub3ZlcnJpZGVDb250ZXh0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zaG93aW5nID0gdHJ1ZTtcclxuICAgICAgICByZXR1cm4gdGhpcy52aWV3U2xvdC5hZGQodGhpcy52aWV3KTtcclxuICAgIH07XHJcbiAgICBJZkNvcmUucHJvdG90eXBlLl9oaWRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKCF0aGlzLnNob3dpbmcpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNob3dpbmcgPSBmYWxzZTtcclxuICAgICAgICB2YXIgcmVtb3ZlZCA9IHRoaXMudmlld1Nsb3QucmVtb3ZlKHRoaXMudmlldyk7XHJcbiAgICAgICAgaWYgKHJlbW92ZWQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZW1vdmVkLnRoZW4oZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgX3RoaXMuX3VuYmluZFZpZXcoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX3VuYmluZFZpZXcoKTtcclxuICAgIH07XHJcbiAgICBJZkNvcmUucHJvdG90eXBlLl91bmJpbmRWaWV3ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjYWNoZSA9IHRoaXMuY2FjaGUgPT09ICdmYWxzZScgPyBmYWxzZSA6ICEhdGhpcy5jYWNoZTtcclxuICAgICAgICB0aGlzLnZpZXcudW5iaW5kKCk7XHJcbiAgICAgICAgaWYgKCFjYWNoZSkge1xyXG4gICAgICAgICAgICB0aGlzLnZpZXcgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICByZXR1cm4gSWZDb3JlO1xyXG59KCkpO1xuXG52YXIgSWYgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKElmLCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gSWYoKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY2FjaGUgPSB0cnVlO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIElmLnByb3RvdHlwZS5iaW5kID0gZnVuY3Rpb24gKGJpbmRpbmdDb250ZXh0LCBvdmVycmlkZUNvbnRleHQpIHtcclxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmJpbmQuY2FsbCh0aGlzLCBiaW5kaW5nQ29udGV4dCwgb3ZlcnJpZGVDb250ZXh0KTtcclxuICAgICAgICBpZiAodGhpcy5jb25kaXRpb24pIHtcclxuICAgICAgICAgICAgdGhpcy5fc2hvdygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5faGlkZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBJZi5wcm90b3R5cGUuY29uZGl0aW9uQ2hhbmdlZCA9IGZ1bmN0aW9uIChuZXdWYWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3VwZGF0ZShuZXdWYWx1ZSk7XHJcbiAgICB9O1xyXG4gICAgSWYucHJvdG90eXBlLl91cGRhdGUgPSBmdW5jdGlvbiAoc2hvdykge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKHRoaXMuYW5pbWF0aW5nKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHByb21pc2U7XHJcbiAgICAgICAgaWYgKHRoaXMuZWxzZVZtKSB7XHJcbiAgICAgICAgICAgIHByb21pc2UgPSBzaG93ID8gdGhpcy5fc3dhcCh0aGlzLmVsc2VWbSwgdGhpcykgOiB0aGlzLl9zd2FwKHRoaXMsIHRoaXMuZWxzZVZtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHByb21pc2UgPSBzaG93ID8gdGhpcy5fc2hvdygpIDogdGhpcy5faGlkZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocHJvbWlzZSkge1xyXG4gICAgICAgICAgICB0aGlzLmFuaW1hdGluZyA9IHRydWU7XHJcbiAgICAgICAgICAgIHByb21pc2UudGhlbihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy5hbmltYXRpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGlmIChfdGhpcy5jb25kaXRpb24gIT09IF90aGlzLnNob3dpbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5fdXBkYXRlKF90aGlzLmNvbmRpdGlvbik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBJZi5wcm90b3R5cGUuX3N3YXAgPSBmdW5jdGlvbiAocmVtb3ZlLCBhZGQpIHtcclxuICAgICAgICBzd2l0Y2ggKHRoaXMuc3dhcE9yZGVyKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ2JlZm9yZSc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGFkZC5fc2hvdygpKS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlbW92ZS5faGlkZSgpOyB9KTtcclxuICAgICAgICAgICAgY2FzZSAnd2l0aCc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3JlbW92ZS5faGlkZSgpLCBhZGQuX3Nob3coKV0pO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgdmFyIHByb21pc2UgPSByZW1vdmUuX2hpZGUoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBwcm9taXNlID8gcHJvbWlzZS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFkZC5fc2hvdygpOyB9KSA6IGFkZC5fc2hvdygpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBfX2RlY29yYXRlKFtcclxuICAgICAgICBiaW5kYWJsZSh7IHByaW1hcnlQcm9wZXJ0eTogdHJ1ZSB9KVxyXG4gICAgXSwgSWYucHJvdG90eXBlLCBcImNvbmRpdGlvblwiLCB2b2lkIDApO1xyXG4gICAgX19kZWNvcmF0ZShbXHJcbiAgICAgICAgYmluZGFibGVcclxuICAgIF0sIElmLnByb3RvdHlwZSwgXCJzd2FwT3JkZXJcIiwgdm9pZCAwKTtcclxuICAgIF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGJpbmRhYmxlXHJcbiAgICBdLCBJZi5wcm90b3R5cGUsIFwiY2FjaGVcIiwgdm9pZCAwKTtcclxuICAgIElmID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgY3VzdG9tQXR0cmlidXRlKCdpZicpLFxyXG4gICAgICAgIHRlbXBsYXRlQ29udHJvbGxlcixcclxuICAgICAgICBpbmplY3QoQm91bmRWaWV3RmFjdG9yeSwgVmlld1Nsb3QpXHJcbiAgICBdLCBJZik7XHJcbiAgICByZXR1cm4gSWY7XHJcbn0oSWZDb3JlKSk7XG5cbnZhciBFbHNlID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhFbHNlLCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gRWxzZSh2aWV3RmFjdG9yeSwgdmlld1Nsb3QpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB2aWV3RmFjdG9yeSwgdmlld1Nsb3QpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuX3JlZ2lzdGVySW5JZigpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIEVsc2UucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbiAoYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCkge1xyXG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuYmluZC5jYWxsKHRoaXMsIGJpbmRpbmdDb250ZXh0LCBvdmVycmlkZUNvbnRleHQpO1xyXG4gICAgICAgIGlmICh0aGlzLmlmVm0uY29uZGl0aW9uKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hpZGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3Nob3coKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgRWxzZS5wcm90b3R5cGUuX3JlZ2lzdGVySW5JZiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgcHJldmlvdXMgPSB0aGlzLnZpZXdTbG90LmFuY2hvci5wcmV2aW91c1NpYmxpbmc7XHJcbiAgICAgICAgd2hpbGUgKHByZXZpb3VzICYmICFwcmV2aW91cy5hdSkge1xyXG4gICAgICAgICAgICBwcmV2aW91cyA9IHByZXZpb3VzLnByZXZpb3VzU2libGluZztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFwcmV2aW91cyB8fCAhcHJldmlvdXMuYXUuaWYpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgZmluZCBtYXRjaGluZyBJZiBmb3IgRWxzZSBjdXN0b20gYXR0cmlidXRlLlwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5pZlZtID0gcHJldmlvdXMuYXUuaWYudmlld01vZGVsO1xyXG4gICAgICAgIHRoaXMuaWZWbS5lbHNlVm0gPSB0aGlzO1xyXG4gICAgfTtcclxuICAgIEVsc2UgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICBjdXN0b21BdHRyaWJ1dGUoJ2Vsc2UnKSxcclxuICAgICAgICB0ZW1wbGF0ZUNvbnRyb2xsZXIsXHJcbiAgICAgICAgaW5qZWN0KEJvdW5kVmlld0ZhY3RvcnksIFZpZXdTbG90KVxyXG4gICAgXSwgRWxzZSk7XHJcbiAgICByZXR1cm4gRWxzZTtcclxufShJZkNvcmUpKTtcblxudmFyIFdpdGggPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gV2l0aCh2aWV3RmFjdG9yeSwgdmlld1Nsb3QpIHtcclxuICAgICAgICB0aGlzLnZpZXdGYWN0b3J5ID0gdmlld0ZhY3Rvcnk7XHJcbiAgICAgICAgdGhpcy52aWV3U2xvdCA9IHZpZXdTbG90O1xyXG4gICAgICAgIHRoaXMucGFyZW50T3ZlcnJpZGVDb250ZXh0ID0gbnVsbDtcclxuICAgICAgICB0aGlzLnZpZXcgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgV2l0aC5wcm90b3R5cGUuYmluZCA9IGZ1bmN0aW9uIChiaW5kaW5nQ29udGV4dCwgb3ZlcnJpZGVDb250ZXh0KSB7XHJcbiAgICAgICAgdGhpcy5wYXJlbnRPdmVycmlkZUNvbnRleHQgPSBvdmVycmlkZUNvbnRleHQ7XHJcbiAgICAgICAgdGhpcy52YWx1ZUNoYW5nZWQodGhpcy52YWx1ZSk7XHJcbiAgICB9O1xyXG4gICAgV2l0aC5wcm90b3R5cGUudmFsdWVDaGFuZ2VkID0gZnVuY3Rpb24gKG5ld1ZhbHVlKSB7XHJcbiAgICAgICAgdmFyIG92ZXJyaWRlQ29udGV4dCA9IGNyZWF0ZU92ZXJyaWRlQ29udGV4dChuZXdWYWx1ZSwgdGhpcy5wYXJlbnRPdmVycmlkZUNvbnRleHQpO1xyXG4gICAgICAgIHZhciB2aWV3ID0gdGhpcy52aWV3O1xyXG4gICAgICAgIGlmICghdmlldykge1xyXG4gICAgICAgICAgICB2aWV3ID0gdGhpcy52aWV3ID0gdGhpcy52aWV3RmFjdG9yeS5jcmVhdGUoKTtcclxuICAgICAgICAgICAgdmlldy5iaW5kKG5ld1ZhbHVlLCBvdmVycmlkZUNvbnRleHQpO1xyXG4gICAgICAgICAgICB0aGlzLnZpZXdTbG90LmFkZCh2aWV3KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHZpZXcuYmluZChuZXdWYWx1ZSwgb3ZlcnJpZGVDb250ZXh0KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgV2l0aC5wcm90b3R5cGUudW5iaW5kID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB2aWV3ID0gdGhpcy52aWV3O1xyXG4gICAgICAgIHRoaXMucGFyZW50T3ZlcnJpZGVDb250ZXh0ID0gbnVsbDtcclxuICAgICAgICBpZiAodmlldykge1xyXG4gICAgICAgICAgICB2aWV3LnVuYmluZCgpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBXaXRoID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgY3VzdG9tQXR0cmlidXRlKCd3aXRoJyksXHJcbiAgICAgICAgdGVtcGxhdGVDb250cm9sbGVyLFxyXG4gICAgICAgIGluamVjdChCb3VuZFZpZXdGYWN0b3J5LCBWaWV3U2xvdClcclxuICAgIF0sIFdpdGgpO1xyXG4gICAgcmV0dXJuIFdpdGg7XHJcbn0oKSk7XG5cbnZhciBvbmVUaW1lID0gYmluZGluZ01vZGUub25lVGltZTtcclxuZnVuY3Rpb24gdXBkYXRlT3ZlcnJpZGVDb250ZXh0cyh2aWV3cywgc3RhcnRJbmRleCkge1xyXG4gICAgdmFyIGxlbmd0aCA9IHZpZXdzLmxlbmd0aDtcclxuICAgIGlmIChzdGFydEluZGV4ID4gMCkge1xyXG4gICAgICAgIHN0YXJ0SW5kZXggPSBzdGFydEluZGV4IC0gMTtcclxuICAgIH1cclxuICAgIGZvciAoOyBzdGFydEluZGV4IDwgbGVuZ3RoOyArK3N0YXJ0SW5kZXgpIHtcclxuICAgICAgICB1cGRhdGVPdmVycmlkZUNvbnRleHQodmlld3Nbc3RhcnRJbmRleF0ub3ZlcnJpZGVDb250ZXh0LCBzdGFydEluZGV4LCBsZW5ndGgpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZUZ1bGxPdmVycmlkZUNvbnRleHQocmVwZWF0LCBkYXRhLCBpbmRleCwgbGVuZ3RoLCBrZXkpIHtcclxuICAgIHZhciBiaW5kaW5nQ29udGV4dCA9IHt9O1xyXG4gICAgdmFyIG92ZXJyaWRlQ29udGV4dCA9IGNyZWF0ZU92ZXJyaWRlQ29udGV4dChiaW5kaW5nQ29udGV4dCwgcmVwZWF0LnNjb3BlLm92ZXJyaWRlQ29udGV4dCk7XHJcbiAgICBpZiAodHlwZW9mIGtleSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBiaW5kaW5nQ29udGV4dFtyZXBlYXQua2V5XSA9IGtleTtcclxuICAgICAgICBiaW5kaW5nQ29udGV4dFtyZXBlYXQudmFsdWVdID0gZGF0YTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGJpbmRpbmdDb250ZXh0W3JlcGVhdC5sb2NhbF0gPSBkYXRhO1xyXG4gICAgfVxyXG4gICAgdXBkYXRlT3ZlcnJpZGVDb250ZXh0KG92ZXJyaWRlQ29udGV4dCwgaW5kZXgsIGxlbmd0aCk7XHJcbiAgICByZXR1cm4gb3ZlcnJpZGVDb250ZXh0O1xyXG59XHJcbmZ1bmN0aW9uIHVwZGF0ZU92ZXJyaWRlQ29udGV4dChvdmVycmlkZUNvbnRleHQsIGluZGV4LCBsZW5ndGgpIHtcclxuICAgIHZhciBmaXJzdCA9IChpbmRleCA9PT0gMCk7XHJcbiAgICB2YXIgbGFzdCA9IChpbmRleCA9PT0gbGVuZ3RoIC0gMSk7XHJcbiAgICB2YXIgZXZlbiA9IGluZGV4ICUgMiA9PT0gMDtcclxuICAgIG92ZXJyaWRlQ29udGV4dC4kaW5kZXggPSBpbmRleDtcclxuICAgIG92ZXJyaWRlQ29udGV4dC4kZmlyc3QgPSBmaXJzdDtcclxuICAgIG92ZXJyaWRlQ29udGV4dC4kbGFzdCA9IGxhc3Q7XHJcbiAgICBvdmVycmlkZUNvbnRleHQuJG1pZGRsZSA9ICEoZmlyc3QgfHwgbGFzdCk7XHJcbiAgICBvdmVycmlkZUNvbnRleHQuJG9kZCA9ICFldmVuO1xyXG4gICAgb3ZlcnJpZGVDb250ZXh0LiRldmVuID0gZXZlbjtcclxufVxyXG5mdW5jdGlvbiBnZXRJdGVtc1NvdXJjZUV4cHJlc3Npb24oaW5zdHJ1Y3Rpb24sIGF0dHJOYW1lKSB7XHJcbiAgICByZXR1cm4gaW5zdHJ1Y3Rpb24uYmVoYXZpb3JJbnN0cnVjdGlvbnNcclxuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChiaSkgeyByZXR1cm4gYmkub3JpZ2luYWxBdHRyTmFtZSA9PT0gYXR0ck5hbWU7IH0pWzBdXHJcbiAgICAgICAgLmF0dHJpYnV0ZXNcclxuICAgICAgICAuaXRlbXNcclxuICAgICAgICAuc291cmNlRXhwcmVzc2lvbjtcclxufVxyXG5mdW5jdGlvbiB1bndyYXBFeHByZXNzaW9uKGV4cHJlc3Npb24pIHtcclxuICAgIHZhciB1bndyYXBwZWQgPSBmYWxzZTtcclxuICAgIHdoaWxlIChleHByZXNzaW9uIGluc3RhbmNlb2YgQmluZGluZ0JlaGF2aW9yKSB7XHJcbiAgICAgICAgZXhwcmVzc2lvbiA9IGV4cHJlc3Npb24uZXhwcmVzc2lvbjtcclxuICAgIH1cclxuICAgIHdoaWxlIChleHByZXNzaW9uIGluc3RhbmNlb2YgVmFsdWVDb252ZXJ0ZXIpIHtcclxuICAgICAgICBleHByZXNzaW9uID0gZXhwcmVzc2lvbi5leHByZXNzaW9uO1xyXG4gICAgICAgIHVud3JhcHBlZCA9IHRydWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdW53cmFwcGVkID8gZXhwcmVzc2lvbiA6IG51bGw7XHJcbn1cclxuZnVuY3Rpb24gaXNPbmVUaW1lKGV4cHJlc3Npb24pIHtcclxuICAgIHdoaWxlIChleHByZXNzaW9uIGluc3RhbmNlb2YgQmluZGluZ0JlaGF2aW9yKSB7XHJcbiAgICAgICAgaWYgKGV4cHJlc3Npb24ubmFtZSA9PT0gJ29uZVRpbWUnKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBleHByZXNzaW9uID0gZXhwcmVzc2lvbi5leHByZXNzaW9uO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG59XHJcbmZ1bmN0aW9uIHVwZGF0ZU9uZVRpbWVCaW5kaW5nKGJpbmRpbmcpIHtcclxuICAgIGlmIChiaW5kaW5nLmNhbGwgJiYgYmluZGluZy5tb2RlID09PSBvbmVUaW1lKSB7XHJcbiAgICAgICAgYmluZGluZy5jYWxsKHNvdXJjZUNvbnRleHQpO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoYmluZGluZy51cGRhdGVPbmVUaW1lQmluZGluZ3MpIHtcclxuICAgICAgICBiaW5kaW5nLnVwZGF0ZU9uZVRpbWVCaW5kaW5ncygpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIGluZGV4T2YoYXJyYXksIGl0ZW0sIG1hdGNoZXIsIHN0YXJ0SW5kZXgpIHtcclxuICAgIGlmICghbWF0Y2hlcikge1xyXG4gICAgICAgIHJldHVybiBhcnJheS5pbmRleE9mKGl0ZW0pO1xyXG4gICAgfVxyXG4gICAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcclxuICAgIGZvciAodmFyIGluZGV4ID0gc3RhcnRJbmRleCB8fCAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgIGlmIChtYXRjaGVyKGFycmF5W2luZGV4XSwgaXRlbSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGluZGV4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiAtMTtcclxufVxuXG52YXIgQXJyYXlSZXBlYXRTdHJhdGVneSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBBcnJheVJlcGVhdFN0cmF0ZWd5KCkge1xyXG4gICAgfVxyXG4gICAgQXJyYXlSZXBlYXRTdHJhdGVneS5wcm90b3R5cGUuZ2V0Q29sbGVjdGlvbk9ic2VydmVyID0gZnVuY3Rpb24gKG9ic2VydmVyTG9jYXRvciwgaXRlbXMpIHtcclxuICAgICAgICByZXR1cm4gb2JzZXJ2ZXJMb2NhdG9yLmdldEFycmF5T2JzZXJ2ZXIoaXRlbXMpO1xyXG4gICAgfTtcclxuICAgIEFycmF5UmVwZWF0U3RyYXRlZ3kucHJvdG90eXBlLmluc3RhbmNlQ2hhbmdlZCA9IGZ1bmN0aW9uIChyZXBlYXQsIGl0ZW1zKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB2YXIgaXRlbXNMZW5ndGggPSBpdGVtcy5sZW5ndGg7XHJcbiAgICAgICAgaWYgKCFpdGVtcyB8fCBpdGVtc0xlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXBlYXQucmVtb3ZlQWxsVmlld3ModHJ1ZSwgIXJlcGVhdC52aWV3c1JlcXVpcmVMaWZlY3ljbGUpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBjaGlsZHJlbiA9IHJlcGVhdC52aWV3cygpO1xyXG4gICAgICAgIHZhciB2aWV3c0xlbmd0aCA9IGNoaWxkcmVuLmxlbmd0aDtcclxuICAgICAgICBpZiAodmlld3NMZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgdGhpcy5fc3RhbmRhcmRQcm9jZXNzSW5zdGFuY2VDaGFuZ2VkKHJlcGVhdCwgaXRlbXMpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChyZXBlYXQudmlld3NSZXF1aXJlTGlmZWN5Y2xlKSB7XHJcbiAgICAgICAgICAgIHZhciBjaGlsZHJlblNuYXBzaG90ID0gY2hpbGRyZW4uc2xpY2UoMCk7XHJcbiAgICAgICAgICAgIHZhciBpdGVtTmFtZUluQmluZGluZ0NvbnRleHQgPSByZXBlYXQubG9jYWw7XHJcbiAgICAgICAgICAgIHZhciBtYXRjaGVyXzEgPSByZXBlYXQubWF0Y2hlcigpO1xyXG4gICAgICAgICAgICB2YXIgaXRlbXNQcmV2aW91c2x5SW5WaWV3c18xID0gW107XHJcbiAgICAgICAgICAgIHZhciB2aWV3c1RvUmVtb3ZlID0gW107XHJcbiAgICAgICAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCB2aWV3c0xlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgdmFyIHZpZXcgPSBjaGlsZHJlblNuYXBzaG90W2luZGV4XTtcclxuICAgICAgICAgICAgICAgIHZhciBvbGRJdGVtID0gdmlldy5iaW5kaW5nQ29udGV4dFtpdGVtTmFtZUluQmluZGluZ0NvbnRleHRdO1xyXG4gICAgICAgICAgICAgICAgaWYgKGluZGV4T2YoaXRlbXMsIG9sZEl0ZW0sIG1hdGNoZXJfMSkgPT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmlld3NUb1JlbW92ZS5wdXNoKHZpZXcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbXNQcmV2aW91c2x5SW5WaWV3c18xLnB1c2gob2xkSXRlbSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHVwZGF0ZVZpZXdzID0gdm9pZCAwO1xyXG4gICAgICAgICAgICB2YXIgcmVtb3ZlUHJvbWlzZSA9IHZvaWQgMDtcclxuICAgICAgICAgICAgaWYgKGl0ZW1zUHJldmlvdXNseUluVmlld3NfMS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICByZW1vdmVQcm9taXNlID0gcmVwZWF0LnJlbW92ZVZpZXdzKHZpZXdzVG9SZW1vdmUsIHRydWUsICFyZXBlYXQudmlld3NSZXF1aXJlTGlmZWN5Y2xlKTtcclxuICAgICAgICAgICAgICAgIHVwZGF0ZVZpZXdzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBpdGVtc0xlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IGl0ZW1zW2luZGV4XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4T2ZWaWV3ID0gaW5kZXhPZihpdGVtc1ByZXZpb3VzbHlJblZpZXdzXzEsIGl0ZW0sIG1hdGNoZXJfMSwgaW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmlldyA9IHZvaWQgMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluZGV4T2ZWaWV3ID09PSAtMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG92ZXJyaWRlQ29udGV4dCA9IGNyZWF0ZUZ1bGxPdmVycmlkZUNvbnRleHQocmVwZWF0LCBpdGVtc1tpbmRleF0sIGluZGV4LCBpdGVtc0xlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXBlYXQuaW5zZXJ0VmlldyhpbmRleCwgb3ZlcnJpZGVDb250ZXh0LmJpbmRpbmdDb250ZXh0LCBvdmVycmlkZUNvbnRleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXNQcmV2aW91c2x5SW5WaWV3c18xLnNwbGljZShpbmRleCwgMCwgdW5kZWZpbmVkKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChpbmRleE9mVmlldyA9PT0gaW5kZXgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXcgPSBjaGlsZHJlbltpbmRleE9mVmlld107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtc1ByZXZpb3VzbHlJblZpZXdzXzFbaW5kZXhPZlZpZXddID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlldyA9IGNoaWxkcmVuW2luZGV4T2ZWaWV3XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcGVhdC5tb3ZlVmlldyhpbmRleE9mVmlldywgaW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXNQcmV2aW91c2x5SW5WaWV3c18xLnNwbGljZShpbmRleE9mVmlldywgMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtc1ByZXZpb3VzbHlJblZpZXdzXzEuc3BsaWNlKGluZGV4LCAwLCB1bmRlZmluZWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2aWV3KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVPdmVycmlkZUNvbnRleHQodmlldy5vdmVycmlkZUNvbnRleHQsIGluZGV4LCBpdGVtc0xlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuX2luUGxhY2VQcm9jZXNzSXRlbXMocmVwZWF0LCBpdGVtcyk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmVtb3ZlUHJvbWlzZSA9IHJlcGVhdC5yZW1vdmVBbGxWaWV3cyh0cnVlLCAhcmVwZWF0LnZpZXdzUmVxdWlyZUxpZmVjeWNsZSk7XHJcbiAgICAgICAgICAgICAgICB1cGRhdGVWaWV3cyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLl9zdGFuZGFyZFByb2Nlc3NJbnN0YW5jZUNoYW5nZWQocmVwZWF0LCBpdGVtcyk7IH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHJlbW92ZVByb21pc2UgaW5zdGFuY2VvZiBQcm9taXNlKSB7XHJcbiAgICAgICAgICAgICAgICByZW1vdmVQcm9taXNlLnRoZW4odXBkYXRlVmlld3MpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdXBkYXRlVmlld3MoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5faW5QbGFjZVByb2Nlc3NJdGVtcyhyZXBlYXQsIGl0ZW1zKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgQXJyYXlSZXBlYXRTdHJhdGVneS5wcm90b3R5cGUuX3N0YW5kYXJkUHJvY2Vzc0luc3RhbmNlQ2hhbmdlZCA9IGZ1bmN0aW9uIChyZXBlYXQsIGl0ZW1zKSB7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGlpID0gaXRlbXMubGVuZ3RoOyBpIDwgaWk7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgb3ZlcnJpZGVDb250ZXh0ID0gY3JlYXRlRnVsbE92ZXJyaWRlQ29udGV4dChyZXBlYXQsIGl0ZW1zW2ldLCBpLCBpaSk7XHJcbiAgICAgICAgICAgIHJlcGVhdC5hZGRWaWV3KG92ZXJyaWRlQ29udGV4dC5iaW5kaW5nQ29udGV4dCwgb3ZlcnJpZGVDb250ZXh0KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgQXJyYXlSZXBlYXRTdHJhdGVneS5wcm90b3R5cGUuX2luUGxhY2VQcm9jZXNzSXRlbXMgPSBmdW5jdGlvbiAocmVwZWF0LCBpdGVtcykge1xyXG4gICAgICAgIHZhciBpdGVtc0xlbmd0aCA9IGl0ZW1zLmxlbmd0aDtcclxuICAgICAgICB2YXIgdmlld3NMZW5ndGggPSByZXBlYXQudmlld0NvdW50KCk7XHJcbiAgICAgICAgd2hpbGUgKHZpZXdzTGVuZ3RoID4gaXRlbXNMZW5ndGgpIHtcclxuICAgICAgICAgICAgdmlld3NMZW5ndGgtLTtcclxuICAgICAgICAgICAgcmVwZWF0LnJlbW92ZVZpZXcodmlld3NMZW5ndGgsIHRydWUsICFyZXBlYXQudmlld3NSZXF1aXJlTGlmZWN5Y2xlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGxvY2FsID0gcmVwZWF0LmxvY2FsO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmlld3NMZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgdmlldyA9IHJlcGVhdC52aWV3KGkpO1xyXG4gICAgICAgICAgICB2YXIgbGFzdCA9IGkgPT09IGl0ZW1zTGVuZ3RoIC0gMTtcclxuICAgICAgICAgICAgdmFyIG1pZGRsZSA9IGkgIT09IDAgJiYgIWxhc3Q7XHJcbiAgICAgICAgICAgIHZhciBiaW5kaW5nQ29udGV4dCA9IHZpZXcuYmluZGluZ0NvbnRleHQ7XHJcbiAgICAgICAgICAgIHZhciBvdmVycmlkZUNvbnRleHQgPSB2aWV3Lm92ZXJyaWRlQ29udGV4dDtcclxuICAgICAgICAgICAgaWYgKGJpbmRpbmdDb250ZXh0W2xvY2FsXSA9PT0gaXRlbXNbaV1cclxuICAgICAgICAgICAgICAgICYmIG92ZXJyaWRlQ29udGV4dC4kbWlkZGxlID09PSBtaWRkbGVcclxuICAgICAgICAgICAgICAgICYmIG92ZXJyaWRlQ29udGV4dC4kbGFzdCA9PT0gbGFzdCkge1xyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYmluZGluZ0NvbnRleHRbbG9jYWxdID0gaXRlbXNbaV07XHJcbiAgICAgICAgICAgIG92ZXJyaWRlQ29udGV4dC4kbWlkZGxlID0gbWlkZGxlO1xyXG4gICAgICAgICAgICBvdmVycmlkZUNvbnRleHQuJGxhc3QgPSBsYXN0O1xyXG4gICAgICAgICAgICByZXBlYXQudXBkYXRlQmluZGluZ3Modmlldyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAodmFyIGkgPSB2aWV3c0xlbmd0aDsgaSA8IGl0ZW1zTGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIG92ZXJyaWRlQ29udGV4dCA9IGNyZWF0ZUZ1bGxPdmVycmlkZUNvbnRleHQocmVwZWF0LCBpdGVtc1tpXSwgaSwgaXRlbXNMZW5ndGgpO1xyXG4gICAgICAgICAgICByZXBlYXQuYWRkVmlldyhvdmVycmlkZUNvbnRleHQuYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIEFycmF5UmVwZWF0U3RyYXRlZ3kucHJvdG90eXBlLmluc3RhbmNlTXV0YXRlZCA9IGZ1bmN0aW9uIChyZXBlYXQsIGFycmF5LCBzcGxpY2VzKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICBpZiAocmVwZWF0Ll9fcXVldWVkU3BsaWNlcykge1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgaWkgPSBzcGxpY2VzLmxlbmd0aDsgaSA8IGlpOyArK2kpIHtcclxuICAgICAgICAgICAgICAgIHZhciBfYSA9IHNwbGljZXNbaV0sIGluZGV4ID0gX2EuaW5kZXgsIHJlbW92ZWQgPSBfYS5yZW1vdmVkLCBhZGRlZENvdW50ID0gX2EuYWRkZWRDb3VudDtcclxuICAgICAgICAgICAgICAgIG1lcmdlU3BsaWNlKHJlcGVhdC5fX3F1ZXVlZFNwbGljZXMsIGluZGV4LCByZW1vdmVkLCBhZGRlZENvdW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXBlYXQuX19hcnJheSA9IGFycmF5LnNsaWNlKDApO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBtYXliZVByb21pc2UgPSB0aGlzLl9ydW5TcGxpY2VzKHJlcGVhdCwgYXJyYXkuc2xpY2UoMCksIHNwbGljZXMpO1xyXG4gICAgICAgIGlmIChtYXliZVByb21pc2UgaW5zdGFuY2VvZiBQcm9taXNlKSB7XHJcbiAgICAgICAgICAgIHZhciBxdWV1ZWRTcGxpY2VzXzEgPSByZXBlYXQuX19xdWV1ZWRTcGxpY2VzID0gW107XHJcbiAgICAgICAgICAgIHZhciBydW5RdWV1ZWRTcGxpY2VzXzEgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXF1ZXVlZFNwbGljZXNfMS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXBlYXQuX19xdWV1ZWRTcGxpY2VzID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcGVhdC5fX2FycmF5ID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBuZXh0UHJvbWlzZSA9IF90aGlzLl9ydW5TcGxpY2VzKHJlcGVhdCwgcmVwZWF0Ll9fYXJyYXksIHF1ZXVlZFNwbGljZXNfMSkgfHwgUHJvbWlzZS5yZXNvbHZlKCk7XHJcbiAgICAgICAgICAgICAgICBxdWV1ZWRTcGxpY2VzXzEgPSByZXBlYXQuX19xdWV1ZWRTcGxpY2VzID0gW107XHJcbiAgICAgICAgICAgICAgICBuZXh0UHJvbWlzZS50aGVuKHJ1blF1ZXVlZFNwbGljZXNfMSk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIG1heWJlUHJvbWlzZS50aGVuKHJ1blF1ZXVlZFNwbGljZXNfMSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIEFycmF5UmVwZWF0U3RyYXRlZ3kucHJvdG90eXBlLl9ydW5TcGxpY2VzID0gZnVuY3Rpb24gKHJlcGVhdCwgYXJyYXksIHNwbGljZXMpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciByZW1vdmVEZWx0YSA9IDA7XHJcbiAgICAgICAgdmFyIHJtUHJvbWlzZXMgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBpID0gMCwgaWkgPSBzcGxpY2VzLmxlbmd0aDsgaSA8IGlpOyArK2kpIHtcclxuICAgICAgICAgICAgdmFyIHNwbGljZSA9IHNwbGljZXNbaV07XHJcbiAgICAgICAgICAgIHZhciByZW1vdmVkID0gc3BsaWNlLnJlbW92ZWQ7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwLCBqaiA9IHJlbW92ZWQubGVuZ3RoOyBqIDwgamo7ICsraikge1xyXG4gICAgICAgICAgICAgICAgdmFyIHZpZXdPclByb21pc2UgPSByZXBlYXQucmVtb3ZlVmlldyhzcGxpY2UuaW5kZXggKyByZW1vdmVEZWx0YSArIHJtUHJvbWlzZXMubGVuZ3RoLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgIGlmICh2aWV3T3JQcm9taXNlIGluc3RhbmNlb2YgUHJvbWlzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJtUHJvbWlzZXMucHVzaCh2aWV3T3JQcm9taXNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZW1vdmVEZWx0YSAtPSBzcGxpY2UuYWRkZWRDb3VudDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHJtUHJvbWlzZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocm1Qcm9taXNlcykudGhlbihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3BsaWNlSW5kZXhMb3cgPSBfdGhpcy5faGFuZGxlQWRkZWRTcGxpY2VzKHJlcGVhdCwgYXJyYXksIHNwbGljZXMpO1xyXG4gICAgICAgICAgICAgICAgdXBkYXRlT3ZlcnJpZGVDb250ZXh0cyhyZXBlYXQudmlld3MoKSwgc3BsaWNlSW5kZXhMb3cpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHNwbGljZUluZGV4TG93ID0gdGhpcy5faGFuZGxlQWRkZWRTcGxpY2VzKHJlcGVhdCwgYXJyYXksIHNwbGljZXMpO1xyXG4gICAgICAgIHVwZGF0ZU92ZXJyaWRlQ29udGV4dHMocmVwZWF0LnZpZXdzKCksIHNwbGljZUluZGV4TG93KTtcclxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgfTtcclxuICAgIEFycmF5UmVwZWF0U3RyYXRlZ3kucHJvdG90eXBlLl9oYW5kbGVBZGRlZFNwbGljZXMgPSBmdW5jdGlvbiAocmVwZWF0LCBhcnJheSwgc3BsaWNlcykge1xyXG4gICAgICAgIHZhciBzcGxpY2VJbmRleDtcclxuICAgICAgICB2YXIgc3BsaWNlSW5kZXhMb3c7XHJcbiAgICAgICAgdmFyIGFycmF5TGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBpaSA9IHNwbGljZXMubGVuZ3RoOyBpIDwgaWk7ICsraSkge1xyXG4gICAgICAgICAgICB2YXIgc3BsaWNlID0gc3BsaWNlc1tpXTtcclxuICAgICAgICAgICAgdmFyIGFkZEluZGV4ID0gc3BsaWNlSW5kZXggPSBzcGxpY2UuaW5kZXg7XHJcbiAgICAgICAgICAgIHZhciBlbmQgPSBzcGxpY2UuaW5kZXggKyBzcGxpY2UuYWRkZWRDb3VudDtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBzcGxpY2VJbmRleExvdyA9PT0gJ3VuZGVmaW5lZCcgfHwgc3BsaWNlSW5kZXhMb3cgPT09IG51bGwgfHwgc3BsaWNlSW5kZXhMb3cgPiBzcGxpY2UuaW5kZXgpIHtcclxuICAgICAgICAgICAgICAgIHNwbGljZUluZGV4TG93ID0gc3BsaWNlSW5kZXg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZm9yICg7IGFkZEluZGV4IDwgZW5kOyArK2FkZEluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgb3ZlcnJpZGVDb250ZXh0ID0gY3JlYXRlRnVsbE92ZXJyaWRlQ29udGV4dChyZXBlYXQsIGFycmF5W2FkZEluZGV4XSwgYWRkSW5kZXgsIGFycmF5TGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgIHJlcGVhdC5pbnNlcnRWaWV3KGFkZEluZGV4LCBvdmVycmlkZUNvbnRleHQuYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHNwbGljZUluZGV4TG93O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBBcnJheVJlcGVhdFN0cmF0ZWd5O1xyXG59KCkpO1xuXG52YXIgTWFwUmVwZWF0U3RyYXRlZ3kgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gTWFwUmVwZWF0U3RyYXRlZ3koKSB7XHJcbiAgICB9XHJcbiAgICBNYXBSZXBlYXRTdHJhdGVneS5wcm90b3R5cGUuZ2V0Q29sbGVjdGlvbk9ic2VydmVyID0gZnVuY3Rpb24gKG9ic2VydmVyTG9jYXRvciwgaXRlbXMpIHtcclxuICAgICAgICByZXR1cm4gb2JzZXJ2ZXJMb2NhdG9yLmdldE1hcE9ic2VydmVyKGl0ZW1zKTtcclxuICAgIH07XHJcbiAgICBNYXBSZXBlYXRTdHJhdGVneS5wcm90b3R5cGUuaW5zdGFuY2VDaGFuZ2VkID0gZnVuY3Rpb24gKHJlcGVhdCwgaXRlbXMpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciByZW1vdmVQcm9taXNlID0gcmVwZWF0LnJlbW92ZUFsbFZpZXdzKHRydWUsICFyZXBlYXQudmlld3NSZXF1aXJlTGlmZWN5Y2xlKTtcclxuICAgICAgICBpZiAocmVtb3ZlUHJvbWlzZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcclxuICAgICAgICAgICAgcmVtb3ZlUHJvbWlzZS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLl9zdGFuZGFyZFByb2Nlc3NJdGVtcyhyZXBlYXQsIGl0ZW1zKTsgfSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fc3RhbmRhcmRQcm9jZXNzSXRlbXMocmVwZWF0LCBpdGVtcyk7XHJcbiAgICB9O1xyXG4gICAgTWFwUmVwZWF0U3RyYXRlZ3kucHJvdG90eXBlLl9zdGFuZGFyZFByb2Nlc3NJdGVtcyA9IGZ1bmN0aW9uIChyZXBlYXQsIGl0ZW1zKSB7XHJcbiAgICAgICAgdmFyIGluZGV4ID0gMDtcclxuICAgICAgICB2YXIgb3ZlcnJpZGVDb250ZXh0O1xyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHtcclxuICAgICAgICAgICAgb3ZlcnJpZGVDb250ZXh0ID0gY3JlYXRlRnVsbE92ZXJyaWRlQ29udGV4dChyZXBlYXQsIHZhbHVlLCBpbmRleCwgaXRlbXMuc2l6ZSwga2V5KTtcclxuICAgICAgICAgICAgcmVwZWF0LmFkZFZpZXcob3ZlcnJpZGVDb250ZXh0LmJpbmRpbmdDb250ZXh0LCBvdmVycmlkZUNvbnRleHQpO1xyXG4gICAgICAgICAgICArK2luZGV4O1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIE1hcFJlcGVhdFN0cmF0ZWd5LnByb3RvdHlwZS5pbnN0YW5jZU11dGF0ZWQgPSBmdW5jdGlvbiAocmVwZWF0LCBtYXAsIHJlY29yZHMpIHtcclxuICAgICAgICB2YXIga2V5O1xyXG4gICAgICAgIHZhciBpO1xyXG4gICAgICAgIHZhciBpaTtcclxuICAgICAgICB2YXIgb3ZlcnJpZGVDb250ZXh0O1xyXG4gICAgICAgIHZhciByZW1vdmVJbmRleDtcclxuICAgICAgICB2YXIgYWRkSW5kZXg7XHJcbiAgICAgICAgdmFyIHJlY29yZDtcclxuICAgICAgICB2YXIgcm1Qcm9taXNlcyA9IFtdO1xyXG4gICAgICAgIHZhciB2aWV3T3JQcm9taXNlO1xyXG4gICAgICAgIGZvciAoaSA9IDAsIGlpID0gcmVjb3Jkcy5sZW5ndGg7IGkgPCBpaTsgKytpKSB7XHJcbiAgICAgICAgICAgIHJlY29yZCA9IHJlY29yZHNbaV07XHJcbiAgICAgICAgICAgIGtleSA9IHJlY29yZC5rZXk7XHJcbiAgICAgICAgICAgIHN3aXRjaCAocmVjb3JkLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgJ3VwZGF0ZSc6XHJcbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlSW5kZXggPSB0aGlzLl9nZXRWaWV3SW5kZXhCeUtleShyZXBlYXQsIGtleSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmlld09yUHJvbWlzZSA9IHJlcGVhdC5yZW1vdmVWaWV3KHJlbW92ZUluZGV4LCB0cnVlLCAhcmVwZWF0LnZpZXdzUmVxdWlyZUxpZmVjeWNsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZpZXdPclByb21pc2UgaW5zdGFuY2VvZiBQcm9taXNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJtUHJvbWlzZXMucHVzaCh2aWV3T3JQcm9taXNlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgb3ZlcnJpZGVDb250ZXh0ID0gY3JlYXRlRnVsbE92ZXJyaWRlQ29udGV4dChyZXBlYXQsIG1hcC5nZXQoa2V5KSwgcmVtb3ZlSW5kZXgsIG1hcC5zaXplLCBrZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcGVhdC5pbnNlcnRWaWV3KHJlbW92ZUluZGV4LCBvdmVycmlkZUNvbnRleHQuYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdhZGQnOlxyXG4gICAgICAgICAgICAgICAgICAgIGFkZEluZGV4ID0gcmVwZWF0LnZpZXdDb3VudCgpIDw9IG1hcC5zaXplIC0gMSA/IHJlcGVhdC52aWV3Q291bnQoKSA6IG1hcC5zaXplIC0gMTtcclxuICAgICAgICAgICAgICAgICAgICBvdmVycmlkZUNvbnRleHQgPSBjcmVhdGVGdWxsT3ZlcnJpZGVDb250ZXh0KHJlcGVhdCwgbWFwLmdldChrZXkpLCBhZGRJbmRleCwgbWFwLnNpemUsIGtleSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVwZWF0Lmluc2VydFZpZXcobWFwLnNpemUgLSAxLCBvdmVycmlkZUNvbnRleHQuYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdkZWxldGUnOlxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZWNvcmQub2xkVmFsdWUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJlbW92ZUluZGV4ID0gdGhpcy5fZ2V0Vmlld0luZGV4QnlLZXkocmVwZWF0LCBrZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZpZXdPclByb21pc2UgPSByZXBlYXQucmVtb3ZlVmlldyhyZW1vdmVJbmRleCwgdHJ1ZSwgIXJlcGVhdC52aWV3c1JlcXVpcmVMaWZlY3ljbGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh2aWV3T3JQcm9taXNlIGluc3RhbmNlb2YgUHJvbWlzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBybVByb21pc2VzLnB1c2godmlld09yUHJvbWlzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnY2xlYXInOlxyXG4gICAgICAgICAgICAgICAgICAgIHJlcGVhdC5yZW1vdmVBbGxWaWV3cyh0cnVlLCAhcmVwZWF0LnZpZXdzUmVxdWlyZUxpZmVjeWNsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChybVByb21pc2VzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgUHJvbWlzZS5hbGwocm1Qcm9taXNlcykudGhlbihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB1cGRhdGVPdmVycmlkZUNvbnRleHRzKHJlcGVhdC52aWV3cygpLCAwKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB1cGRhdGVPdmVycmlkZUNvbnRleHRzKHJlcGVhdC52aWV3cygpLCAwKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgTWFwUmVwZWF0U3RyYXRlZ3kucHJvdG90eXBlLl9nZXRWaWV3SW5kZXhCeUtleSA9IGZ1bmN0aW9uIChyZXBlYXQsIGtleSkge1xyXG4gICAgICAgIHZhciBpO1xyXG4gICAgICAgIHZhciBpaTtcclxuICAgICAgICB2YXIgY2hpbGQ7XHJcbiAgICAgICAgZm9yIChpID0gMCwgaWkgPSByZXBlYXQudmlld0NvdW50KCk7IGkgPCBpaTsgKytpKSB7XHJcbiAgICAgICAgICAgIGNoaWxkID0gcmVwZWF0LnZpZXcoaSk7XHJcbiAgICAgICAgICAgIGlmIChjaGlsZC5iaW5kaW5nQ29udGV4dFtyZXBlYXQua2V5XSA9PT0ga2V5KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gaTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBNYXBSZXBlYXRTdHJhdGVneTtcclxufSgpKTtcblxudmFyIE51bGxSZXBlYXRTdHJhdGVneSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBOdWxsUmVwZWF0U3RyYXRlZ3koKSB7XHJcbiAgICB9XHJcbiAgICBOdWxsUmVwZWF0U3RyYXRlZ3kucHJvdG90eXBlLmluc3RhbmNlQ2hhbmdlZCA9IGZ1bmN0aW9uIChyZXBlYXQsIGl0ZW1zKSB7XHJcbiAgICAgICAgcmVwZWF0LnJlbW92ZUFsbFZpZXdzKHRydWUpO1xyXG4gICAgfTtcclxuICAgIE51bGxSZXBlYXRTdHJhdGVneS5wcm90b3R5cGUuZ2V0Q29sbGVjdGlvbk9ic2VydmVyID0gZnVuY3Rpb24gKG9ic2VydmVyTG9jYXRvciwgaXRlbXMpIHtcclxuICAgIH07XHJcbiAgICByZXR1cm4gTnVsbFJlcGVhdFN0cmF0ZWd5O1xyXG59KCkpO1xuXG52YXIgTnVtYmVyUmVwZWF0U3RyYXRlZ3kgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gTnVtYmVyUmVwZWF0U3RyYXRlZ3koKSB7XHJcbiAgICB9XHJcbiAgICBOdW1iZXJSZXBlYXRTdHJhdGVneS5wcm90b3R5cGUuZ2V0Q29sbGVjdGlvbk9ic2VydmVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfTtcclxuICAgIE51bWJlclJlcGVhdFN0cmF0ZWd5LnByb3RvdHlwZS5pbnN0YW5jZUNoYW5nZWQgPSBmdW5jdGlvbiAocmVwZWF0LCB2YWx1ZSkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgdmFyIHJlbW92ZVByb21pc2UgPSByZXBlYXQucmVtb3ZlQWxsVmlld3ModHJ1ZSwgIXJlcGVhdC52aWV3c1JlcXVpcmVMaWZlY3ljbGUpO1xyXG4gICAgICAgIGlmIChyZW1vdmVQcm9taXNlIGluc3RhbmNlb2YgUHJvbWlzZSkge1xyXG4gICAgICAgICAgICByZW1vdmVQcm9taXNlLnRoZW4oZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuX3N0YW5kYXJkUHJvY2Vzc0l0ZW1zKHJlcGVhdCwgdmFsdWUpOyB9KTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9zdGFuZGFyZFByb2Nlc3NJdGVtcyhyZXBlYXQsIHZhbHVlKTtcclxuICAgIH07XHJcbiAgICBOdW1iZXJSZXBlYXRTdHJhdGVneS5wcm90b3R5cGUuX3N0YW5kYXJkUHJvY2Vzc0l0ZW1zID0gZnVuY3Rpb24gKHJlcGVhdCwgdmFsdWUpIHtcclxuICAgICAgICB2YXIgY2hpbGRyZW5MZW5ndGggPSByZXBlYXQudmlld0NvdW50KCk7XHJcbiAgICAgICAgdmFyIGk7XHJcbiAgICAgICAgdmFyIGlpO1xyXG4gICAgICAgIHZhciBvdmVycmlkZUNvbnRleHQ7XHJcbiAgICAgICAgdmFyIHZpZXdzVG9SZW1vdmU7XHJcbiAgICAgICAgdmFsdWUgPSBNYXRoLmZsb29yKHZhbHVlKTtcclxuICAgICAgICB2aWV3c1RvUmVtb3ZlID0gY2hpbGRyZW5MZW5ndGggLSB2YWx1ZTtcclxuICAgICAgICBpZiAodmlld3NUb1JlbW92ZSA+IDApIHtcclxuICAgICAgICAgICAgaWYgKHZpZXdzVG9SZW1vdmUgPiBjaGlsZHJlbkxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgdmlld3NUb1JlbW92ZSA9IGNoaWxkcmVuTGVuZ3RoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZvciAoaSA9IDAsIGlpID0gdmlld3NUb1JlbW92ZTsgaSA8IGlpOyArK2kpIHtcclxuICAgICAgICAgICAgICAgIHJlcGVhdC5yZW1vdmVWaWV3KGNoaWxkcmVuTGVuZ3RoIC0gKGkgKyAxKSwgdHJ1ZSwgIXJlcGVhdC52aWV3c1JlcXVpcmVMaWZlY3ljbGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yIChpID0gY2hpbGRyZW5MZW5ndGgsIGlpID0gdmFsdWU7IGkgPCBpaTsgKytpKSB7XHJcbiAgICAgICAgICAgIG92ZXJyaWRlQ29udGV4dCA9IGNyZWF0ZUZ1bGxPdmVycmlkZUNvbnRleHQocmVwZWF0LCBpLCBpLCBpaSk7XHJcbiAgICAgICAgICAgIHJlcGVhdC5hZGRWaWV3KG92ZXJyaWRlQ29udGV4dC5iaW5kaW5nQ29udGV4dCwgb3ZlcnJpZGVDb250ZXh0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdXBkYXRlT3ZlcnJpZGVDb250ZXh0cyhyZXBlYXQudmlld3MoKSwgMCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE51bWJlclJlcGVhdFN0cmF0ZWd5O1xyXG59KCkpO1xuXG52YXIgU2V0UmVwZWF0U3RyYXRlZ3kgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gU2V0UmVwZWF0U3RyYXRlZ3koKSB7XHJcbiAgICB9XHJcbiAgICBTZXRSZXBlYXRTdHJhdGVneS5wcm90b3R5cGUuZ2V0Q29sbGVjdGlvbk9ic2VydmVyID0gZnVuY3Rpb24gKG9ic2VydmVyTG9jYXRvciwgaXRlbXMpIHtcclxuICAgICAgICByZXR1cm4gb2JzZXJ2ZXJMb2NhdG9yLmdldFNldE9ic2VydmVyKGl0ZW1zKTtcclxuICAgIH07XHJcbiAgICBTZXRSZXBlYXRTdHJhdGVneS5wcm90b3R5cGUuaW5zdGFuY2VDaGFuZ2VkID0gZnVuY3Rpb24gKHJlcGVhdCwgaXRlbXMpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciByZW1vdmVQcm9taXNlID0gcmVwZWF0LnJlbW92ZUFsbFZpZXdzKHRydWUsICFyZXBlYXQudmlld3NSZXF1aXJlTGlmZWN5Y2xlKTtcclxuICAgICAgICBpZiAocmVtb3ZlUHJvbWlzZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcclxuICAgICAgICAgICAgcmVtb3ZlUHJvbWlzZS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLl9zdGFuZGFyZFByb2Nlc3NJdGVtcyhyZXBlYXQsIGl0ZW1zKTsgfSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fc3RhbmRhcmRQcm9jZXNzSXRlbXMocmVwZWF0LCBpdGVtcyk7XHJcbiAgICB9O1xyXG4gICAgU2V0UmVwZWF0U3RyYXRlZ3kucHJvdG90eXBlLl9zdGFuZGFyZFByb2Nlc3NJdGVtcyA9IGZ1bmN0aW9uIChyZXBlYXQsIGl0ZW1zKSB7XHJcbiAgICAgICAgdmFyIGluZGV4ID0gMDtcclxuICAgICAgICB2YXIgb3ZlcnJpZGVDb250ZXh0O1xyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIG92ZXJyaWRlQ29udGV4dCA9IGNyZWF0ZUZ1bGxPdmVycmlkZUNvbnRleHQocmVwZWF0LCB2YWx1ZSwgaW5kZXgsIGl0ZW1zLnNpemUpO1xyXG4gICAgICAgICAgICByZXBlYXQuYWRkVmlldyhvdmVycmlkZUNvbnRleHQuYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCk7XHJcbiAgICAgICAgICAgICsraW5kZXg7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgU2V0UmVwZWF0U3RyYXRlZ3kucHJvdG90eXBlLmluc3RhbmNlTXV0YXRlZCA9IGZ1bmN0aW9uIChyZXBlYXQsIHNldCwgcmVjb3Jkcykge1xyXG4gICAgICAgIHZhciB2YWx1ZTtcclxuICAgICAgICB2YXIgaTtcclxuICAgICAgICB2YXIgaWk7XHJcbiAgICAgICAgdmFyIG92ZXJyaWRlQ29udGV4dDtcclxuICAgICAgICB2YXIgcmVtb3ZlSW5kZXg7XHJcbiAgICAgICAgdmFyIHJlY29yZDtcclxuICAgICAgICB2YXIgcm1Qcm9taXNlcyA9IFtdO1xyXG4gICAgICAgIHZhciB2aWV3T3JQcm9taXNlO1xyXG4gICAgICAgIGZvciAoaSA9IDAsIGlpID0gcmVjb3Jkcy5sZW5ndGg7IGkgPCBpaTsgKytpKSB7XHJcbiAgICAgICAgICAgIHJlY29yZCA9IHJlY29yZHNbaV07XHJcbiAgICAgICAgICAgIHZhbHVlID0gcmVjb3JkLnZhbHVlO1xyXG4gICAgICAgICAgICBzd2l0Y2ggKHJlY29yZC50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdhZGQnOlxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzaXplID0gTWF0aC5tYXgoc2V0LnNpemUgLSAxLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICBvdmVycmlkZUNvbnRleHQgPSBjcmVhdGVGdWxsT3ZlcnJpZGVDb250ZXh0KHJlcGVhdCwgdmFsdWUsIHNpemUsIHNldC5zaXplKTtcclxuICAgICAgICAgICAgICAgICAgICByZXBlYXQuaW5zZXJ0VmlldyhzaXplLCBvdmVycmlkZUNvbnRleHQuYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdkZWxldGUnOlxyXG4gICAgICAgICAgICAgICAgICAgIHJlbW92ZUluZGV4ID0gdGhpcy5fZ2V0Vmlld0luZGV4QnlWYWx1ZShyZXBlYXQsIHZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICB2aWV3T3JQcm9taXNlID0gcmVwZWF0LnJlbW92ZVZpZXcocmVtb3ZlSW5kZXgsIHRydWUsICFyZXBlYXQudmlld3NSZXF1aXJlTGlmZWN5Y2xlKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodmlld09yUHJvbWlzZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcm1Qcm9taXNlcy5wdXNoKHZpZXdPclByb21pc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2NsZWFyJzpcclxuICAgICAgICAgICAgICAgICAgICByZXBlYXQucmVtb3ZlQWxsVmlld3ModHJ1ZSwgIXJlcGVhdC52aWV3c1JlcXVpcmVMaWZlY3ljbGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocm1Qcm9taXNlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIFByb21pc2UuYWxsKHJtUHJvbWlzZXMpLnRoZW4oZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdXBkYXRlT3ZlcnJpZGVDb250ZXh0cyhyZXBlYXQudmlld3MoKSwgMCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdXBkYXRlT3ZlcnJpZGVDb250ZXh0cyhyZXBlYXQudmlld3MoKSwgMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFNldFJlcGVhdFN0cmF0ZWd5LnByb3RvdHlwZS5fZ2V0Vmlld0luZGV4QnlWYWx1ZSA9IGZ1bmN0aW9uIChyZXBlYXQsIHZhbHVlKSB7XHJcbiAgICAgICAgdmFyIGk7XHJcbiAgICAgICAgdmFyIGlpO1xyXG4gICAgICAgIHZhciBjaGlsZDtcclxuICAgICAgICBmb3IgKGkgPSAwLCBpaSA9IHJlcGVhdC52aWV3Q291bnQoKTsgaSA8IGlpOyArK2kpIHtcclxuICAgICAgICAgICAgY2hpbGQgPSByZXBlYXQudmlldyhpKTtcclxuICAgICAgICAgICAgaWYgKGNoaWxkLmJpbmRpbmdDb250ZXh0W3JlcGVhdC5sb2NhbF0gPT09IHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gaTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBTZXRSZXBlYXRTdHJhdGVneTtcclxufSgpKTtcblxudmFyIFJlcGVhdFN0cmF0ZWd5TG9jYXRvciA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBSZXBlYXRTdHJhdGVneUxvY2F0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5tYXRjaGVycyA9IFtdO1xyXG4gICAgICAgIHRoaXMuc3RyYXRlZ2llcyA9IFtdO1xyXG4gICAgICAgIHRoaXMuYWRkU3RyYXRlZ3koZnVuY3Rpb24gKGl0ZW1zKSB7IHJldHVybiBpdGVtcyA9PT0gbnVsbCB8fCBpdGVtcyA9PT0gdW5kZWZpbmVkOyB9LCBuZXcgTnVsbFJlcGVhdFN0cmF0ZWd5KCkpO1xyXG4gICAgICAgIHRoaXMuYWRkU3RyYXRlZ3koZnVuY3Rpb24gKGl0ZW1zKSB7IHJldHVybiBpdGVtcyBpbnN0YW5jZW9mIEFycmF5OyB9LCBuZXcgQXJyYXlSZXBlYXRTdHJhdGVneSgpKTtcclxuICAgICAgICB0aGlzLmFkZFN0cmF0ZWd5KGZ1bmN0aW9uIChpdGVtcykgeyByZXR1cm4gaXRlbXMgaW5zdGFuY2VvZiBNYXA7IH0sIG5ldyBNYXBSZXBlYXRTdHJhdGVneSgpKTtcclxuICAgICAgICB0aGlzLmFkZFN0cmF0ZWd5KGZ1bmN0aW9uIChpdGVtcykgeyByZXR1cm4gaXRlbXMgaW5zdGFuY2VvZiBTZXQ7IH0sIG5ldyBTZXRSZXBlYXRTdHJhdGVneSgpKTtcclxuICAgICAgICB0aGlzLmFkZFN0cmF0ZWd5KGZ1bmN0aW9uIChpdGVtcykgeyByZXR1cm4gdHlwZW9mIGl0ZW1zID09PSAnbnVtYmVyJzsgfSwgbmV3IE51bWJlclJlcGVhdFN0cmF0ZWd5KCkpO1xyXG4gICAgfVxyXG4gICAgUmVwZWF0U3RyYXRlZ3lMb2NhdG9yLnByb3RvdHlwZS5hZGRTdHJhdGVneSA9IGZ1bmN0aW9uIChtYXRjaGVyLCBzdHJhdGVneSkge1xyXG4gICAgICAgIHRoaXMubWF0Y2hlcnMucHVzaChtYXRjaGVyKTtcclxuICAgICAgICB0aGlzLnN0cmF0ZWdpZXMucHVzaChzdHJhdGVneSk7XHJcbiAgICB9O1xyXG4gICAgUmVwZWF0U3RyYXRlZ3lMb2NhdG9yLnByb3RvdHlwZS5nZXRTdHJhdGVneSA9IGZ1bmN0aW9uIChpdGVtcykge1xyXG4gICAgICAgIHZhciBtYXRjaGVycyA9IHRoaXMubWF0Y2hlcnM7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGlpID0gbWF0Y2hlcnMubGVuZ3RoOyBpIDwgaWk7ICsraSkge1xyXG4gICAgICAgICAgICBpZiAobWF0Y2hlcnNbaV0oaXRlbXMpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zdHJhdGVnaWVzW2ldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBSZXBlYXRTdHJhdGVneUxvY2F0b3I7XHJcbn0oKSk7XG5cbnZhciBsaWZlY3ljbGVPcHRpb25hbEJlaGF2aW9ycyA9IFsnZm9jdXMnLCAnaWYnLCAnZWxzZScsICdyZXBlYXQnLCAnc2hvdycsICdoaWRlJywgJ3dpdGgnXTtcclxuZnVuY3Rpb24gYmVoYXZpb3JSZXF1aXJlc0xpZmVjeWNsZShpbnN0cnVjdGlvbikge1xyXG4gICAgdmFyIHQgPSBpbnN0cnVjdGlvbi50eXBlO1xyXG4gICAgdmFyIG5hbWUgPSB0LmVsZW1lbnROYW1lICE9PSBudWxsID8gdC5lbGVtZW50TmFtZSA6IHQuYXR0cmlidXRlTmFtZTtcclxuICAgIHJldHVybiBsaWZlY3ljbGVPcHRpb25hbEJlaGF2aW9ycy5pbmRleE9mKG5hbWUpID09PSAtMSAmJiAodC5oYW5kbGVzQXR0YWNoZWQgfHwgdC5oYW5kbGVzQmluZCB8fCB0LmhhbmRsZXNDcmVhdGVkIHx8IHQuaGFuZGxlc0RldGFjaGVkIHx8IHQuaGFuZGxlc1VuYmluZClcclxuICAgICAgICB8fCB0LnZpZXdGYWN0b3J5ICYmIHZpZXdzUmVxdWlyZUxpZmVjeWNsZSh0LnZpZXdGYWN0b3J5KVxyXG4gICAgICAgIHx8IGluc3RydWN0aW9uLnZpZXdGYWN0b3J5ICYmIHZpZXdzUmVxdWlyZUxpZmVjeWNsZShpbnN0cnVjdGlvbi52aWV3RmFjdG9yeSk7XHJcbn1cclxuZnVuY3Rpb24gdGFyZ2V0UmVxdWlyZXNMaWZlY3ljbGUoaW5zdHJ1Y3Rpb24pIHtcclxuICAgIHZhciBiZWhhdmlvcnMgPSBpbnN0cnVjdGlvbi5iZWhhdmlvckluc3RydWN0aW9ucztcclxuICAgIGlmIChiZWhhdmlvcnMpIHtcclxuICAgICAgICB2YXIgaSA9IGJlaGF2aW9ycy5sZW5ndGg7XHJcbiAgICAgICAgd2hpbGUgKGktLSkge1xyXG4gICAgICAgICAgICBpZiAoYmVoYXZpb3JSZXF1aXJlc0xpZmVjeWNsZShiZWhhdmlvcnNbaV0pKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBpbnN0cnVjdGlvbi52aWV3RmFjdG9yeSAmJiB2aWV3c1JlcXVpcmVMaWZlY3ljbGUoaW5zdHJ1Y3Rpb24udmlld0ZhY3RvcnkpO1xyXG59XHJcbmZ1bmN0aW9uIHZpZXdzUmVxdWlyZUxpZmVjeWNsZSh2aWV3RmFjdG9yeSkge1xyXG4gICAgaWYgKCdfdmlld3NSZXF1aXJlTGlmZWN5Y2xlJyBpbiB2aWV3RmFjdG9yeSkge1xyXG4gICAgICAgIHJldHVybiB2aWV3RmFjdG9yeS5fdmlld3NSZXF1aXJlTGlmZWN5Y2xlO1xyXG4gICAgfVxyXG4gICAgdmlld0ZhY3RvcnkuX3ZpZXdzUmVxdWlyZUxpZmVjeWNsZSA9IGZhbHNlO1xyXG4gICAgaWYgKHZpZXdGYWN0b3J5LnZpZXdGYWN0b3J5KSB7XHJcbiAgICAgICAgdmlld0ZhY3RvcnkuX3ZpZXdzUmVxdWlyZUxpZmVjeWNsZSA9IHZpZXdzUmVxdWlyZUxpZmVjeWNsZSh2aWV3RmFjdG9yeS52aWV3RmFjdG9yeSk7XHJcbiAgICAgICAgcmV0dXJuIHZpZXdGYWN0b3J5Ll92aWV3c1JlcXVpcmVMaWZlY3ljbGU7XHJcbiAgICB9XHJcbiAgICBpZiAodmlld0ZhY3RvcnkudGVtcGxhdGUucXVlcnlTZWxlY3RvcignLmF1LWFuaW1hdGUnKSkge1xyXG4gICAgICAgIHZpZXdGYWN0b3J5Ll92aWV3c1JlcXVpcmVMaWZlY3ljbGUgPSB0cnVlO1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgZm9yICh2YXIgaWQgaW4gdmlld0ZhY3RvcnkuaW5zdHJ1Y3Rpb25zKSB7XHJcbiAgICAgICAgaWYgKHRhcmdldFJlcXVpcmVzTGlmZWN5Y2xlKHZpZXdGYWN0b3J5Lmluc3RydWN0aW9uc1tpZF0pKSB7XHJcbiAgICAgICAgICAgIHZpZXdGYWN0b3J5Ll92aWV3c1JlcXVpcmVMaWZlY3ljbGUgPSB0cnVlO1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICB2aWV3RmFjdG9yeS5fdmlld3NSZXF1aXJlTGlmZWN5Y2xlID0gZmFsc2U7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbn1cblxudmFyIEFic3RyYWN0UmVwZWF0ZXIgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQWJzdHJhY3RSZXBlYXRlcihvcHRpb25zKSB7XHJcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCB7XHJcbiAgICAgICAgICAgIGxvY2FsOiAnaXRlbXMnLFxyXG4gICAgICAgICAgICB2aWV3c1JlcXVpcmVMaWZlY3ljbGU6IHRydWVcclxuICAgICAgICB9LCBvcHRpb25zKTtcclxuICAgIH1cclxuICAgIEFic3RyYWN0UmVwZWF0ZXIucHJvdG90eXBlLnZpZXdDb3VudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3N1YmNsYXNzIG11c3QgaW1wbGVtZW50IGB2aWV3Q291bnRgJyk7XHJcbiAgICB9O1xyXG4gICAgQWJzdHJhY3RSZXBlYXRlci5wcm90b3R5cGUudmlld3MgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdzdWJjbGFzcyBtdXN0IGltcGxlbWVudCBgdmlld3NgJyk7XHJcbiAgICB9O1xyXG4gICAgQWJzdHJhY3RSZXBlYXRlci5wcm90b3R5cGUudmlldyA9IGZ1bmN0aW9uIChpbmRleCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignc3ViY2xhc3MgbXVzdCBpbXBsZW1lbnQgYHZpZXdgJyk7XHJcbiAgICB9O1xyXG4gICAgQWJzdHJhY3RSZXBlYXRlci5wcm90b3R5cGUubWF0Y2hlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3N1YmNsYXNzIG11c3QgaW1wbGVtZW50IGBtYXRjaGVyYCcpO1xyXG4gICAgfTtcclxuICAgIEFic3RyYWN0UmVwZWF0ZXIucHJvdG90eXBlLmFkZFZpZXcgPSBmdW5jdGlvbiAoYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignc3ViY2xhc3MgbXVzdCBpbXBsZW1lbnQgYGFkZFZpZXdgJyk7XHJcbiAgICB9O1xyXG4gICAgQWJzdHJhY3RSZXBlYXRlci5wcm90b3R5cGUuaW5zZXJ0VmlldyA9IGZ1bmN0aW9uIChpbmRleCwgYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignc3ViY2xhc3MgbXVzdCBpbXBsZW1lbnQgYGluc2VydFZpZXdgJyk7XHJcbiAgICB9O1xyXG4gICAgQWJzdHJhY3RSZXBlYXRlci5wcm90b3R5cGUubW92ZVZpZXcgPSBmdW5jdGlvbiAoc291cmNlSW5kZXgsIHRhcmdldEluZGV4KSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdzdWJjbGFzcyBtdXN0IGltcGxlbWVudCBgbW92ZVZpZXdgJyk7XHJcbiAgICB9O1xyXG4gICAgQWJzdHJhY3RSZXBlYXRlci5wcm90b3R5cGUucmVtb3ZlQWxsVmlld3MgPSBmdW5jdGlvbiAocmV0dXJuVG9DYWNoZSwgc2tpcEFuaW1hdGlvbikge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignc3ViY2xhc3MgbXVzdCBpbXBsZW1lbnQgYHJlbW92ZUFsbFZpZXdzYCcpO1xyXG4gICAgfTtcclxuICAgIEFic3RyYWN0UmVwZWF0ZXIucHJvdG90eXBlLnJlbW92ZVZpZXdzID0gZnVuY3Rpb24gKHZpZXdzVG9SZW1vdmUsIHJldHVyblRvQ2FjaGUsIHNraXBBbmltYXRpb24pIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3N1YmNsYXNzIG11c3QgaW1wbGVtZW50IGByZW1vdmVWaWV3YCcpO1xyXG4gICAgfTtcclxuICAgIEFic3RyYWN0UmVwZWF0ZXIucHJvdG90eXBlLnJlbW92ZVZpZXcgPSBmdW5jdGlvbiAoaW5kZXgsIHJldHVyblRvQ2FjaGUsIHNraXBBbmltYXRpb24pIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3N1YmNsYXNzIG11c3QgaW1wbGVtZW50IGByZW1vdmVWaWV3YCcpO1xyXG4gICAgfTtcclxuICAgIEFic3RyYWN0UmVwZWF0ZXIucHJvdG90eXBlLnVwZGF0ZUJpbmRpbmdzID0gZnVuY3Rpb24gKHZpZXcpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3N1YmNsYXNzIG11c3QgaW1wbGVtZW50IGB1cGRhdGVCaW5kaW5nc2AnKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gQWJzdHJhY3RSZXBlYXRlcjtcclxufSgpKTtcblxudmFyIFJlcGVhdCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoUmVwZWF0LCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gUmVwZWF0KHZpZXdGYWN0b3J5LCBpbnN0cnVjdGlvbiwgdmlld1Nsb3QsIHZpZXdSZXNvdXJjZXMsIG9ic2VydmVyTG9jYXRvciwgc3RyYXRlZ3lMb2NhdG9yKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywge1xyXG4gICAgICAgICAgICBsb2NhbDogJ2l0ZW0nLFxyXG4gICAgICAgICAgICB2aWV3c1JlcXVpcmVMaWZlY3ljbGU6IHZpZXdzUmVxdWlyZUxpZmVjeWNsZSh2aWV3RmFjdG9yeSlcclxuICAgICAgICB9KSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLnZpZXdGYWN0b3J5ID0gdmlld0ZhY3Rvcnk7XHJcbiAgICAgICAgX3RoaXMuaW5zdHJ1Y3Rpb24gPSBpbnN0cnVjdGlvbjtcclxuICAgICAgICBfdGhpcy52aWV3U2xvdCA9IHZpZXdTbG90O1xyXG4gICAgICAgIF90aGlzLmxvb2t1cEZ1bmN0aW9ucyA9IHZpZXdSZXNvdXJjZXMubG9va3VwRnVuY3Rpb25zO1xyXG4gICAgICAgIF90aGlzLm9ic2VydmVyTG9jYXRvciA9IG9ic2VydmVyTG9jYXRvcjtcclxuICAgICAgICBfdGhpcy5rZXkgPSAna2V5JztcclxuICAgICAgICBfdGhpcy52YWx1ZSA9ICd2YWx1ZSc7XHJcbiAgICAgICAgX3RoaXMuc3RyYXRlZ3lMb2NhdG9yID0gc3RyYXRlZ3lMb2NhdG9yO1xyXG4gICAgICAgIF90aGlzLmlnbm9yZU11dGF0aW9uID0gZmFsc2U7XHJcbiAgICAgICAgX3RoaXMuc291cmNlRXhwcmVzc2lvbiA9IGdldEl0ZW1zU291cmNlRXhwcmVzc2lvbihfdGhpcy5pbnN0cnVjdGlvbiwgJ3JlcGVhdC5mb3InKTtcclxuICAgICAgICBfdGhpcy5pc09uZVRpbWUgPSBpc09uZVRpbWUoX3RoaXMuc291cmNlRXhwcmVzc2lvbik7XHJcbiAgICAgICAgX3RoaXMudmlld3NSZXF1aXJlTGlmZWN5Y2xlID0gdmlld3NSZXF1aXJlTGlmZWN5Y2xlKHZpZXdGYWN0b3J5KTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICBSZXBlYXQucHJvdG90eXBlLmNhbGwgPSBmdW5jdGlvbiAoY29udGV4dCwgY2hhbmdlcykge1xyXG4gICAgICAgIHRoaXNbY29udGV4dF0odGhpcy5pdGVtcywgY2hhbmdlcyk7XHJcbiAgICB9O1xyXG4gICAgUmVwZWF0LnByb3RvdHlwZS5iaW5kID0gZnVuY3Rpb24gKGJpbmRpbmdDb250ZXh0LCBvdmVycmlkZUNvbnRleHQpIHtcclxuICAgICAgICB0aGlzLnNjb3BlID0geyBiaW5kaW5nQ29udGV4dDogYmluZGluZ0NvbnRleHQsIG92ZXJyaWRlQ29udGV4dDogb3ZlcnJpZGVDb250ZXh0IH07XHJcbiAgICAgICAgdGhpcy5tYXRjaGVyQmluZGluZyA9IHRoaXMuX2NhcHR1cmVBbmRSZW1vdmVNYXRjaGVyQmluZGluZygpO1xyXG4gICAgICAgIHRoaXMuaXRlbXNDaGFuZ2VkKCk7XHJcbiAgICB9O1xyXG4gICAgUmVwZWF0LnByb3RvdHlwZS51bmJpbmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5zY29wZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5pdGVtcyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5tYXRjaGVyQmluZGluZyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy52aWV3U2xvdC5yZW1vdmVBbGwodHJ1ZSwgdHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5fdW5zdWJzY3JpYmVDb2xsZWN0aW9uKCk7XHJcbiAgICB9O1xyXG4gICAgUmVwZWF0LnByb3RvdHlwZS5fdW5zdWJzY3JpYmVDb2xsZWN0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmNvbGxlY3Rpb25PYnNlcnZlcikge1xyXG4gICAgICAgICAgICB0aGlzLmNvbGxlY3Rpb25PYnNlcnZlci51bnN1YnNjcmliZSh0aGlzLmNhbGxDb250ZXh0LCB0aGlzKTtcclxuICAgICAgICAgICAgdGhpcy5jb2xsZWN0aW9uT2JzZXJ2ZXIgPSBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLmNhbGxDb250ZXh0ID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgUmVwZWF0LnByb3RvdHlwZS5pdGVtc0NoYW5nZWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB0aGlzLl91bnN1YnNjcmliZUNvbGxlY3Rpb24oKTtcclxuICAgICAgICBpZiAoIXRoaXMuc2NvcGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgaXRlbXMgPSB0aGlzLml0ZW1zO1xyXG4gICAgICAgIHRoaXMuc3RyYXRlZ3kgPSB0aGlzLnN0cmF0ZWd5TG9jYXRvci5nZXRTdHJhdGVneShpdGVtcyk7XHJcbiAgICAgICAgaWYgKCF0aGlzLnN0cmF0ZWd5KSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlZhbHVlIGZvciAnXCIgKyB0aGlzLnNvdXJjZUV4cHJlc3Npb24gKyBcIicgaXMgbm9uLXJlcGVhdGFibGVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5pc09uZVRpbWUgJiYgIXRoaXMuX29ic2VydmVJbm5lckNvbGxlY3Rpb24oKSkge1xyXG4gICAgICAgICAgICB0aGlzLl9vYnNlcnZlQ29sbGVjdGlvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlnbm9yZU11dGF0aW9uID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnN0cmF0ZWd5Lmluc3RhbmNlQ2hhbmdlZCh0aGlzLCBpdGVtcyk7XHJcbiAgICAgICAgdGhpcy5vYnNlcnZlckxvY2F0b3IudGFza1F1ZXVlLnF1ZXVlTWljcm9UYXNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgX3RoaXMuaWdub3JlTXV0YXRpb24gPSBmYWxzZTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBSZXBlYXQucHJvdG90eXBlLl9nZXRJbm5lckNvbGxlY3Rpb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGV4cHJlc3Npb24gPSB1bndyYXBFeHByZXNzaW9uKHRoaXMuc291cmNlRXhwcmVzc2lvbik7XHJcbiAgICAgICAgaWYgKCFleHByZXNzaW9uKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZXhwcmVzc2lvbi5ldmFsdWF0ZSh0aGlzLnNjb3BlLCBudWxsKTtcclxuICAgIH07XHJcbiAgICBSZXBlYXQucHJvdG90eXBlLmhhbmRsZUNvbGxlY3Rpb25NdXRhdGVkID0gZnVuY3Rpb24gKGNvbGxlY3Rpb24sIGNoYW5nZXMpIHtcclxuICAgICAgICBpZiAoIXRoaXMuY29sbGVjdGlvbk9ic2VydmVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuaWdub3JlTXV0YXRpb24pIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnN0cmF0ZWd5Lmluc3RhbmNlTXV0YXRlZCh0aGlzLCBjb2xsZWN0aW9uLCBjaGFuZ2VzKTtcclxuICAgIH07XHJcbiAgICBSZXBlYXQucHJvdG90eXBlLmhhbmRsZUlubmVyQ29sbGVjdGlvbk11dGF0ZWQgPSBmdW5jdGlvbiAoY29sbGVjdGlvbiwgY2hhbmdlcykge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKCF0aGlzLmNvbGxlY3Rpb25PYnNlcnZlcikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmlnbm9yZU11dGF0aW9uKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5pZ25vcmVNdXRhdGlvbiA9IHRydWU7XHJcbiAgICAgICAgdmFyIG5ld0l0ZW1zID0gdGhpcy5zb3VyY2VFeHByZXNzaW9uLmV2YWx1YXRlKHRoaXMuc2NvcGUsIHRoaXMubG9va3VwRnVuY3Rpb25zKTtcclxuICAgICAgICB0aGlzLm9ic2VydmVyTG9jYXRvci50YXNrUXVldWUucXVldWVNaWNyb1Rhc2soZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuaWdub3JlTXV0YXRpb24gPSBmYWxzZTsgfSk7XHJcbiAgICAgICAgaWYgKG5ld0l0ZW1zID09PSB0aGlzLml0ZW1zKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXRlbXNDaGFuZ2VkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLml0ZW1zID0gbmV3SXRlbXM7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFJlcGVhdC5wcm90b3R5cGUuX29ic2VydmVJbm5lckNvbGxlY3Rpb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGl0ZW1zID0gdGhpcy5fZ2V0SW5uZXJDb2xsZWN0aW9uKCk7XHJcbiAgICAgICAgdmFyIHN0cmF0ZWd5ID0gdGhpcy5zdHJhdGVneUxvY2F0b3IuZ2V0U3RyYXRlZ3koaXRlbXMpO1xyXG4gICAgICAgIGlmICghc3RyYXRlZ3kpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNvbGxlY3Rpb25PYnNlcnZlciA9IHN0cmF0ZWd5LmdldENvbGxlY3Rpb25PYnNlcnZlcih0aGlzLm9ic2VydmVyTG9jYXRvciwgaXRlbXMpO1xyXG4gICAgICAgIGlmICghdGhpcy5jb2xsZWN0aW9uT2JzZXJ2ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNhbGxDb250ZXh0ID0gJ2hhbmRsZUlubmVyQ29sbGVjdGlvbk11dGF0ZWQnO1xyXG4gICAgICAgIHRoaXMuY29sbGVjdGlvbk9ic2VydmVyLnN1YnNjcmliZSh0aGlzLmNhbGxDb250ZXh0LCB0aGlzKTtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH07XHJcbiAgICBSZXBlYXQucHJvdG90eXBlLl9vYnNlcnZlQ29sbGVjdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaXRlbXMgPSB0aGlzLml0ZW1zO1xyXG4gICAgICAgIHRoaXMuY29sbGVjdGlvbk9ic2VydmVyID0gdGhpcy5zdHJhdGVneS5nZXRDb2xsZWN0aW9uT2JzZXJ2ZXIodGhpcy5vYnNlcnZlckxvY2F0b3IsIGl0ZW1zKTtcclxuICAgICAgICBpZiAodGhpcy5jb2xsZWN0aW9uT2JzZXJ2ZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5jYWxsQ29udGV4dCA9ICdoYW5kbGVDb2xsZWN0aW9uTXV0YXRlZCc7XHJcbiAgICAgICAgICAgIHRoaXMuY29sbGVjdGlvbk9ic2VydmVyLnN1YnNjcmliZSh0aGlzLmNhbGxDb250ZXh0LCB0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgUmVwZWF0LnByb3RvdHlwZS5fY2FwdHVyZUFuZFJlbW92ZU1hdGNoZXJCaW5kaW5nID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICh0aGlzLnZpZXdGYWN0b3J5LnZpZXdGYWN0b3J5KSB7XHJcbiAgICAgICAgICAgIHZhciBpbnN0cnVjdGlvbnMgPSB0aGlzLnZpZXdGYWN0b3J5LnZpZXdGYWN0b3J5Lmluc3RydWN0aW9ucztcclxuICAgICAgICAgICAgdmFyIGluc3RydWN0aW9uSWRzID0gT2JqZWN0LmtleXMoaW5zdHJ1Y3Rpb25zKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbnN0cnVjdGlvbklkcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGV4cHJlc3Npb25zID0gaW5zdHJ1Y3Rpb25zW2luc3RydWN0aW9uSWRzW2ldXS5leHByZXNzaW9ucztcclxuICAgICAgICAgICAgICAgIGlmIChleHByZXNzaW9ucykge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGlpID0gMDsgaWkgPCBleHByZXNzaW9ucy5sZW5ndGg7IGlpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV4cHJlc3Npb25zW2lpXS50YXJnZXRQcm9wZXJ0eSA9PT0gJ21hdGNoZXInKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWF0Y2hlckJpbmRpbmcgPSBleHByZXNzaW9uc1tpaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9ucy5zcGxpY2UoaWksIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoZXJCaW5kaW5nO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICB9O1xyXG4gICAgUmVwZWF0LnByb3RvdHlwZS52aWV3Q291bnQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLnZpZXdTbG90LmNoaWxkcmVuLmxlbmd0aDsgfTtcclxuICAgIFJlcGVhdC5wcm90b3R5cGUudmlld3MgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLnZpZXdTbG90LmNoaWxkcmVuOyB9O1xyXG4gICAgUmVwZWF0LnByb3RvdHlwZS52aWV3ID0gZnVuY3Rpb24gKGluZGV4KSB7IHJldHVybiB0aGlzLnZpZXdTbG90LmNoaWxkcmVuW2luZGV4XTsgfTtcclxuICAgIFJlcGVhdC5wcm90b3R5cGUubWF0Y2hlciA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMubWF0Y2hlckJpbmRpbmcgPyB0aGlzLm1hdGNoZXJCaW5kaW5nLnNvdXJjZUV4cHJlc3Npb24uZXZhbHVhdGUodGhpcy5zY29wZSwgdGhpcy5tYXRjaGVyQmluZGluZy5sb29rdXBGdW5jdGlvbnMpIDogbnVsbDsgfTtcclxuICAgIFJlcGVhdC5wcm90b3R5cGUuYWRkVmlldyA9IGZ1bmN0aW9uIChiaW5kaW5nQ29udGV4dCwgb3ZlcnJpZGVDb250ZXh0KSB7XHJcbiAgICAgICAgdmFyIHZpZXcgPSB0aGlzLnZpZXdGYWN0b3J5LmNyZWF0ZSgpO1xyXG4gICAgICAgIHZpZXcuYmluZChiaW5kaW5nQ29udGV4dCwgb3ZlcnJpZGVDb250ZXh0KTtcclxuICAgICAgICB0aGlzLnZpZXdTbG90LmFkZCh2aWV3KTtcclxuICAgIH07XHJcbiAgICBSZXBlYXQucHJvdG90eXBlLmluc2VydFZpZXcgPSBmdW5jdGlvbiAoaW5kZXgsIGJpbmRpbmdDb250ZXh0LCBvdmVycmlkZUNvbnRleHQpIHtcclxuICAgICAgICB2YXIgdmlldyA9IHRoaXMudmlld0ZhY3RvcnkuY3JlYXRlKCk7XHJcbiAgICAgICAgdmlldy5iaW5kKGJpbmRpbmdDb250ZXh0LCBvdmVycmlkZUNvbnRleHQpO1xyXG4gICAgICAgIHRoaXMudmlld1Nsb3QuaW5zZXJ0KGluZGV4LCB2aWV3KTtcclxuICAgIH07XHJcbiAgICBSZXBlYXQucHJvdG90eXBlLm1vdmVWaWV3ID0gZnVuY3Rpb24gKHNvdXJjZUluZGV4LCB0YXJnZXRJbmRleCkge1xyXG4gICAgICAgIHRoaXMudmlld1Nsb3QubW92ZShzb3VyY2VJbmRleCwgdGFyZ2V0SW5kZXgpO1xyXG4gICAgfTtcclxuICAgIFJlcGVhdC5wcm90b3R5cGUucmVtb3ZlQWxsVmlld3MgPSBmdW5jdGlvbiAocmV0dXJuVG9DYWNoZSwgc2tpcEFuaW1hdGlvbikge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZpZXdTbG90LnJlbW92ZUFsbChyZXR1cm5Ub0NhY2hlLCBza2lwQW5pbWF0aW9uKTtcclxuICAgIH07XHJcbiAgICBSZXBlYXQucHJvdG90eXBlLnJlbW92ZVZpZXdzID0gZnVuY3Rpb24gKHZpZXdzVG9SZW1vdmUsIHJldHVyblRvQ2FjaGUsIHNraXBBbmltYXRpb24pIHtcclxuICAgICAgICByZXR1cm4gdGhpcy52aWV3U2xvdC5yZW1vdmVNYW55KHZpZXdzVG9SZW1vdmUsIHJldHVyblRvQ2FjaGUsIHNraXBBbmltYXRpb24pO1xyXG4gICAgfTtcclxuICAgIFJlcGVhdC5wcm90b3R5cGUucmVtb3ZlVmlldyA9IGZ1bmN0aW9uIChpbmRleCwgcmV0dXJuVG9DYWNoZSwgc2tpcEFuaW1hdGlvbikge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZpZXdTbG90LnJlbW92ZUF0KGluZGV4LCByZXR1cm5Ub0NhY2hlLCBza2lwQW5pbWF0aW9uKTtcclxuICAgIH07XHJcbiAgICBSZXBlYXQucHJvdG90eXBlLnVwZGF0ZUJpbmRpbmdzID0gZnVuY3Rpb24gKHZpZXcpIHtcclxuICAgICAgICB2YXIgJHZpZXcgPSB2aWV3O1xyXG4gICAgICAgIHZhciBqID0gJHZpZXcuYmluZGluZ3MubGVuZ3RoO1xyXG4gICAgICAgIHdoaWxlIChqLS0pIHtcclxuICAgICAgICAgICAgdXBkYXRlT25lVGltZUJpbmRpbmcoJHZpZXcuYmluZGluZ3Nbal0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBqID0gJHZpZXcuY29udHJvbGxlcnMubGVuZ3RoO1xyXG4gICAgICAgIHdoaWxlIChqLS0pIHtcclxuICAgICAgICAgICAgdmFyIGsgPSAkdmlldy5jb250cm9sbGVyc1tqXS5ib3VuZFByb3BlcnRpZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICB3aGlsZSAoay0tKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYmluZGluZyA9ICR2aWV3LmNvbnRyb2xsZXJzW2pdLmJvdW5kUHJvcGVydGllc1trXS5iaW5kaW5nO1xyXG4gICAgICAgICAgICAgICAgdXBkYXRlT25lVGltZUJpbmRpbmcoYmluZGluZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgX19kZWNvcmF0ZShbXHJcbiAgICAgICAgYmluZGFibGVcclxuICAgIF0sIFJlcGVhdC5wcm90b3R5cGUsIFwiaXRlbXNcIiwgdm9pZCAwKTtcclxuICAgIF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGJpbmRhYmxlXHJcbiAgICBdLCBSZXBlYXQucHJvdG90eXBlLCBcImxvY2FsXCIsIHZvaWQgMCk7XHJcbiAgICBfX2RlY29yYXRlKFtcclxuICAgICAgICBiaW5kYWJsZVxyXG4gICAgXSwgUmVwZWF0LnByb3RvdHlwZSwgXCJrZXlcIiwgdm9pZCAwKTtcclxuICAgIF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGJpbmRhYmxlXHJcbiAgICBdLCBSZXBlYXQucHJvdG90eXBlLCBcInZhbHVlXCIsIHZvaWQgMCk7XHJcbiAgICBSZXBlYXQgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICBjdXN0b21BdHRyaWJ1dGUoJ3JlcGVhdCcpLFxyXG4gICAgICAgIHRlbXBsYXRlQ29udHJvbGxlcixcclxuICAgICAgICBpbmplY3QoQm91bmRWaWV3RmFjdG9yeSwgVGFyZ2V0SW5zdHJ1Y3Rpb24sIFZpZXdTbG90LCBWaWV3UmVzb3VyY2VzLCBPYnNlcnZlckxvY2F0b3IsIFJlcGVhdFN0cmF0ZWd5TG9jYXRvcilcclxuICAgIF0sIFJlcGVhdCk7XHJcbiAgICByZXR1cm4gUmVwZWF0O1xyXG59KEFic3RyYWN0UmVwZWF0ZXIpKTtcblxudmFyIGF1cmVsaWFIaWRlQ2xhc3NOYW1lID0gJ2F1cmVsaWEtaGlkZSc7XHJcbnZhciBhdXJlbGlhSGlkZUNsYXNzID0gXCIuXCIgKyBhdXJlbGlhSGlkZUNsYXNzTmFtZSArIFwiIHsgZGlzcGxheTpub25lICFpbXBvcnRhbnQ7IH1cIjtcclxuZnVuY3Rpb24gaW5qZWN0QXVyZWxpYUhpZGVTdHlsZUF0SGVhZCgpIHtcclxuICAgIERPTS5pbmplY3RTdHlsZXMoYXVyZWxpYUhpZGVDbGFzcyk7XHJcbn1cclxuZnVuY3Rpb24gaW5qZWN0QXVyZWxpYUhpZGVTdHlsZUF0Qm91bmRhcnkoZG9tQm91bmRhcnkpIHtcclxuICAgIGlmIChGRUFUVVJFLnNoYWRvd0RPTSAmJiBkb21Cb3VuZGFyeSAmJiAhZG9tQm91bmRhcnkuaGFzQXVyZWxpYUhpZGVTdHlsZSkge1xyXG4gICAgICAgIGRvbUJvdW5kYXJ5Lmhhc0F1cmVsaWFIaWRlU3R5bGUgPSB0cnVlO1xyXG4gICAgICAgIERPTS5pbmplY3RTdHlsZXMoYXVyZWxpYUhpZGVDbGFzcywgZG9tQm91bmRhcnkpO1xyXG4gICAgfVxyXG59XG5cbnZhciBTaG93ID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIFNob3coZWxlbWVudCwgYW5pbWF0b3IsIGRvbUJvdW5kYXJ5KSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcclxuICAgICAgICB0aGlzLmFuaW1hdG9yID0gYW5pbWF0b3I7XHJcbiAgICAgICAgdGhpcy5kb21Cb3VuZGFyeSA9IGRvbUJvdW5kYXJ5O1xyXG4gICAgfVxyXG4gICAgU2hvdy5pbmplY3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIFtET00uRWxlbWVudCwgQW5pbWF0b3IsIE9wdGlvbmFsLm9mKERPTS5ib3VuZGFyeSwgdHJ1ZSldO1xyXG4gICAgfTtcclxuICAgIFNob3cucHJvdG90eXBlLmNyZWF0ZWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaW5qZWN0QXVyZWxpYUhpZGVTdHlsZUF0Qm91bmRhcnkodGhpcy5kb21Cb3VuZGFyeSk7XHJcbiAgICB9O1xyXG4gICAgU2hvdy5wcm90b3R5cGUudmFsdWVDaGFuZ2VkID0gZnVuY3Rpb24gKG5ld1ZhbHVlKSB7XHJcbiAgICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7XHJcbiAgICAgICAgdmFyIGFuaW1hdG9yID0gdGhpcy5hbmltYXRvcjtcclxuICAgICAgICBpZiAobmV3VmFsdWUpIHtcclxuICAgICAgICAgICAgYW5pbWF0b3IucmVtb3ZlQ2xhc3MoZWxlbWVudCwgYXVyZWxpYUhpZGVDbGFzc05hbWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgYW5pbWF0b3IuYWRkQ2xhc3MoZWxlbWVudCwgYXVyZWxpYUhpZGVDbGFzc05hbWUpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBTaG93LnByb3RvdHlwZS5iaW5kID0gZnVuY3Rpb24gKGJpbmRpbmdDb250ZXh0KSB7XHJcbiAgICAgICAgdGhpcy52YWx1ZUNoYW5nZWQodGhpcy52YWx1ZSk7XHJcbiAgICB9O1xyXG4gICAgU2hvdyA9IF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGN1c3RvbUF0dHJpYnV0ZSgnc2hvdycpXHJcbiAgICBdLCBTaG93KTtcclxuICAgIHJldHVybiBTaG93O1xyXG59KCkpO1xuXG52YXIgSGlkZSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBIaWRlKGVsZW1lbnQsIGFuaW1hdG9yLCBkb21Cb3VuZGFyeSkge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5hbmltYXRvciA9IGFuaW1hdG9yO1xyXG4gICAgICAgIHRoaXMuZG9tQm91bmRhcnkgPSBkb21Cb3VuZGFyeTtcclxuICAgIH1cclxuICAgIEhpZGUuaW5qZWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBbRE9NLkVsZW1lbnQsIEFuaW1hdG9yLCBPcHRpb25hbC5vZihET00uYm91bmRhcnksIHRydWUpXTtcclxuICAgIH07XHJcbiAgICBIaWRlLnByb3RvdHlwZS5jcmVhdGVkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGluamVjdEF1cmVsaWFIaWRlU3R5bGVBdEJvdW5kYXJ5KHRoaXMuZG9tQm91bmRhcnkpO1xyXG4gICAgfTtcclxuICAgIEhpZGUucHJvdG90eXBlLnZhbHVlQ2hhbmdlZCA9IGZ1bmN0aW9uIChuZXdWYWx1ZSkge1xyXG4gICAgICAgIGlmIChuZXdWYWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLmFuaW1hdG9yLmFkZENsYXNzKHRoaXMuZWxlbWVudCwgYXVyZWxpYUhpZGVDbGFzc05hbWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5hbmltYXRvci5yZW1vdmVDbGFzcyh0aGlzLmVsZW1lbnQsIGF1cmVsaWFIaWRlQ2xhc3NOYW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgSGlkZS5wcm90b3R5cGUuYmluZCA9IGZ1bmN0aW9uIChiaW5kaW5nQ29udGV4dCkge1xyXG4gICAgICAgIHRoaXMudmFsdWVDaGFuZ2VkKHRoaXMudmFsdWUpO1xyXG4gICAgfTtcclxuICAgIEhpZGUucHJvdG90eXBlLnZhbHVlID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNZXRob2Qgbm90IGltcGxlbWVudGVkLicpO1xyXG4gICAgfTtcclxuICAgIEhpZGUgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICBjdXN0b21BdHRyaWJ1dGUoJ2hpZGUnKVxyXG4gICAgXSwgSGlkZSk7XHJcbiAgICByZXR1cm4gSGlkZTtcclxufSgpKTtcblxudmFyIFNDUklQVF9SRUdFWCA9IC88c2NyaXB0XFxiW148XSooPzooPyE8XFwvc2NyaXB0Pik8W148XSopKjxcXC9zY3JpcHQ+L2dpO1xyXG52YXIgbmVlZHNUb1dhcm4gPSB0cnVlO1xyXG52YXIgSFRNTFNhbml0aXplciA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBIVE1MU2FuaXRpemVyKCkge1xyXG4gICAgfVxyXG4gICAgSFRNTFNhbml0aXplci5wcm90b3R5cGUuc2FuaXRpemUgPSBmdW5jdGlvbiAoaW5wdXQpIHtcclxuICAgICAgICBpZiAobmVlZHNUb1dhcm4pIHtcclxuICAgICAgICAgICAgbmVlZHNUb1dhcm4gPSBmYWxzZTtcclxuICAgICAgICAgICAgZ2V0TG9nZ2VyKCdodG1sLXNhbml0aXplcicpXHJcbiAgICAgICAgICAgICAgICAud2FybihcIkNBVVRJT046IFRoZSBkZWZhdWx0IEhUTUxTYW5pdGl6ZXIgZG9lcyBOT1QgcHJvdmlkZSBzZWN1cml0eSBhZ2FpbnN0IGEgd2lkZSB2YXJpZXR5IG9mIHNvcGhpc3RpY2F0ZWQgWFNTIGF0dGFja3MsXFxuYW5kIHNob3VsZCBub3QgYmUgcmVsaWVkIG9uIGZvciBzYW5pdGl6aW5nIGlucHV0IGZyb20gdW5rbm93biBzb3VyY2VzLlxcblBsZWFzZSBzZWUgaHR0cHM6Ly9hdXJlbGlhLmlvL2RvY3MvYmluZGluZy9iYXNpY3MjZWxlbWVudC1jb250ZW50IGZvciBpbnN0cnVjdGlvbnMgb24gaG93IHRvIHVzZSBhIHNlY3VyZSBzb2x1dGlvbiBsaWtlIERPTVB1cmlmeSBvciBzYW5pdGl6ZS1odG1sLlwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGlucHV0LnJlcGxhY2UoU0NSSVBUX1JFR0VYLCAnJyk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIEhUTUxTYW5pdGl6ZXI7XHJcbn0oKSk7XG5cbnZhciBTYW5pdGl6ZUhUTUxWYWx1ZUNvbnZlcnRlciA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBTYW5pdGl6ZUhUTUxWYWx1ZUNvbnZlcnRlcihzYW5pdGl6ZXIpIHtcclxuICAgICAgICB0aGlzLnNhbml0aXplciA9IHNhbml0aXplcjtcclxuICAgIH1cclxuICAgIFNhbml0aXplSFRNTFZhbHVlQ29udmVydGVyLnByb3RvdHlwZS50b1ZpZXcgPSBmdW5jdGlvbiAodW50cnVzdGVkTWFya3VwKSB7XHJcbiAgICAgICAgaWYgKHVudHJ1c3RlZE1hcmt1cCA9PT0gbnVsbCB8fCB1bnRydXN0ZWRNYXJrdXAgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2FuaXRpemVyLnNhbml0aXplKHVudHJ1c3RlZE1hcmt1cCk7XHJcbiAgICB9O1xyXG4gICAgU2FuaXRpemVIVE1MVmFsdWVDb252ZXJ0ZXIgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICB2YWx1ZUNvbnZlcnRlcignc2FuaXRpemVIVE1MJyksXHJcbiAgICAgICAgaW5qZWN0KEhUTUxTYW5pdGl6ZXIpXHJcbiAgICBdLCBTYW5pdGl6ZUhUTUxWYWx1ZUNvbnZlcnRlcik7XHJcbiAgICByZXR1cm4gU2FuaXRpemVIVE1MVmFsdWVDb252ZXJ0ZXI7XHJcbn0oKSk7XG5cbnZhciBSZXBsYWNlYWJsZSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBSZXBsYWNlYWJsZSh2aWV3RmFjdG9yeSwgdmlld1Nsb3QpIHtcclxuICAgICAgICB0aGlzLnZpZXdGYWN0b3J5ID0gdmlld0ZhY3Rvcnk7XHJcbiAgICAgICAgdGhpcy52aWV3U2xvdCA9IHZpZXdTbG90O1xyXG4gICAgICAgIHRoaXMudmlldyA9IG51bGw7XHJcbiAgICB9XHJcbiAgICBSZXBsYWNlYWJsZS5wcm90b3R5cGUuYmluZCA9IGZ1bmN0aW9uIChiaW5kaW5nQ29udGV4dCwgb3ZlcnJpZGVDb250ZXh0KSB7XHJcbiAgICAgICAgaWYgKHRoaXMudmlldyA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLnZpZXcgPSB0aGlzLnZpZXdGYWN0b3J5LmNyZWF0ZSgpO1xyXG4gICAgICAgICAgICB0aGlzLnZpZXdTbG90LmFkZCh0aGlzLnZpZXcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnZpZXcuYmluZChiaW5kaW5nQ29udGV4dCwgb3ZlcnJpZGVDb250ZXh0KTtcclxuICAgIH07XHJcbiAgICBSZXBsYWNlYWJsZS5wcm90b3R5cGUudW5iaW5kID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMudmlldy51bmJpbmQoKTtcclxuICAgIH07XHJcbiAgICBSZXBsYWNlYWJsZSA9IF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGN1c3RvbUF0dHJpYnV0ZSgncmVwbGFjZWFibGUnKSxcclxuICAgICAgICB0ZW1wbGF0ZUNvbnRyb2xsZXIsXHJcbiAgICAgICAgaW5qZWN0KEJvdW5kVmlld0ZhY3RvcnksIFZpZXdTbG90KVxyXG4gICAgXSwgUmVwbGFjZWFibGUpO1xyXG4gICAgcmV0dXJuIFJlcGxhY2VhYmxlO1xyXG59KCkpO1xuXG52YXIgRm9jdXMgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gRm9jdXMoZWxlbWVudCwgdGFza1F1ZXVlKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcclxuICAgICAgICB0aGlzLnRhc2tRdWV1ZSA9IHRhc2tRdWV1ZTtcclxuICAgICAgICB0aGlzLmlzQXR0YWNoZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLm5lZWRzQXBwbHkgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIEZvY3VzLmluamVjdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gW0RPTS5FbGVtZW50LCBUYXNrUXVldWVdO1xyXG4gICAgfTtcclxuICAgIEZvY3VzLnByb3RvdHlwZS52YWx1ZUNoYW5nZWQgPSBmdW5jdGlvbiAobmV3VmFsdWUpIHtcclxuICAgICAgICBpZiAodGhpcy5pc0F0dGFjaGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2FwcGx5KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLm5lZWRzQXBwbHkgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBGb2N1cy5wcm90b3R5cGUuX2FwcGx5ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKHRoaXMudmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy50YXNrUXVldWUucXVldWVNaWNyb1Rhc2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKF90aGlzLnZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuZWxlbWVudC5mb2N1cygpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5ibHVyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIEZvY3VzLnByb3RvdHlwZS5hdHRhY2hlZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLmlzQXR0YWNoZWQgPSB0cnVlO1xyXG4gICAgICAgIGlmICh0aGlzLm5lZWRzQXBwbHkpIHtcclxuICAgICAgICAgICAgdGhpcy5uZWVkc0FwcGx5ID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuX2FwcGx5KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIHRoaXMpO1xyXG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgdGhpcyk7XHJcbiAgICB9O1xyXG4gICAgRm9jdXMucHJvdG90eXBlLmRldGFjaGVkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuaXNBdHRhY2hlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1cycsIHRoaXMpO1xyXG4gICAgICAgIHRoaXMuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdibHVyJywgdGhpcyk7XHJcbiAgICB9O1xyXG4gICAgRm9jdXMucHJvdG90eXBlLmhhbmRsZUV2ZW50ID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBpZiAoZS50eXBlID09PSAnZm9jdXMnKSB7XHJcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChET00uYWN0aXZlRWxlbWVudCAhPT0gdGhpcy5lbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgRm9jdXMgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICBjdXN0b21BdHRyaWJ1dGUoJ2ZvY3VzJywgYmluZGluZ01vZGUudHdvV2F5KVxyXG4gICAgXSwgRm9jdXMpO1xyXG4gICAgcmV0dXJuIEZvY3VzO1xyXG59KCkpO1xuXG52YXIgY3NzVXJsTWF0Y2hlciA9IC91cmxcXCgoPyFbJ1wiXWRhdGEpKFteKV0rKVxcKS9naTtcclxuZnVuY3Rpb24gZml4dXBDU1NVcmxzKGFkZHJlc3MsIGNzcykge1xyXG4gICAgaWYgKHR5cGVvZiBjc3MgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIGxvYWRpbmcgcmVxdWlyZWQgQ1NTIGZpbGU6IFwiICsgYWRkcmVzcyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY3NzLnJlcGxhY2UoY3NzVXJsTWF0Y2hlciwgZnVuY3Rpb24gKG1hdGNoLCBwMSkge1xyXG4gICAgICAgIHZhciBxdW90ZSA9IHAxLmNoYXJBdCgwKTtcclxuICAgICAgICBpZiAocXVvdGUgPT09ICdcXCcnIHx8IHF1b3RlID09PSAnXCInKSB7XHJcbiAgICAgICAgICAgIHAxID0gcDEuc3Vic3RyKDEsIHAxLmxlbmd0aCAtIDIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gJ3VybChcXCcnICsgcmVsYXRpdmVUb0ZpbGUocDEsIGFkZHJlc3MpICsgJ1xcJyknO1xyXG4gICAgfSk7XHJcbn1cclxudmFyIENTU1Jlc291cmNlID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIENTU1Jlc291cmNlKGFkZHJlc3MpIHtcclxuICAgICAgICB0aGlzLmFkZHJlc3MgPSBhZGRyZXNzO1xyXG4gICAgICAgIHRoaXMuX3Njb3BlZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fZ2xvYmFsID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5fYWxyZWFkeUdsb2JhbGx5SW5qZWN0ZWQgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIENTU1Jlc291cmNlLnByb3RvdHlwZS5pbml0aWFsaXplID0gZnVuY3Rpb24gKGNvbnRhaW5lciwgVGFyZ2V0KSB7XHJcbiAgICAgICAgdGhpcy5fc2NvcGVkID0gbmV3IFRhcmdldCh0aGlzKTtcclxuICAgIH07XHJcbiAgICBDU1NSZXNvdXJjZS5wcm90b3R5cGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAocmVnaXN0cnksIG5hbWUpIHtcclxuICAgICAgICBpZiAobmFtZSA9PT0gJ3Njb3BlZCcpIHtcclxuICAgICAgICAgICAgcmVnaXN0cnkucmVnaXN0ZXJWaWV3RW5naW5lSG9va3ModGhpcy5fc2NvcGVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2dsb2JhbCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIENTU1Jlc291cmNlLnByb3RvdHlwZS5sb2FkID0gZnVuY3Rpb24gKGNvbnRhaW5lcikge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgcmV0dXJuIGNvbnRhaW5lci5nZXQoTG9hZGVyKVxyXG4gICAgICAgICAgICAubG9hZFRleHQodGhpcy5hZGRyZXNzKVxyXG4gICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGVycikgeyByZXR1cm4gbnVsbDsgfSlcclxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHRleHQpIHtcclxuICAgICAgICAgICAgdGV4dCA9IGZpeHVwQ1NTVXJscyhfdGhpcy5hZGRyZXNzLCB0ZXh0KTtcclxuICAgICAgICAgICAgX3RoaXMuX3Njb3BlZC5jc3MgPSB0ZXh0O1xyXG4gICAgICAgICAgICBpZiAoX3RoaXMuX2dsb2JhbCkge1xyXG4gICAgICAgICAgICAgICAgX3RoaXMuX2FscmVhZHlHbG9iYWxseUluamVjdGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIERPTS5pbmplY3RTdHlsZXModGV4dCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gQ1NTUmVzb3VyY2U7XHJcbn0oKSk7XHJcbnZhciBDU1NWaWV3RW5naW5lSG9va3MgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQ1NTVmlld0VuZ2luZUhvb2tzKG93bmVyKSB7XHJcbiAgICAgICAgdGhpcy5vd25lciA9IG93bmVyO1xyXG4gICAgICAgIHRoaXMuY3NzID0gbnVsbDtcclxuICAgIH1cclxuICAgIENTU1ZpZXdFbmdpbmVIb29rcy5wcm90b3R5cGUuYmVmb3JlQ29tcGlsZSA9IGZ1bmN0aW9uIChjb250ZW50LCByZXNvdXJjZXMsIGluc3RydWN0aW9uKSB7XHJcbiAgICAgICAgaWYgKGluc3RydWN0aW9uLnRhcmdldFNoYWRvd0RPTSkge1xyXG4gICAgICAgICAgICBET00uaW5qZWN0U3R5bGVzKHRoaXMuY3NzLCBjb250ZW50LCB0cnVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoRkVBVFVSRS5zY29wZWRDU1MpIHtcclxuICAgICAgICAgICAgdmFyIHN0eWxlTm9kZSA9IERPTS5pbmplY3RTdHlsZXModGhpcy5jc3MsIGNvbnRlbnQsIHRydWUpO1xyXG4gICAgICAgICAgICBzdHlsZU5vZGUuc2V0QXR0cmlidXRlKCdzY29wZWQnLCAnc2NvcGVkJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuX2dsb2JhbCAmJiAhdGhpcy5vd25lci5fYWxyZWFkeUdsb2JhbGx5SW5qZWN0ZWQpIHtcclxuICAgICAgICAgICAgRE9NLmluamVjdFN0eWxlcyh0aGlzLmNzcyk7XHJcbiAgICAgICAgICAgIHRoaXMub3duZXIuX2FscmVhZHlHbG9iYWxseUluamVjdGVkID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIENTU1ZpZXdFbmdpbmVIb29rcztcclxufSgpKTtcclxuZnVuY3Rpb24gX2NyZWF0ZUNTU1Jlc291cmNlKGFkZHJlc3MpIHtcclxuICAgIHZhciBWaWV3Q1NTID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgICAgICBfX2V4dGVuZHMoVmlld0NTUywgX3N1cGVyKTtcclxuICAgICAgICBmdW5jdGlvbiBWaWV3Q1NTKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFZpZXdDU1MgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICAgICAgcmVzb3VyY2UobmV3IENTU1Jlc291cmNlKGFkZHJlc3MpKVxyXG4gICAgICAgIF0sIFZpZXdDU1MpO1xyXG4gICAgICAgIHJldHVybiBWaWV3Q1NTO1xyXG4gICAgfShDU1NWaWV3RW5naW5lSG9va3MpKTtcclxuICAgIHJldHVybiBWaWV3Q1NTO1xyXG59XG5cbnZhciBBdHRyQmluZGluZ0JlaGF2aW9yID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIEF0dHJCaW5kaW5nQmVoYXZpb3IoKSB7XHJcbiAgICB9XHJcbiAgICBBdHRyQmluZGluZ0JlaGF2aW9yLnByb3RvdHlwZS5iaW5kID0gZnVuY3Rpb24gKGJpbmRpbmcsIHNvdXJjZSkge1xyXG4gICAgICAgIGJpbmRpbmcudGFyZ2V0T2JzZXJ2ZXIgPSBuZXcgRGF0YUF0dHJpYnV0ZU9ic2VydmVyKGJpbmRpbmcudGFyZ2V0LCBiaW5kaW5nLnRhcmdldFByb3BlcnR5KTtcclxuICAgIH07XHJcbiAgICBBdHRyQmluZGluZ0JlaGF2aW9yLnByb3RvdHlwZS51bmJpbmQgPSBmdW5jdGlvbiAoYmluZGluZywgc291cmNlKSB7XHJcbiAgICB9O1xyXG4gICAgQXR0ckJpbmRpbmdCZWhhdmlvciA9IF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGJpbmRpbmdCZWhhdmlvcignYXR0cicpXHJcbiAgICBdLCBBdHRyQmluZGluZ0JlaGF2aW9yKTtcclxuICAgIHJldHVybiBBdHRyQmluZGluZ0JlaGF2aW9yO1xyXG59KCkpO1xuXG52YXIgbW9kZUJpbmRpbmdCZWhhdmlvciA9IHtcclxuICAgIGJpbmQ6IGZ1bmN0aW9uIChiaW5kaW5nLCBzb3VyY2UsIGxvb2t1cEZ1bmN0aW9ucykge1xyXG4gICAgICAgIGJpbmRpbmcub3JpZ2luYWxNb2RlID0gYmluZGluZy5tb2RlO1xyXG4gICAgICAgIGJpbmRpbmcubW9kZSA9IHRoaXMubW9kZTtcclxuICAgIH0sXHJcbiAgICB1bmJpbmQ6IGZ1bmN0aW9uIChiaW5kaW5nLCBzb3VyY2UpIHtcclxuICAgICAgICBiaW5kaW5nLm1vZGUgPSBiaW5kaW5nLm9yaWdpbmFsTW9kZTtcclxuICAgICAgICBiaW5kaW5nLm9yaWdpbmFsTW9kZSA9IG51bGw7XHJcbiAgICB9XHJcbn07XHJcbnZhciBPbmVUaW1lQmluZGluZ0JlaGF2aW9yID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIE9uZVRpbWVCaW5kaW5nQmVoYXZpb3IoKSB7XHJcbiAgICAgICAgdGhpcy5tb2RlID0gYmluZGluZ01vZGUub25lVGltZTtcclxuICAgIH1cclxuICAgIE9uZVRpbWVCaW5kaW5nQmVoYXZpb3IgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICBtaXhpbihtb2RlQmluZGluZ0JlaGF2aW9yKSxcclxuICAgICAgICBiaW5kaW5nQmVoYXZpb3IoJ29uZVRpbWUnKVxyXG4gICAgXSwgT25lVGltZUJpbmRpbmdCZWhhdmlvcik7XHJcbiAgICByZXR1cm4gT25lVGltZUJpbmRpbmdCZWhhdmlvcjtcclxufSgpKTtcclxudmFyIE9uZVdheUJpbmRpbmdCZWhhdmlvciA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBPbmVXYXlCaW5kaW5nQmVoYXZpb3IoKSB7XHJcbiAgICAgICAgdGhpcy5tb2RlID0gYmluZGluZ01vZGUudG9WaWV3O1xyXG4gICAgfVxyXG4gICAgT25lV2F5QmluZGluZ0JlaGF2aW9yID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgbWl4aW4obW9kZUJpbmRpbmdCZWhhdmlvciksXHJcbiAgICAgICAgYmluZGluZ0JlaGF2aW9yKCdvbmVXYXknKVxyXG4gICAgXSwgT25lV2F5QmluZGluZ0JlaGF2aW9yKTtcclxuICAgIHJldHVybiBPbmVXYXlCaW5kaW5nQmVoYXZpb3I7XHJcbn0oKSk7XHJcbnZhciBUb1ZpZXdCaW5kaW5nQmVoYXZpb3IgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gVG9WaWV3QmluZGluZ0JlaGF2aW9yKCkge1xyXG4gICAgICAgIHRoaXMubW9kZSA9IGJpbmRpbmdNb2RlLnRvVmlldztcclxuICAgIH1cclxuICAgIFRvVmlld0JpbmRpbmdCZWhhdmlvciA9IF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIG1peGluKG1vZGVCaW5kaW5nQmVoYXZpb3IpLFxyXG4gICAgICAgIGJpbmRpbmdCZWhhdmlvcigndG9WaWV3JylcclxuICAgIF0sIFRvVmlld0JpbmRpbmdCZWhhdmlvcik7XHJcbiAgICByZXR1cm4gVG9WaWV3QmluZGluZ0JlaGF2aW9yO1xyXG59KCkpO1xyXG52YXIgRnJvbVZpZXdCaW5kaW5nQmVoYXZpb3IgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gRnJvbVZpZXdCaW5kaW5nQmVoYXZpb3IoKSB7XHJcbiAgICAgICAgdGhpcy5tb2RlID0gYmluZGluZ01vZGUuZnJvbVZpZXc7XHJcbiAgICB9XHJcbiAgICBGcm9tVmlld0JpbmRpbmdCZWhhdmlvciA9IF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIG1peGluKG1vZGVCaW5kaW5nQmVoYXZpb3IpLFxyXG4gICAgICAgIGJpbmRpbmdCZWhhdmlvcignZnJvbVZpZXcnKVxyXG4gICAgXSwgRnJvbVZpZXdCaW5kaW5nQmVoYXZpb3IpO1xyXG4gICAgcmV0dXJuIEZyb21WaWV3QmluZGluZ0JlaGF2aW9yO1xyXG59KCkpO1xyXG52YXIgVHdvV2F5QmluZGluZ0JlaGF2aW9yID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIFR3b1dheUJpbmRpbmdCZWhhdmlvcigpIHtcclxuICAgICAgICB0aGlzLm1vZGUgPSBiaW5kaW5nTW9kZS50d29XYXk7XHJcbiAgICB9XHJcbiAgICBUd29XYXlCaW5kaW5nQmVoYXZpb3IgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICBtaXhpbihtb2RlQmluZGluZ0JlaGF2aW9yKSxcclxuICAgICAgICBiaW5kaW5nQmVoYXZpb3IoJ3R3b1dheScpXHJcbiAgICBdLCBUd29XYXlCaW5kaW5nQmVoYXZpb3IpO1xyXG4gICAgcmV0dXJuIFR3b1dheUJpbmRpbmdCZWhhdmlvcjtcclxufSgpKTtcblxuZnVuY3Rpb24gdGhyb3R0bGUobmV3VmFsdWUpIHtcclxuICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICB2YXIgc3RhdGUgPSB0aGlzLnRocm90dGxlU3RhdGU7XHJcbiAgICB2YXIgZWxhcHNlZCA9ICtuZXcgRGF0ZSgpIC0gc3RhdGUubGFzdDtcclxuICAgIGlmIChlbGFwc2VkID49IHN0YXRlLmRlbGF5KSB7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KHN0YXRlLnRpbWVvdXRJZCk7XHJcbiAgICAgICAgc3RhdGUudGltZW91dElkID0gbnVsbDtcclxuICAgICAgICBzdGF0ZS5sYXN0ID0gK25ldyBEYXRlKCk7XHJcbiAgICAgICAgdGhpcy50aHJvdHRsZWRNZXRob2QobmV3VmFsdWUpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHN0YXRlLm5ld1ZhbHVlID0gbmV3VmFsdWU7XHJcbiAgICBpZiAoc3RhdGUudGltZW91dElkID09PSBudWxsKSB7XHJcbiAgICAgICAgc3RhdGUudGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHN0YXRlLnRpbWVvdXRJZCA9IG51bGw7XHJcbiAgICAgICAgICAgIHN0YXRlLmxhc3QgPSArbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgX3RoaXMudGhyb3R0bGVkTWV0aG9kKHN0YXRlLm5ld1ZhbHVlKTtcclxuICAgICAgICB9LCBzdGF0ZS5kZWxheSAtIGVsYXBzZWQpO1xyXG4gICAgfVxyXG59XHJcbnZhciBUaHJvdHRsZUJpbmRpbmdCZWhhdmlvciA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBUaHJvdHRsZUJpbmRpbmdCZWhhdmlvcigpIHtcclxuICAgIH1cclxuICAgIFRocm90dGxlQmluZGluZ0JlaGF2aW9yLnByb3RvdHlwZS5iaW5kID0gZnVuY3Rpb24gKGJpbmRpbmcsIHNvdXJjZSwgZGVsYXkpIHtcclxuICAgICAgICBpZiAoZGVsYXkgPT09IHZvaWQgMCkgeyBkZWxheSA9IDIwMDsgfVxyXG4gICAgICAgIHZhciBtZXRob2RUb1Rocm90dGxlID0gJ3VwZGF0ZVRhcmdldCc7XHJcbiAgICAgICAgaWYgKGJpbmRpbmcuY2FsbFNvdXJjZSkge1xyXG4gICAgICAgICAgICBtZXRob2RUb1Rocm90dGxlID0gJ2NhbGxTb3VyY2UnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChiaW5kaW5nLnVwZGF0ZVNvdXJjZSAmJiBiaW5kaW5nLm1vZGUgPT09IGJpbmRpbmdNb2RlLnR3b1dheSkge1xyXG4gICAgICAgICAgICBtZXRob2RUb1Rocm90dGxlID0gJ3VwZGF0ZVNvdXJjZSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGJpbmRpbmcudGhyb3R0bGVkTWV0aG9kID0gYmluZGluZ1ttZXRob2RUb1Rocm90dGxlXTtcclxuICAgICAgICBiaW5kaW5nLnRocm90dGxlZE1ldGhvZC5vcmlnaW5hbE5hbWUgPSBtZXRob2RUb1Rocm90dGxlO1xyXG4gICAgICAgIGJpbmRpbmdbbWV0aG9kVG9UaHJvdHRsZV0gPSB0aHJvdHRsZTtcclxuICAgICAgICBiaW5kaW5nLnRocm90dGxlU3RhdGUgPSB7XHJcbiAgICAgICAgICAgIGRlbGF5OiBkZWxheSxcclxuICAgICAgICAgICAgbGFzdDogMCxcclxuICAgICAgICAgICAgdGltZW91dElkOiBudWxsXHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcbiAgICBUaHJvdHRsZUJpbmRpbmdCZWhhdmlvci5wcm90b3R5cGUudW5iaW5kID0gZnVuY3Rpb24gKGJpbmRpbmcsIHNvdXJjZSkge1xyXG4gICAgICAgIHZhciBtZXRob2RUb1Jlc3RvcmUgPSBiaW5kaW5nLnRocm90dGxlZE1ldGhvZC5vcmlnaW5hbE5hbWU7XHJcbiAgICAgICAgYmluZGluZ1ttZXRob2RUb1Jlc3RvcmVdID0gYmluZGluZy50aHJvdHRsZWRNZXRob2Q7XHJcbiAgICAgICAgYmluZGluZy50aHJvdHRsZWRNZXRob2QgPSBudWxsO1xyXG4gICAgICAgIGNsZWFyVGltZW91dChiaW5kaW5nLnRocm90dGxlU3RhdGUudGltZW91dElkKTtcclxuICAgICAgICBiaW5kaW5nLnRocm90dGxlU3RhdGUgPSBudWxsO1xyXG4gICAgfTtcclxuICAgIFRocm90dGxlQmluZGluZ0JlaGF2aW9yID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgYmluZGluZ0JlaGF2aW9yKCd0aHJvdHRsZScpXHJcbiAgICBdLCBUaHJvdHRsZUJpbmRpbmdCZWhhdmlvcik7XHJcbiAgICByZXR1cm4gVGhyb3R0bGVCaW5kaW5nQmVoYXZpb3I7XHJcbn0oKSk7XG5cbnZhciB1bnNldCA9IHt9O1xyXG5mdW5jdGlvbiBkZWJvdW5jZUNhbGxTb3VyY2UoZXZlbnQpIHtcclxuICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICB2YXIgc3RhdGUgPSB0aGlzLmRlYm91bmNlU3RhdGU7XHJcbiAgICBjbGVhclRpbWVvdXQoc3RhdGUudGltZW91dElkKTtcclxuICAgIHN0YXRlLnRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuZGVib3VuY2VkTWV0aG9kKGV2ZW50KTsgfSwgc3RhdGUuZGVsYXkpO1xyXG59XHJcbmZ1bmN0aW9uIGRlYm91bmNlQ2FsbChjb250ZXh0LCBuZXdWYWx1ZSwgb2xkVmFsdWUpIHtcclxuICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICB2YXIgc3RhdGUgPSB0aGlzLmRlYm91bmNlU3RhdGU7XHJcbiAgICBjbGVhclRpbWVvdXQoc3RhdGUudGltZW91dElkKTtcclxuICAgIGlmIChjb250ZXh0ICE9PSBzdGF0ZS5jYWxsQ29udGV4dFRvRGVib3VuY2UpIHtcclxuICAgICAgICBzdGF0ZS5vbGRWYWx1ZSA9IHVuc2V0O1xyXG4gICAgICAgIHRoaXMuZGVib3VuY2VkTWV0aG9kKGNvbnRleHQsIG5ld1ZhbHVlLCBvbGRWYWx1ZSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKHN0YXRlLm9sZFZhbHVlID09PSB1bnNldCkge1xyXG4gICAgICAgIHN0YXRlLm9sZFZhbHVlID0gb2xkVmFsdWU7XHJcbiAgICB9XHJcbiAgICBzdGF0ZS50aW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgX29sZFZhbHVlID0gc3RhdGUub2xkVmFsdWU7XHJcbiAgICAgICAgc3RhdGUub2xkVmFsdWUgPSB1bnNldDtcclxuICAgICAgICBfdGhpcy5kZWJvdW5jZWRNZXRob2QoY29udGV4dCwgbmV3VmFsdWUsIF9vbGRWYWx1ZSk7XHJcbiAgICB9LCBzdGF0ZS5kZWxheSk7XHJcbn1cclxudmFyIERlYm91bmNlQmluZGluZ0JlaGF2aW9yID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIERlYm91bmNlQmluZGluZ0JlaGF2aW9yKCkge1xyXG4gICAgfVxyXG4gICAgRGVib3VuY2VCaW5kaW5nQmVoYXZpb3IucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbiAoYmluZGluZywgc291cmNlLCBkZWxheSkge1xyXG4gICAgICAgIGlmIChkZWxheSA9PT0gdm9pZCAwKSB7IGRlbGF5ID0gMjAwOyB9XHJcbiAgICAgICAgdmFyIGlzQ2FsbFNvdXJjZSA9IGJpbmRpbmcuY2FsbFNvdXJjZSAhPT0gdW5kZWZpbmVkO1xyXG4gICAgICAgIHZhciBtZXRob2RUb0RlYm91bmNlID0gaXNDYWxsU291cmNlID8gJ2NhbGxTb3VyY2UnIDogJ2NhbGwnO1xyXG4gICAgICAgIHZhciBkZWJvdW5jZXIgPSBpc0NhbGxTb3VyY2UgPyBkZWJvdW5jZUNhbGxTb3VyY2UgOiBkZWJvdW5jZUNhbGw7XHJcbiAgICAgICAgdmFyIG1vZGUgPSBiaW5kaW5nLm1vZGU7XHJcbiAgICAgICAgdmFyIGNhbGxDb250ZXh0VG9EZWJvdW5jZSA9IG1vZGUgPT09IGJpbmRpbmdNb2RlLnR3b1dheSB8fCBtb2RlID09PSBiaW5kaW5nTW9kZS5mcm9tVmlldyA/IHRhcmdldENvbnRleHQgOiBzb3VyY2VDb250ZXh0O1xyXG4gICAgICAgIGJpbmRpbmcuZGVib3VuY2VkTWV0aG9kID0gYmluZGluZ1ttZXRob2RUb0RlYm91bmNlXTtcclxuICAgICAgICBiaW5kaW5nLmRlYm91bmNlZE1ldGhvZC5vcmlnaW5hbE5hbWUgPSBtZXRob2RUb0RlYm91bmNlO1xyXG4gICAgICAgIGJpbmRpbmdbbWV0aG9kVG9EZWJvdW5jZV0gPSBkZWJvdW5jZXI7XHJcbiAgICAgICAgYmluZGluZy5kZWJvdW5jZVN0YXRlID0ge1xyXG4gICAgICAgICAgICBjYWxsQ29udGV4dFRvRGVib3VuY2U6IGNhbGxDb250ZXh0VG9EZWJvdW5jZSxcclxuICAgICAgICAgICAgZGVsYXk6IGRlbGF5LFxyXG4gICAgICAgICAgICB0aW1lb3V0SWQ6IDAsXHJcbiAgICAgICAgICAgIG9sZFZhbHVlOiB1bnNldFxyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG4gICAgRGVib3VuY2VCaW5kaW5nQmVoYXZpb3IucHJvdG90eXBlLnVuYmluZCA9IGZ1bmN0aW9uIChiaW5kaW5nLCBzb3VyY2UpIHtcclxuICAgICAgICB2YXIgbWV0aG9kVG9SZXN0b3JlID0gYmluZGluZy5kZWJvdW5jZWRNZXRob2Qub3JpZ2luYWxOYW1lO1xyXG4gICAgICAgIGJpbmRpbmdbbWV0aG9kVG9SZXN0b3JlXSA9IGJpbmRpbmcuZGVib3VuY2VkTWV0aG9kO1xyXG4gICAgICAgIGJpbmRpbmcuZGVib3VuY2VkTWV0aG9kID0gbnVsbDtcclxuICAgICAgICBjbGVhclRpbWVvdXQoYmluZGluZy5kZWJvdW5jZVN0YXRlLnRpbWVvdXRJZCk7XHJcbiAgICAgICAgYmluZGluZy5kZWJvdW5jZVN0YXRlID0gbnVsbDtcclxuICAgIH07XHJcbiAgICBEZWJvdW5jZUJpbmRpbmdCZWhhdmlvciA9IF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGJpbmRpbmdCZWhhdmlvcignZGVib3VuY2UnKVxyXG4gICAgXSwgRGVib3VuY2VCaW5kaW5nQmVoYXZpb3IpO1xyXG4gICAgcmV0dXJuIERlYm91bmNlQmluZGluZ0JlaGF2aW9yO1xyXG59KCkpO1xuXG5mdW5jdGlvbiBmaW5kT3JpZ2luYWxFdmVudFRhcmdldChldmVudCkge1xyXG4gICAgcmV0dXJuIChldmVudC5wYXRoICYmIGV2ZW50LnBhdGhbMF0pIHx8IChldmVudC5kZWVwUGF0aCAmJiBldmVudC5kZWVwUGF0aFswXSkgfHwgZXZlbnQudGFyZ2V0O1xyXG59XHJcbmZ1bmN0aW9uIGhhbmRsZVNlbGZFdmVudChldmVudCkge1xyXG4gICAgdmFyIHRhcmdldCA9IGZpbmRPcmlnaW5hbEV2ZW50VGFyZ2V0KGV2ZW50KTtcclxuICAgIGlmICh0aGlzLnRhcmdldCAhPT0gdGFyZ2V0KSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zZWxmRXZlbnRDYWxsU291cmNlKGV2ZW50KTtcclxufVxyXG52YXIgU2VsZkJpbmRpbmdCZWhhdmlvciA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBTZWxmQmluZGluZ0JlaGF2aW9yKCkge1xyXG4gICAgfVxyXG4gICAgU2VsZkJpbmRpbmdCZWhhdmlvci5wcm90b3R5cGUuYmluZCA9IGZ1bmN0aW9uIChiaW5kaW5nLCBzb3VyY2UpIHtcclxuICAgICAgICBpZiAoIWJpbmRpbmcuY2FsbFNvdXJjZSB8fCAhYmluZGluZy50YXJnZXRFdmVudCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NlbGYgYmluZGluZyBiZWhhdmlvciBvbmx5IHN1cHBvcnRzIGV2ZW50LicpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBiaW5kaW5nLnNlbGZFdmVudENhbGxTb3VyY2UgPSBiaW5kaW5nLmNhbGxTb3VyY2U7XHJcbiAgICAgICAgYmluZGluZy5jYWxsU291cmNlID0gaGFuZGxlU2VsZkV2ZW50O1xyXG4gICAgfTtcclxuICAgIFNlbGZCaW5kaW5nQmVoYXZpb3IucHJvdG90eXBlLnVuYmluZCA9IGZ1bmN0aW9uIChiaW5kaW5nLCBzb3VyY2UpIHtcclxuICAgICAgICBiaW5kaW5nLmNhbGxTb3VyY2UgPSBiaW5kaW5nLnNlbGZFdmVudENhbGxTb3VyY2U7XHJcbiAgICAgICAgYmluZGluZy5zZWxmRXZlbnRDYWxsU291cmNlID0gbnVsbDtcclxuICAgIH07XHJcbiAgICBTZWxmQmluZGluZ0JlaGF2aW9yID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgYmluZGluZ0JlaGF2aW9yKCdzZWxmJylcclxuICAgIF0sIFNlbGZCaW5kaW5nQmVoYXZpb3IpO1xyXG4gICAgcmV0dXJuIFNlbGZCaW5kaW5nQmVoYXZpb3I7XHJcbn0oKSk7XG5cbnZhciBCaW5kaW5nU2lnbmFsZXIgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQmluZGluZ1NpZ25hbGVyKCkge1xyXG4gICAgICAgIHRoaXMuc2lnbmFscyA9IHt9O1xyXG4gICAgfVxyXG4gICAgQmluZGluZ1NpZ25hbGVyLnByb3RvdHlwZS5zaWduYWwgPSBmdW5jdGlvbiAobmFtZSkge1xyXG4gICAgICAgIHZhciBiaW5kaW5ncyA9IHRoaXMuc2lnbmFsc1tuYW1lXTtcclxuICAgICAgICBpZiAoIWJpbmRpbmdzKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGkgPSBiaW5kaW5ncy5sZW5ndGg7XHJcbiAgICAgICAgd2hpbGUgKGktLSkge1xyXG4gICAgICAgICAgICBiaW5kaW5nc1tpXS5jYWxsKHNvdXJjZUNvbnRleHQpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICByZXR1cm4gQmluZGluZ1NpZ25hbGVyO1xyXG59KCkpO1xuXG52YXIgU2lnbmFsQmluZGluZ0JlaGF2aW9yID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIFNpZ25hbEJpbmRpbmdCZWhhdmlvcihiaW5kaW5nU2lnbmFsZXIpIHtcclxuICAgICAgICB0aGlzLnNpZ25hbHMgPSBiaW5kaW5nU2lnbmFsZXIuc2lnbmFscztcclxuICAgIH1cclxuICAgIFNpZ25hbEJpbmRpbmdCZWhhdmlvci5pbmplY3QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbQmluZGluZ1NpZ25hbGVyXTsgfTtcclxuICAgIFNpZ25hbEJpbmRpbmdCZWhhdmlvci5wcm90b3R5cGUuYmluZCA9IGZ1bmN0aW9uIChiaW5kaW5nLCBzb3VyY2UpIHtcclxuICAgICAgICB2YXIgbmFtZXMgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDI7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICBuYW1lc1tfaSAtIDJdID0gYXJndW1lbnRzW19pXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFiaW5kaW5nLnVwZGF0ZVRhcmdldCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ09ubHkgcHJvcGVydHkgYmluZGluZ3MgYW5kIHN0cmluZyBpbnRlcnBvbGF0aW9uIGJpbmRpbmdzIGNhbiBiZSBzaWduYWxlZC4gIFRyaWdnZXIsIGRlbGVnYXRlIGFuZCBjYWxsIGJpbmRpbmdzIGNhbm5vdCBiZSBzaWduYWxlZC4nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHNpZ25hbHMgPSB0aGlzLnNpZ25hbHM7XHJcbiAgICAgICAgaWYgKG5hbWVzLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgICAgICB2YXIgbmFtZV8xID0gbmFtZXNbMF07XHJcbiAgICAgICAgICAgIHZhciBiaW5kaW5ncyA9IHNpZ25hbHNbbmFtZV8xXSB8fCAoc2lnbmFsc1tuYW1lXzFdID0gW10pO1xyXG4gICAgICAgICAgICBiaW5kaW5ncy5wdXNoKGJpbmRpbmcpO1xyXG4gICAgICAgICAgICBiaW5kaW5nLnNpZ25hbE5hbWUgPSBuYW1lXzE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKG5hbWVzLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgdmFyIGkgPSBuYW1lcy5sZW5ndGg7XHJcbiAgICAgICAgICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgICAgICAgICAgIHZhciBuYW1lXzIgPSBuYW1lc1tpXTtcclxuICAgICAgICAgICAgICAgIHZhciBiaW5kaW5ncyA9IHNpZ25hbHNbbmFtZV8yXSB8fCAoc2lnbmFsc1tuYW1lXzJdID0gW10pO1xyXG4gICAgICAgICAgICAgICAgYmluZGluZ3MucHVzaChiaW5kaW5nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBiaW5kaW5nLnNpZ25hbE5hbWUgPSBuYW1lcztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2lnbmFsIG5hbWUgaXMgcmVxdWlyZWQuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFNpZ25hbEJpbmRpbmdCZWhhdmlvci5wcm90b3R5cGUudW5iaW5kID0gZnVuY3Rpb24gKGJpbmRpbmcsIHNvdXJjZSkge1xyXG4gICAgICAgIHZhciBzaWduYWxzID0gdGhpcy5zaWduYWxzO1xyXG4gICAgICAgIHZhciBuYW1lID0gYmluZGluZy5zaWduYWxOYW1lO1xyXG4gICAgICAgIGJpbmRpbmcuc2lnbmFsTmFtZSA9IG51bGw7XHJcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkobmFtZSkpIHtcclxuICAgICAgICAgICAgdmFyIG5hbWVzID0gbmFtZTtcclxuICAgICAgICAgICAgdmFyIGkgPSBuYW1lcy5sZW5ndGg7XHJcbiAgICAgICAgICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgICAgICAgICAgIHZhciBuID0gbmFtZXNbaV07XHJcbiAgICAgICAgICAgICAgICB2YXIgYmluZGluZ3MgPSBzaWduYWxzW25dO1xyXG4gICAgICAgICAgICAgICAgYmluZGluZ3Muc3BsaWNlKGJpbmRpbmdzLmluZGV4T2YoYmluZGluZyksIDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgYmluZGluZ3MgPSBzaWduYWxzW25hbWVdO1xyXG4gICAgICAgICAgICBiaW5kaW5ncy5zcGxpY2UoYmluZGluZ3MuaW5kZXhPZihiaW5kaW5nKSwgMSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFNpZ25hbEJpbmRpbmdCZWhhdmlvciA9IF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIGJpbmRpbmdCZWhhdmlvcignc2lnbmFsJylcclxuICAgIF0sIFNpZ25hbEJpbmRpbmdCZWhhdmlvcik7XHJcbiAgICByZXR1cm4gU2lnbmFsQmluZGluZ0JlaGF2aW9yO1xyXG59KCkpO1xuXG52YXIgZXZlbnROYW1lc1JlcXVpcmVkID0gJ1RoZSB1cGRhdGVUcmlnZ2VyIGJpbmRpbmcgYmVoYXZpb3IgcmVxdWlyZXMgYXQgbGVhc3Qgb25lIGV2ZW50IG5hbWUgYXJndW1lbnQ6IGVnIDxpbnB1dCB2YWx1ZS5iaW5kPVwiZmlyc3ROYW1lICYgdXBkYXRlVHJpZ2dlcjpcXCdibHVyXFwnXCI+JztcclxudmFyIG5vdEFwcGxpY2FibGVNZXNzYWdlID0gJ1RoZSB1cGRhdGVUcmlnZ2VyIGJpbmRpbmcgYmVoYXZpb3IgY2FuIG9ubHkgYmUgYXBwbGllZCB0byB0d28td2F5LyBmcm9tLXZpZXcgYmluZGluZ3Mgb24gaW5wdXQvc2VsZWN0IGVsZW1lbnRzLic7XHJcbnZhciBVcGRhdGVUcmlnZ2VyQmluZGluZ0JlaGF2aW9yID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIFVwZGF0ZVRyaWdnZXJCaW5kaW5nQmVoYXZpb3IoKSB7XHJcbiAgICB9XHJcbiAgICBVcGRhdGVUcmlnZ2VyQmluZGluZ0JlaGF2aW9yLnByb3RvdHlwZS5iaW5kID0gZnVuY3Rpb24gKGJpbmRpbmcsIHNvdXJjZSkge1xyXG4gICAgICAgIHZhciBldmVudHMgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDI7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICBldmVudHNbX2kgLSAyXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChldmVudHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihldmVudE5hbWVzUmVxdWlyZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoYmluZGluZy5tb2RlICE9PSBiaW5kaW5nTW9kZS50d29XYXkgJiYgYmluZGluZy5tb2RlICE9PSBiaW5kaW5nTW9kZS5mcm9tVmlldykge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3Iobm90QXBwbGljYWJsZU1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgdGFyZ2V0T2JzZXJ2ZXIgPSBiaW5kaW5nLm9ic2VydmVyTG9jYXRvci5nZXRPYnNlcnZlcihiaW5kaW5nLnRhcmdldCwgYmluZGluZy50YXJnZXRQcm9wZXJ0eSk7XHJcbiAgICAgICAgaWYgKCF0YXJnZXRPYnNlcnZlci5oYW5kbGVyKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihub3RBcHBsaWNhYmxlTWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGJpbmRpbmcudGFyZ2V0T2JzZXJ2ZXIgPSB0YXJnZXRPYnNlcnZlcjtcclxuICAgICAgICB0YXJnZXRPYnNlcnZlci5vcmlnaW5hbEhhbmRsZXIgPSBiaW5kaW5nLnRhcmdldE9ic2VydmVyLmhhbmRsZXI7XHJcbiAgICAgICAgdmFyIGhhbmRsZXIgPSBuZXcgRXZlbnRTdWJzY3JpYmVyKGV2ZW50cyk7XHJcbiAgICAgICAgdGFyZ2V0T2JzZXJ2ZXIuaGFuZGxlciA9IGhhbmRsZXI7XHJcbiAgICB9O1xyXG4gICAgVXBkYXRlVHJpZ2dlckJpbmRpbmdCZWhhdmlvci5wcm90b3R5cGUudW5iaW5kID0gZnVuY3Rpb24gKGJpbmRpbmcsIHNvdXJjZSkge1xyXG4gICAgICAgIHZhciB0YXJnZXRPYnNlcnZlciA9IGJpbmRpbmcudGFyZ2V0T2JzZXJ2ZXI7XHJcbiAgICAgICAgdGFyZ2V0T2JzZXJ2ZXIuaGFuZGxlci5kaXNwb3NlKCk7XHJcbiAgICAgICAgdGFyZ2V0T2JzZXJ2ZXIuaGFuZGxlciA9IHRhcmdldE9ic2VydmVyLm9yaWdpbmFsSGFuZGxlcjtcclxuICAgICAgICB0YXJnZXRPYnNlcnZlci5vcmlnaW5hbEhhbmRsZXIgPSBudWxsO1xyXG4gICAgfTtcclxuICAgIFVwZGF0ZVRyaWdnZXJCaW5kaW5nQmVoYXZpb3IgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICBiaW5kaW5nQmVoYXZpb3IoJ3VwZGF0ZVRyaWdnZXInKVxyXG4gICAgXSwgVXBkYXRlVHJpZ2dlckJpbmRpbmdCZWhhdmlvcik7XHJcbiAgICByZXR1cm4gVXBkYXRlVHJpZ2dlckJpbmRpbmdCZWhhdmlvcjtcclxufSgpKTtcblxuZnVuY3Rpb24gX2NyZWF0ZUR5bmFtaWNFbGVtZW50KF9hKSB7XHJcbiAgICB2YXIgbmFtZSA9IF9hLm5hbWUsIHZpZXdVcmwgPSBfYS52aWV3VXJsLCBiaW5kYWJsZU5hbWVzID0gX2EuYmluZGFibGVOYW1lcywgdXNlU2hhZG93RE9NbW9kZSA9IF9hLnVzZVNoYWRvd0RPTW1vZGU7XHJcbiAgICB2YXIgRHluYW1pY0VsZW1lbnQgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIER5bmFtaWNFbGVtZW50KCkge1xyXG4gICAgICAgIH1cclxuICAgICAgICBEeW5hbWljRWxlbWVudC5wcm90b3R5cGUuYmluZCA9IGZ1bmN0aW9uIChiaW5kaW5nQ29udGV4dCkge1xyXG4gICAgICAgICAgICB0aGlzLiRwYXJlbnQgPSBiaW5kaW5nQ29udGV4dDtcclxuICAgICAgICB9O1xyXG4gICAgICAgIER5bmFtaWNFbGVtZW50ID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgICAgIGN1c3RvbUVsZW1lbnQobmFtZSksXHJcbiAgICAgICAgICAgIHVzZVZpZXcodmlld1VybClcclxuICAgICAgICBdLCBEeW5hbWljRWxlbWVudCk7XHJcbiAgICAgICAgcmV0dXJuIER5bmFtaWNFbGVtZW50O1xyXG4gICAgfSgpKTtcclxuICAgIGZvciAodmFyIGkgPSAwLCBpaSA9IGJpbmRhYmxlTmFtZXMubGVuZ3RoOyBpIDwgaWk7ICsraSkge1xyXG4gICAgICAgIGJpbmRhYmxlKGJpbmRhYmxlTmFtZXNbaV0pKER5bmFtaWNFbGVtZW50KTtcclxuICAgIH1cclxuICAgIHN3aXRjaCAodXNlU2hhZG93RE9NbW9kZSkge1xyXG4gICAgICAgIGNhc2UgJ29wZW4nOlxyXG4gICAgICAgICAgICB1c2VTaGFkb3dET00oeyBtb2RlOiAnb3BlbicgfSkoRHluYW1pY0VsZW1lbnQpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlICdjbG9zZWQnOlxyXG4gICAgICAgICAgICB1c2VTaGFkb3dET00oeyBtb2RlOiAnY2xvc2VkJyB9KShEeW5hbWljRWxlbWVudCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJyc6XHJcbiAgICAgICAgICAgIHVzZVNoYWRvd0RPTShEeW5hbWljRWxlbWVudCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgbnVsbDpcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgZ2V0TG9nZ2VyKCdhdXJlbGlhLWh0bWwtb25seS1lbGVtZW50JylcclxuICAgICAgICAgICAgICAgIC53YXJuKFwiRXhwZWN0ZWQgJ3VzZS1zaGFkb3ctZG9tJyB2YWx1ZSB0byBiZSBcXFwiY2xvc2VcXFwiLCBcXFwib3BlblxcXCIgb3IgXFxcIlxcXCIsIHJlY2VpdmVkIFwiICsgdXNlU2hhZG93RE9NbW9kZSk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIER5bmFtaWNFbGVtZW50O1xyXG59XG5cbmZ1bmN0aW9uIGdldEVsZW1lbnROYW1lKGFkZHJlc3MpIHtcclxuICAgIHJldHVybiAvKFteXFwvXlxcP10rKVxcLmh0bWwvaS5leGVjKGFkZHJlc3MpWzFdLnRvTG93ZXJDYXNlKCk7XHJcbn1cclxuZnVuY3Rpb24gY29uZmlndXJlKGNvbmZpZykge1xyXG4gICAgdmFyIHZpZXdFbmdpbmUgPSBjb25maWcuY29udGFpbmVyLmdldChWaWV3RW5naW5lKTtcclxuICAgIHZhciBsb2FkZXIgPSBjb25maWcuYXVyZWxpYS5sb2FkZXI7XHJcbiAgICB2aWV3RW5naW5lLmFkZFJlc291cmNlUGx1Z2luKCcuaHRtbCcsIHtcclxuICAgICAgICAnZmV0Y2gnOiBmdW5jdGlvbiAodmlld1VybCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbG9hZGVyLmxvYWRUZW1wbGF0ZSh2aWV3VXJsKS50aGVuKGZ1bmN0aW9uIChyZWdpc3RyeUVudHJ5KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgICAgICAgICB2YXIgYmluZGFibGVOYW1lcyA9IHJlZ2lzdHJ5RW50cnkudGVtcGxhdGUuZ2V0QXR0cmlidXRlKCdiaW5kYWJsZScpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHVzZVNoYWRvd0RPTW1vZGUgPSByZWdpc3RyeUVudHJ5LnRlbXBsYXRlLmdldEF0dHJpYnV0ZSgndXNlLXNoYWRvdy1kb20nKTtcclxuICAgICAgICAgICAgICAgIHZhciBuYW1lID0gZ2V0RWxlbWVudE5hbWUodmlld1VybCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoYmluZGFibGVOYW1lcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGJpbmRhYmxlTmFtZXMgPSBiaW5kYWJsZU5hbWVzLnNwbGl0KCcsJykubWFwKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LnRyaW0oKTsgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVnaXN0cnlFbnRyeS50ZW1wbGF0ZS5yZW1vdmVBdHRyaWJ1dGUoJ2JpbmRhYmxlJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBiaW5kYWJsZU5hbWVzID0gW107XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gX2EgPSB7fSwgX2FbbmFtZV0gPSBfY3JlYXRlRHluYW1pY0VsZW1lbnQoeyBuYW1lOiBuYW1lLCB2aWV3VXJsOiB2aWV3VXJsLCBiaW5kYWJsZU5hbWVzOiBiaW5kYWJsZU5hbWVzLCB1c2VTaGFkb3dET01tb2RlOiB1c2VTaGFkb3dET01tb2RlIH0pLCBfYTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cblxuZnVuY3Rpb24gY29uZmlndXJlJDEoY29uZmlnKSB7XHJcbiAgICBpbmplY3RBdXJlbGlhSGlkZVN0eWxlQXRIZWFkKCk7XHJcbiAgICBjb25maWcuZ2xvYmFsUmVzb3VyY2VzKENvbXBvc2UsIElmLCBFbHNlLCBXaXRoLCBSZXBlYXQsIFNob3csIEhpZGUsIFJlcGxhY2VhYmxlLCBGb2N1cywgU2FuaXRpemVIVE1MVmFsdWVDb252ZXJ0ZXIsIE9uZVRpbWVCaW5kaW5nQmVoYXZpb3IsIE9uZVdheUJpbmRpbmdCZWhhdmlvciwgVG9WaWV3QmluZGluZ0JlaGF2aW9yLCBGcm9tVmlld0JpbmRpbmdCZWhhdmlvciwgVHdvV2F5QmluZGluZ0JlaGF2aW9yLCBUaHJvdHRsZUJpbmRpbmdCZWhhdmlvciwgRGVib3VuY2VCaW5kaW5nQmVoYXZpb3IsIFNlbGZCaW5kaW5nQmVoYXZpb3IsIFNpZ25hbEJpbmRpbmdCZWhhdmlvciwgVXBkYXRlVHJpZ2dlckJpbmRpbmdCZWhhdmlvciwgQXR0ckJpbmRpbmdCZWhhdmlvcik7XHJcbiAgICBjb25maWd1cmUoY29uZmlnKTtcclxuICAgIHZhciB2aWV3RW5naW5lID0gY29uZmlnLmNvbnRhaW5lci5nZXQoVmlld0VuZ2luZSk7XHJcbiAgICB2YXIgc3R5bGVSZXNvdXJjZVBsdWdpbiA9IHtcclxuICAgICAgICBmZXRjaDogZnVuY3Rpb24gKGFkZHJlc3MpIHtcclxuICAgICAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgICAgICByZXR1cm4gX2EgPSB7fSwgX2FbYWRkcmVzc10gPSBfY3JlYXRlQ1NTUmVzb3VyY2UoYWRkcmVzcyksIF9hO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBbJy5jc3MnLCAnLmxlc3MnLCAnLnNhc3MnLCAnLnNjc3MnLCAnLnN0eWwnXS5mb3JFYWNoKGZ1bmN0aW9uIChleHQpIHsgcmV0dXJuIHZpZXdFbmdpbmUuYWRkUmVzb3VyY2VQbHVnaW4oZXh0LCBzdHlsZVJlc291cmNlUGx1Z2luKTsgfSk7XHJcbn1cblxuZXhwb3J0IHsgQWJzdHJhY3RSZXBlYXRlciwgQXJyYXlSZXBlYXRTdHJhdGVneSwgQXR0ckJpbmRpbmdCZWhhdmlvciwgQmluZGluZ1NpZ25hbGVyLCBDb21wb3NlLCBEZWJvdW5jZUJpbmRpbmdCZWhhdmlvciwgRWxzZSwgRm9jdXMsIEZyb21WaWV3QmluZGluZ0JlaGF2aW9yLCBIVE1MU2FuaXRpemVyLCBIaWRlLCBJZiwgTWFwUmVwZWF0U3RyYXRlZ3ksIE51bGxSZXBlYXRTdHJhdGVneSwgTnVtYmVyUmVwZWF0U3RyYXRlZ3ksIE9uZVRpbWVCaW5kaW5nQmVoYXZpb3IsIE9uZVdheUJpbmRpbmdCZWhhdmlvciwgUmVwZWF0LCBSZXBlYXRTdHJhdGVneUxvY2F0b3IsIFJlcGxhY2VhYmxlLCBTYW5pdGl6ZUhUTUxWYWx1ZUNvbnZlcnRlciwgU2VsZkJpbmRpbmdCZWhhdmlvciwgU2V0UmVwZWF0U3RyYXRlZ3ksIFNob3csIFNpZ25hbEJpbmRpbmdCZWhhdmlvciwgVGhyb3R0bGVCaW5kaW5nQmVoYXZpb3IsIFRvVmlld0JpbmRpbmdCZWhhdmlvciwgVHdvV2F5QmluZGluZ0JlaGF2aW9yLCBVcGRhdGVUcmlnZ2VyQmluZGluZ0JlaGF2aW9yLCBXaXRoLCBjb25maWd1cmUkMSBhcyBjb25maWd1cmUsIGNyZWF0ZUZ1bGxPdmVycmlkZUNvbnRleHQsIGdldEl0ZW1zU291cmNlRXhwcmVzc2lvbiwgaXNPbmVUaW1lLCB1bndyYXBFeHByZXNzaW9uLCB1cGRhdGVPbmVUaW1lQmluZGluZywgdXBkYXRlT3ZlcnJpZGVDb250ZXh0LCB2aWV3c1JlcXVpcmVMaWZlY3ljbGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1cmVsaWEtdGVtcGxhdGluZy1yZXNvdXJjZXMuanMubWFwXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///aurelia-templating-resources\n");

/***/ })

}]);